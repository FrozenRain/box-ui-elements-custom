{"version":3,"sources":["webpack:///./node_modules/filesize/lib/filesize.js","webpack:///./node_modules/lodash/isFinite.js","webpack:///./node_modules/react-process-string/dist/index.js","webpack:///./src/common/messages.js","webpack:///./src/common/variables.js","webpack:///./src/components/collapsible/index.js","webpack:///./src/components/label/HiddenLabel.js","webpack:///./src/components/label/InfoIconWithTooltip.js","webpack:///./src/components/label/Label.js","webpack:///./src/components/label/Label.scss","webpack:///./src/components/label/LabelPrimitive.js","webpack:///./src/components/label/StandardLabel.js","webpack:///./src/components/label/index.js","webpack:///./src/elements/common/date/DateField.js","webpack:///./src/elements/common/date/DateField.scss","webpack:///./src/elements/common/date/index.js","webpack:///./src/elements/content-sidebar/DetailsSidebar.js","webpack:///./src/elements/content-sidebar/DetailsSidebar.scss","webpack:///./src/elements/content-sidebar/SidebarAccessStats.js","webpack:///./src/elements/content-sidebar/SidebarClassification.js","webpack:///./src/elements/content-sidebar/SidebarClassification.scss","webpack:///./src/elements/content-sidebar/SidebarFileProperties.js","webpack:///./src/elements/content-sidebar/SidebarNotices.js","webpack:///./src/elements/content-sidebar/SidebarVersions.js","webpack:///./src/elements/content-sidebar/SidebarVersions.scss","webpack:///./src/elements/content-sidebar/withErrorHandling.js","webpack:///./src/features/access-stats/AccessStats.js","webpack:///./src/features/access-stats/AccessStats.scss","webpack:///./src/features/access-stats/AccessStatsItem.js","webpack:///./src/features/access-stats/AccessStatsItem.scss","webpack:///./src/features/access-stats/AccessStatsItemsList.js","webpack:///./src/features/access-stats/messages.js","webpack:///./src/features/classification/Classification.js","webpack:///./src/features/classification/Classification.scss","webpack:///./src/features/classification/ClassifiedBadge.js","webpack:///./src/features/classification/ClassifiedBadge.scss","webpack:///./src/features/classification/EditClassificationButton.js","webpack:///./src/features/classification/index.js","webpack:///./src/features/classification/messages.js","webpack:///./src/features/item-details/EditableDescription.js","webpack:///./src/features/item-details/EditableURL.js","webpack:///./src/features/item-details/ItemExpirationNotice.js","webpack:///./src/features/item-details/ItemProperties.js","webpack:///./src/features/item-details/ItemProperties.scss","webpack:///./src/features/item-details/ReadonlyDescription.js","webpack:///./src/features/item-details/RetentionPolicy.js","webpack:///./src/features/item-details/SharedLinkExpirationNotice.js","webpack:///./src/features/item-details/VersionHistoryLink.js","webpack:///./src/features/item-details/messages.js","webpack:///./src/features/security/SecurityBadge.js","webpack:///./src/features/security/SecurityBadge.scss","webpack:///./src/features/security/index.js","webpack:///./src/icons/general/IconComment.js","webpack:///./src/icons/general/IconDownloadSolid.js","webpack:///./src/icons/general/IconEye.js","webpack:///./src/icons/general/IconInfo.js","webpack:///./src/icons/general/IconPencilSolid.js","webpack:///./src/icons/general/IconSecurityClassification.js","webpack:///./src/icons/general/IconVerified.js","webpack:///./src/utils/getFileSize.js"],"names":["messages","defineMessages","cancel","close","copy","copied","done","okay","save","send","optional","pillSelectorPlaceholder","messageSelectorPlaceholder","invalidInputError","minLengthError","maxLengthError","invalidEmailError","invalidURLError","invalidUserError","requiredFieldError","BOX_BLUE","SEESEE","RESIN_TAG_TARGET","HIDDEN_CLASS_NAME","HiddenLabel","children","labelContent","InfoIconWithTooltip","className","iconProps","tooltipText","OptionalFormattedMessage","commonMessages","Label","text","tooltip","infoTooltip","infoIconProps","showOptionalText","hideLabel","push","LabelPrimitive","rest","classNames","StandardLabel","label","DEFAULT_DATE_FORMAT","weekday","month","year","day","DateField","date","dateFormat","omitCommas","intl","relative","capitalize","d","Date","isTodaysDate","isToday","isYesterdaysDate","isYesterday","Message","today","yesterday","formattedDate","formatDate","replace","injectIntl","MARK_NAME_JS_READY","ORIGIN_DETAILS_SIDEBAR","EVENT_JS_READY","mark","DetailsSidebar","React","PureComponent","constructor","props","file","setState","fileError","undefined","e","code","onError","inlineError","title","fileDescriptionInlineErrorTitleMessage","content","defaultInlineErrorContentMessage","newDescription","api","state","getBadItemError","description","getFileAPI","setFileDescription","descriptionChangeSuccessCallback","descriptionChangeErrorCallback","hasAccessStats","isForbidden","getProp","HTTP_STATUS_CODE_FORBIDDEN","accessStatsError","error","fileAccessStatsPermissionsError","maskError","errorHeader","fileAccessStatsErrorHeaderMessage","errorSubHeader","defaultErrorMaskSubHeaderMessage","isLoadingAccessStats","accessStats","IS_ERROR_DISPLAYED","logger","onReadyMetric","endMarkName","componentDidMount","fetchFile","fetchAccessStats","componentDidUpdate","prevHasAccessStats","hasAccessStatsChanged","successCallback","fetchFileSuccessCallback","errorCallback","fetchFileErrorCallback","fileId","getFile","fields","SIDEBAR_FIELDS_TO_FETCH","getFileAccessStatsAPI","getFileAccessStats","fetchAccessStatsSuccessCallback","fetchAccessStatsErrorCallback","refresh","render","classification","elementId","hasProperties","hasNotices","hasClassification","hasRetentionPolicy","hasVersions","onAccessStatsClick","onVersionHistoryClick","onClassificationClick","onRetentionPolicyExtendClick","retentionPolicy","SIDEBAR_VIEW_DETAILS","sidebarDetailsTitle","SECTION_TARGETS","FILE_PROPERTIES","sidebarProperties","onDescriptionChange","noop","flow","withLogger","withErrorBoundary","withAPIContext","SidebarAccessStats","has_count_overflowed","preview_count","comment_count","download_count","edit_count","isFinite","errorMessage","formatMessage","ACCESS_STATS","sidebarAccessStats","INTERACTION_TARGET","DETAILS_TARGETS","COMMENTS","DOWNLOADS","PREVIEWS","VIEWS","EDITS","isBoxNote","VIEW_DETAILS","withErrorHandling","SidebarClassification","onEdit","isEditable","FIELD_PERMISSIONS_CAN_UPLOAD","CLASSIFICATION","classificationMessages","SidebarFileProperties","isLoading","content_created_at","DESCRIPTION","content_modified_at","openModal","getFileSize","size","locale","ONE_MINUTE_IN_MS","NOTICE_DATE_FORMAT","SidebarNotices","itemExpiration","sharedLinkExpiration","addTime","SidebarVersions","version_number","versionNumber","parseInt","VERSION_HISTORY","WrappedComponent","errorCode","AccessStats","commentCount","commentStatButtonProps","downloadCount","downloadStatButtonProps","editCount","editStatButtonProps","hasCountOverflowed","openAccessStatsModal","previewCount","previewStatButtonProps","viewMoreButtonProps","viewStatButtonProps","accessStatsViewDetails","statsAttributesTable","preview","icon","IconEye","message","accessStatsPreviews","view","accessStatsViews","download","IconDownloadSolid","accessStatsDownloads","comment","IconComment","accessStatsComments","edit","IconPencilSolid","accessStatsEdits","ICON_COLOR","ITEM_CONTENT_CLASS_NAME","AccessStatsItem","type","count","statButtonProps","statAttributes","IconComponent","labelMessage","itemContent","AccessStatsItemsList","STYLE_INLINE","STYLE_TOOLTIP","Classification","definition","messageStyle","name","onClick","isClassified","hasDefinition","isTooltipMessageEnabled","isInlineMessageEnabled","isNotClassifiedMessageVisible","missing","ClassifiedBadge","tooltipPosition","isClickable","isTooltipDisabled","badge","bdlYellorange","EditClassificationButton","isEditing","add","interaction","EditableDescription","value","event","currentTarget","prevValue","textAreaProps","handleBlur","handleChange","descriptionPlaceholder","VALUE_MISSING","TYPE_MISMATCH","errorMap","EditableURL","inputEl","valid","valueMissing","validity","onValidURLChange","ref","url","handleFocus","urlPlaceholder","FILE","FOLDER","WEBLINK","ItemExpirationNotice","expiration","itemType","messageID","propTypes","PropTypes","node","isRequired","oneOf","datetimeOptions","hour","minute","ItemProperties","createdAt","descriptionTextareaProps","enterpriseOwner","modifiedAt","owner","retentionPolicyProps","trashedAt","uploader","descriptionId","uniqueid","created","modified","deleted","oneOfType","number","string","object","func","NEWLINE_REGEX","URL_REGEX","ReadonlyDescription","processString","regex","fn","key","result","RetentionPolicy","dispositionTime","policyType","retentionPolicyDescription","retentionPolicyExpiration","retentionPolicyExtend","SharedLinkExpirationNotice","VersionHistoryLink","versionCount","formattedMessageComponent","savedVersions","defaultProps","bookmarkExpiration","fileExpiration","folderExpiration","SecurityBadge","color","height","width","IconInfo","IconSecurityClassification","bdlGray","strokeWidth","classes","IconVerified","bdlGreenLight","opacity","defaultDigitalUnits","bcp47TagToDigitalUnits","fi","fr","ru","settings","round","localizedUnits","symbols","reduce","unit","index","filesize"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,8CAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,IAA8B;AACnC;AACA,EAAE,MAAM,EAMN;AACF,CAAC;;;;;;;;;;;;;AClLD,WAAW,mBAAO,CAAC,+CAAS;;AAE5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACnCa;;AAEb;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA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","file":"details-sidebar.js","sourcesContent":["\"use strict\";\n\n/**\r\n * filesize\r\n *\r\n * @copyright 2019 Jason Mulligan <jason.mulligan@avoidwork.com>\r\n * @license BSD-3-Clause\r\n * @version 4.1.2\r\n */\n(function (global) {\n\tvar b = /^(b|B)$/,\n\t    symbol = {\n\t\tiec: {\n\t\t\tbits: [\"b\", \"Kib\", \"Mib\", \"Gib\", \"Tib\", \"Pib\", \"Eib\", \"Zib\", \"Yib\"],\n\t\t\tbytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\n\t\t},\n\t\tjedec: {\n\t\t\tbits: [\"b\", \"Kb\", \"Mb\", \"Gb\", \"Tb\", \"Pb\", \"Eb\", \"Zb\", \"Yb\"],\n\t\t\tbytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n\t\t}\n\t},\n\t    fullform = {\n\t\tiec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\n\t\tjedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\n\t};\n\n\t/**\r\n  * filesize\r\n  *\r\n  * @method filesize\r\n  * @param  {Mixed}   arg        String, Int or Float to transform\r\n  * @param  {Object}  descriptor [Optional] Flags\r\n  * @return {String}             Readable file size String\r\n  */\n\tfunction filesize(arg) {\n\t\tvar descriptor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tvar result = [],\n\t\t    val = 0,\n\t\t    e = void 0,\n\t\t    base = void 0,\n\t\t    bits = void 0,\n\t\t    ceil = void 0,\n\t\t    full = void 0,\n\t\t    fullforms = void 0,\n\t\t    locale = void 0,\n\t\t    neg = void 0,\n\t\t    num = void 0,\n\t\t    output = void 0,\n\t\t    round = void 0,\n\t\t    unix = void 0,\n\t\t    separator = void 0,\n\t\t    spacer = void 0,\n\t\t    standard = void 0,\n\t\t    symbols = void 0;\n\n\t\tif (isNaN(arg)) {\n\t\t\tthrow new TypeError(\"Invalid number\");\n\t\t}\n\n\t\tbits = descriptor.bits === true;\n\t\tunix = descriptor.unix === true;\n\t\tbase = descriptor.base || 2;\n\t\tround = descriptor.round !== void 0 ? descriptor.round : unix ? 1 : 2;\n\t\tlocale = descriptor.locale !== void 0 ? descriptor.locale : \"\";\n\t\tseparator = descriptor.separator !== void 0 ? descriptor.separator : \"\";\n\t\tspacer = descriptor.spacer !== void 0 ? descriptor.spacer : unix ? \"\" : \" \";\n\t\tsymbols = descriptor.symbols || {};\n\t\tstandard = base === 2 ? descriptor.standard || \"jedec\" : \"jedec\";\n\t\toutput = descriptor.output || \"string\";\n\t\tfull = descriptor.fullform === true;\n\t\tfullforms = descriptor.fullforms instanceof Array ? descriptor.fullforms : [];\n\t\te = descriptor.exponent !== void 0 ? descriptor.exponent : -1;\n\t\tnum = Number(arg);\n\t\tneg = num < 0;\n\t\tceil = base > 2 ? 1000 : 1024;\n\n\t\t// Flipping a negative number to determine the size\n\t\tif (neg) {\n\t\t\tnum = -num;\n\t\t}\n\n\t\t// Determining the exponent\n\t\tif (e === -1 || isNaN(e)) {\n\t\t\te = Math.floor(Math.log(num) / Math.log(ceil));\n\n\t\t\tif (e < 0) {\n\t\t\t\te = 0;\n\t\t\t}\n\t\t}\n\n\t\t// Exceeding supported length, time to reduce & multiply\n\t\tif (e > 8) {\n\t\t\te = 8;\n\t\t}\n\n\t\tif (output === \"exponent\") {\n\t\t\treturn e;\n\t\t}\n\n\t\t// Zero is now a special case because bytes divide by 1\n\t\tif (num === 0) {\n\t\t\tresult[0] = 0;\n\t\t\tresult[1] = unix ? \"\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\n\t\t} else {\n\t\t\tval = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));\n\n\t\t\tif (bits) {\n\t\t\t\tval = val * 8;\n\n\t\t\t\tif (val >= ceil && e < 8) {\n\t\t\t\t\tval = val / ceil;\n\t\t\t\t\te++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult[0] = Number(val.toFixed(e > 0 ? round : 0));\n\t\t\tresult[1] = base === 10 && e === 1 ? bits ? \"kb\" : \"kB\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\n\n\t\t\tif (unix) {\n\t\t\t\tresult[1] = standard === \"jedec\" ? result[1].charAt(0) : e > 0 ? result[1].replace(/B$/, \"\") : result[1];\n\n\t\t\t\tif (b.test(result[1])) {\n\t\t\t\t\tresult[0] = Math.floor(result[0]);\n\t\t\t\t\tresult[1] = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Decorating a 'diff'\n\t\tif (neg) {\n\t\t\tresult[0] = -result[0];\n\t\t}\n\n\t\t// Applying custom symbol\n\t\tresult[1] = symbols[result[1]] || result[1];\n\n\t\tif (locale === true) {\n\t\t\tresult[0] = result[0].toLocaleString();\n\t\t} else if (locale.length > 0) {\n\t\t\tresult[0] = result[0].toLocaleString(locale);\n\t\t} else if (separator.length > 0) {\n\t\t\tresult[0] = result[0].toString().replace(\".\", separator);\n\t\t}\n\n\t\t// Returning Array, Object, or String (default)\n\t\tif (output === \"array\") {\n\t\t\treturn result;\n\t\t}\n\n\t\tif (full) {\n\t\t\tresult[1] = fullforms[e] ? fullforms[e] : fullform[standard][e] + (bits ? \"bit\" : \"byte\") + (result[0] === 1 ? \"\" : \"s\");\n\t\t}\n\n\t\tif (output === \"object\") {\n\t\t\treturn { value: result[0], symbol: result[1] };\n\t\t}\n\n\t\treturn result.join(spacer);\n\t}\n\n\t// Partial application for functional programming\n\tfilesize.partial = function (opt) {\n\t\treturn function (arg) {\n\t\t\treturn filesize(arg, opt);\n\t\t};\n\t};\n\n\t// CommonJS, AMD, script tag\n\tif (typeof exports !== \"undefined\") {\n\t\tmodule.exports = filesize;\n\t} else if (typeof define === \"function\" && define.amd !== void 0) {\n\t\tdefine(function () {\n\t\t\treturn filesize;\n\t\t});\n\t} else {\n\t\tglobal.filesize = filesize;\n\t}\n})(typeof window !== \"undefined\" ? window : global);\n","var root = require('./_root');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = root.isFinite;\n\n/**\n * Checks if `value` is a finite primitive number.\n *\n * **Note:** This method is based on\n * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n * @example\n *\n * _.isFinite(3);\n * // => true\n *\n * _.isFinite(Number.MIN_VALUE);\n * // => true\n *\n * _.isFinite(Infinity);\n * // => false\n *\n * _.isFinite('3');\n * // => false\n */\nfunction isFinite(value) {\n  return typeof value == 'number' && nativeIsFinite(value);\n}\n\nmodule.exports = isFinite;\n","'use strict';\n\nfunction processString(options) {\n    var key = 0;\n\n    function processInputWithRegex(option, input) {\n        if (!option.fn || typeof option.fn !== 'function') return input;\n\n        if (!option.regex || !(option.regex instanceof RegExp)) return input;\n\n        if (typeof input === 'string') {\n            var regex = option.regex;\n            var result = null;\n            var output = [];\n\n            while ((result = regex.exec(input)) !== null) {\n                var index = result.index;\n                var match = result[0];\n\n                output.push(input.substring(0, index));\n                output.push(option.fn(++key, result));\n\n                input = input.substring(index + match.length, input.length + 1);\n                regex.lastIndex = 0;\n            }\n\n            output.push(input);\n            return output;\n        } else if (Array.isArray(input)) {\n            return input.map(function (chunk) {\n                return processInputWithRegex(option, chunk);\n            });\n        } else return input;\n    }\n\n    return function (input) {\n        if (!options || !Array.isArray(options) || !options.length) return input;\n\n        options.forEach(function (option) {\n            return input = processInputWithRegex(option, input);\n        });\n\n        return input;\n    };\n}\n\nmodule.exports = processString;\n\n","// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    cancel: {\n        defaultMessage: 'Cancel',\n        description: 'Cancel button text',\n        id: 'boxui.core.cancel',\n    },\n    close: {\n        defaultMessage: 'Close',\n        description: 'Close button text',\n        id: 'boxui.core.close',\n    },\n    copy: {\n        defaultMessage: 'Copy',\n        description: 'Copy button text',\n        id: 'boxui.core.copy',\n    },\n    copied: {\n        defaultMessage: 'Copied',\n        description: 'Copy button text after user clicks on it',\n        id: 'boxui.core.copied',\n    },\n    done: {\n        defaultMessage: 'Done',\n        description: 'Done button text',\n        id: 'boxui.core.done',\n    },\n    okay: {\n        defaultMessage: 'Okay',\n        description: 'Okay button text',\n        id: 'boxui.core.okay',\n    },\n    save: {\n        defaultMessage: 'Save',\n        description: 'Save button text',\n        id: 'boxui.core.save',\n    },\n    send: {\n        defaultMessage: 'Send',\n        description: 'Send button text',\n        id: 'boxui.core.send',\n    },\n    optional: {\n        defaultMessage: 'optional',\n        description: 'Optional text for labels',\n        id: 'boxui.core.optional',\n    },\n    pillSelectorPlaceholder: {\n        defaultMessage: 'Add names or email addresses',\n        description: 'Placeholder text for the pill selector',\n        id: 'boxui.share.pillSelectorPlaceholder',\n    },\n    messageSelectorPlaceholder: {\n        defaultMessage: 'Add a message',\n        description: 'Placeholder text for message section',\n        id: 'boxui.share.messageSelectorPlaceholder',\n    },\n    invalidInputError: {\n        defaultMessage: 'Invalid Input',\n        description: 'Generic error message for a field is invalid',\n        id: 'boxui.validation.genericError',\n    },\n    minLengthError: {\n        defaultMessage: 'Input must be at least {min} characters',\n        description: 'Error message for when an input value is too short. {min} is the minimum length',\n        id: 'boxui.validation.tooShortError',\n    },\n    maxLengthError: {\n        defaultMessage: 'Input cannot exceed {max} characters',\n        description: 'Error message for when an input value is too long. {max} is the maximum length',\n        id: 'boxui.validation.tooLongError',\n    },\n    invalidEmailError: {\n        defaultMessage: 'Invalid Email Address',\n        description: 'Error message for when an invalid email is entered',\n        id: 'boxui.validation.emailError',\n    },\n    invalidURLError: {\n        defaultMessage: 'Invalid URL',\n        description: 'Error message for when an invalid URL is entered',\n        id: 'boxui.validation.URLError',\n    },\n    invalidUserError: {\n        defaultMessage: 'Invalid User',\n        description: 'Error message for when an invalid user is entered',\n        id: 'boxui.validation.invalidUserError',\n    },\n    requiredFieldError: {\n        defaultMessage: 'Required Field',\n        description: 'Error message for when a required field is missing',\n        id: 'boxui.validation.requiredError',\n    },\n});\n\nexport default messages;\n","// @flow\nconst BOX_BLUE = '#0061d5';\nconst SEESEE = '#ccc';\nconst RESIN_TAG_TARGET = 'data-resin-target';\n\nexport { BOX_BLUE, SEESEE, RESIN_TAG_TARGET };\n","// @flow\nexport { default } from './Collapsible';\n","// @flow\nimport * as React from 'react';\n\nimport LabelPrimitive from './LabelPrimitive';\n\nconst HIDDEN_CLASS_NAME = 'accessibility-hidden';\n\ntype Props = {\n    children: React.Node,\n    labelContent: React.Node,\n};\n\nconst HiddenLabel = ({ children, labelContent }: Props) => (\n    <LabelPrimitive className={HIDDEN_CLASS_NAME} labelContent={labelContent}>\n        {children}\n    </LabelPrimitive>\n);\n\nexport default HiddenLabel;\n","// @flow\nimport * as React from 'react';\n\nimport IconInfo from '../../icons/general/IconInfo';\nimport Tooltip from '../tooltip';\n\ntype Props = {\n    className?: string,\n    iconProps?: Object,\n    tooltipText: React.Node,\n};\n\nconst InfoIconWithTooltip = ({ className = '', iconProps, tooltipText }: Props) => (\n    <span key=\"infoIcon\" className={`${className} tooltip-icon-container`}>\n        <Tooltip position=\"top-center\" text={tooltipText}>\n            <span className=\"info-icon-container\">\n                <IconInfo height={16} width={16} {...iconProps} />\n            </span>\n        </Tooltip>\n    </span>\n);\n\nexport default InfoIconWithTooltip;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport commonMessages from '../../common/messages';\n\nimport InfoIconWithTooltip from './InfoIconWithTooltip';\nimport StandardLabel from './StandardLabel';\nimport HiddenLabel from './HiddenLabel';\n\nimport './Label.scss';\n\nconst OptionalFormattedMessage = () => (\n    <span className=\"label-optional\">\n        (<FormattedMessage {...commonMessages.optional} />)\n    </span>\n);\n\ntype Props = {\n    children: React.Node,\n    /** Whether the text of the label should be accessibly hidden */\n    hideLabel?: boolean,\n    infoIconProps?: Object,\n    /** Tooltip text for the info icon */\n    infoTooltip?: React.Node,\n    /** Whether to show the `(Optional)` text next to the label for an optional field */\n    showOptionalText?: boolean,\n    /** The label text */\n    text: React.Node,\n    /** Tooltip text for the label */\n    tooltip?: React.Node,\n};\n\nconst Label = ({ text, tooltip, infoTooltip, infoIconProps, showOptionalText, hideLabel, children }: Props) => {\n    const labelContent = [\n        <span key=\"labelText\">{text}</span>,\n        showOptionalText ? <OptionalFormattedMessage key=\"optionalMessage\" /> : null,\n    ];\n\n    if (infoTooltip) {\n        labelContent.push(\n            <InfoIconWithTooltip\n                key=\"infoTooltip\"\n                iconProps={{ className: 'tooltip-icon', ...infoIconProps }}\n                tooltipText={infoTooltip}\n            />,\n        );\n    }\n\n    if (hideLabel) {\n        return <HiddenLabel labelContent={labelContent}>{children}</HiddenLabel>;\n    }\n\n    return (\n        <StandardLabel labelContent={labelContent} tooltip={tooltip}>\n            {children}\n        </StandardLabel>\n    );\n};\n\nexport default Label;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n    labelContent: React.Node,\n};\n\nconst LabelPrimitive = ({ children, className, labelContent, ...rest }: Props) => (\n    // eslint-disable-next-line jsx-a11y/label-has-for\n    <label>\n        <span className={classNames('label', className)} {...rest}>\n            {labelContent}\n        </span>\n        {children}\n    </label>\n);\n\nexport default LabelPrimitive;\n","// @flow\nimport * as React from 'react';\n\nimport Tooltip from '../tooltip';\nimport LabelPrimitive from './LabelPrimitive';\n\ntype Props = {\n    children: React.Node,\n    labelContent: React.Node,\n    tooltip?: React.Node,\n};\n\nconst StandardLabel = ({ children, labelContent, tooltip }: Props) => {\n    const label = <LabelPrimitive labelContent={labelContent}>{children}</LabelPrimitive>;\n\n    return tooltip ? (\n        <Tooltip position=\"top-right\" text={tooltip}>\n            {label}\n        </Tooltip>\n    ) : (\n        label\n    );\n};\n\nexport default StandardLabel;\n","// @flow\nexport { default } from './Label';\n","/**\n * @flow\n * @file Function to render the date table cell\n * @author Box\n */\n\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { isToday, isYesterday } from '../../../utils/datetime';\nimport messages from '../messages';\nimport './DateField.scss';\n\ntype Props = {\n    capitalize?: boolean,\n    date: string,\n    dateFormat?: Object,\n    omitCommas?: boolean,\n    relative?: boolean,\n} & InjectIntlProvidedProps;\n\nconst DEFAULT_DATE_FORMAT = {\n    weekday: 'short',\n    month: 'short',\n    year: 'numeric',\n    day: 'numeric',\n};\n\nconst DateField = ({\n    date,\n    dateFormat = DEFAULT_DATE_FORMAT,\n    omitCommas = false,\n    intl,\n    relative = true,\n    capitalize = false,\n}: Props) => {\n    const d = new Date(date);\n    const isTodaysDate = isToday(d);\n    const isYesterdaysDate = isYesterday(d);\n\n    if (relative && (isTodaysDate || isYesterdaysDate)) {\n        let Message = <FormattedMessage {...messages.today} />;\n        if (isYesterdaysDate) {\n            Message = <FormattedMessage {...messages.yesterday} />;\n        }\n\n        if (capitalize) {\n            return <span className=\"be-date-capitalize\">{Message}</span>;\n        }\n\n        return Message;\n    }\n\n    let formattedDate = intl.formatDate(d, dateFormat);\n    formattedDate = omitCommas ? formattedDate.replace(/,/g, '') : formattedDate;\n    return formattedDate;\n};\n\nexport default injectIntl(DateField);\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './DateField';\n","/**\n * @flow\n * @file Details sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport API from '../../api';\nimport messages from '../common/messages';\nimport SidebarAccessStats from './SidebarAccessStats';\nimport SidebarClassification from './SidebarClassification';\nimport SidebarContent from './SidebarContent';\nimport SidebarFileProperties from './SidebarFileProperties';\nimport SidebarNotices from './SidebarNotices';\nimport SidebarSection from './SidebarSection';\nimport SidebarVersions from './SidebarVersions';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { getBadItemError } from '../../utils/error';\nimport { mark } from '../../utils/performance';\nimport { SECTION_TARGETS } from '../common/interactionTargets';\nimport { SIDEBAR_FIELDS_TO_FETCH } from '../../utils/fields';\nimport { withAPIContext } from '../common/api-context';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withLogger } from '../common/logger';\nimport {\n    HTTP_STATUS_CODE_FORBIDDEN,\n    ORIGIN_DETAILS_SIDEBAR,\n    IS_ERROR_DISPLAYED,\n    SIDEBAR_VIEW_DETAILS,\n} from '../../constants';\nimport './DetailsSidebar.scss';\n\ntype ExternalProps = {\n    classification?: ClassificationInfo,\n    elementId: string,\n    fileId: string,\n    hasAccessStats?: boolean,\n    hasClassification?: boolean,\n    hasNotices?: boolean,\n    hasProperties?: boolean,\n    hasRetentionPolicy?: boolean,\n    hasVersions?: boolean,\n    onAccessStatsClick?: Function,\n    onClassificationClick?: (e: SyntheticEvent<HTMLButtonElement>) => void,\n    onRetentionPolicyExtendClick?: Function,\n    onVersionHistoryClick?: Function,\n    retentionPolicy?: Object,\n} & ErrorContextProps &\n    WithLoggerProps;\ntype Props = {\n    api: API,\n} & ExternalProps &\n    ErrorContextProps &\n    WithLoggerProps;\n\ntype State = {\n    accessStats?: FileAccessStats,\n    accessStatsError?: Errors,\n    file?: BoxItem,\n    fileError?: Errors,\n    isLoadingAccessStats: boolean,\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_DETAILS_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass DetailsSidebar extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        hasNotices: false,\n        hasProperties: false,\n        hasAccessStats: false,\n        hasClassification: false,\n        hasRetentionPolicy: false,\n        hasVersions: false,\n        onError: noop,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            isLoadingAccessStats: false,\n        };\n        const { logger } = this.props;\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n    }\n\n    componentDidMount() {\n        this.fetchFile();\n        if (this.props.hasAccessStats) {\n            this.fetchAccessStats();\n        }\n    }\n\n    componentDidUpdate({ hasAccessStats: prevHasAccessStats }: Props) {\n        const { hasAccessStats } = this.props;\n        // Component visibility props such as hasAccessStats can sometimes be flipped after an async call\n        const hasAccessStatsChanged = prevHasAccessStats !== hasAccessStats;\n        if (hasAccessStatsChanged) {\n            if (hasAccessStats) {\n                this.fetchAccessStats();\n            } else {\n                this.setState({\n                    isLoadingAccessStats: false,\n                    accessStats: undefined,\n                    accessStatsError: undefined,\n                });\n            }\n        }\n    }\n\n    /**\n     * File description update callback\n     *\n     * @private\n     * @param {BoxItem} file - Updated file object\n     * @return {void}\n     */\n    descriptionChangeSuccessCallback = (file: BoxItem): void => {\n        this.setState({ file, fileError: undefined });\n    };\n\n    /**\n     * Fetches a file with the fields needed for details sidebar\n     *\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @return {void}\n     */\n    fetchFile(\n        successCallback: (file: BoxItem) => void = this.fetchFileSuccessCallback,\n        errorCallback: ElementsErrorCallback = this.fetchFileErrorCallback,\n    ): void {\n        const { api, fileId }: Props = this.props;\n        api.getFileAPI().getFile(fileId, successCallback, errorCallback, {\n            fields: SIDEBAR_FIELDS_TO_FETCH, // TODO: replace this with DETAILS_SIDEBAR_FIELDS_TO_FETCH as we do not need all the sidebar fields\n        });\n    }\n\n    /**\n     * Handles a successful file fetch\n     *\n     * @param {Object} file - the box file\n     * @return {void}\n     */\n    fetchFileSuccessCallback = (file: BoxItem) => {\n        this.setState({\n            file,\n            fileError: undefined,\n        });\n    };\n\n    /**\n     * Handles a failed file fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @param {string} code - error code\n     * @return {void}\n     */\n    fetchFileErrorCallback = (e: ElementsXhrError, code: string) => {\n        // TODO: handle the error properly (probably with maskError) once files call split out\n        this.setState({\n            file: undefined,\n        });\n\n        this.props.onError(e, code, {\n            e,\n        });\n    };\n\n    /**\n     * Handles a failed file description update\n     *\n     * @private\n     * @param {BoxItem} file - Original file object\n     * @return {void}\n     */\n    descriptionChangeErrorCallback = (file: BoxItem): void => {\n        // Reset the state back to the original description since the API call failed\n        this.setState({\n            file,\n            fileError: {\n                inlineError: {\n                    title: messages.fileDescriptionInlineErrorTitleMessage,\n                    content: messages.defaultInlineErrorContentMessage,\n                },\n            },\n        });\n    };\n\n    /**\n     * Function to update file description\n     *\n     * @private\n     * @param {string} newDescription - New file description\n     * @return {void}\n     */\n    onDescriptionChange = (newDescription: string): void => {\n        const { api }: Props = this.props;\n        const { file }: State = this.state;\n        if (!file) {\n            throw getBadItemError();\n        }\n\n        const { description }: BoxItem = file;\n        if (newDescription === description) {\n            return;\n        }\n\n        api.getFileAPI().setFileDescription(\n            file,\n            newDescription,\n            this.descriptionChangeSuccessCallback,\n            this.descriptionChangeErrorCallback,\n        );\n    };\n\n    /**\n     * Handles a failed file access stats fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @param {string} code - error code\n     * @return {void}\n     */\n    fetchAccessStatsErrorCallback = (e: ElementsXhrError, code: string) => {\n        if (!this.props.hasAccessStats) {\n            return;\n        }\n\n        const isForbidden = getProp(e, 'status') === HTTP_STATUS_CODE_FORBIDDEN;\n        let accessStatsError;\n\n        if (isForbidden) {\n            accessStatsError = {\n                error: messages.fileAccessStatsPermissionsError,\n            };\n        } else {\n            accessStatsError = {\n                maskError: {\n                    errorHeader: messages.fileAccessStatsErrorHeaderMessage,\n                    errorSubHeader: messages.defaultErrorMaskSubHeaderMessage,\n                },\n            };\n        }\n\n        this.setState({\n            isLoadingAccessStats: false,\n            accessStats: undefined,\n            accessStatsError,\n        });\n\n        this.props.onError(e, code, {\n            e,\n            [IS_ERROR_DISPLAYED]: !isForbidden,\n        });\n    };\n\n    /**\n     * File access stats fetch success callback\n     *\n     * @private\n     * @param {Object} accessStats - access stats for a file\n     * @return {void}\n     */\n    fetchAccessStatsSuccessCallback = (accessStats: FileAccessStats): void => {\n        if (!this.props.hasAccessStats) {\n            return;\n        }\n\n        this.setState({\n            accessStats,\n            accessStatsError: undefined,\n            isLoadingAccessStats: false,\n        });\n    };\n\n    /**\n     * Fetches the access stats for a file\n     *\n     * @private\n     * @return {void}\n     */\n    fetchAccessStats(): void {\n        const { api, fileId }: Props = this.props;\n        const { isLoadingAccessStats } = this.state;\n\n        if (isLoadingAccessStats) {\n            return;\n        }\n\n        this.setState({ isLoadingAccessStats: true });\n        api.getFileAccessStatsAPI(false).getFileAccessStats(\n            fileId,\n            this.fetchAccessStatsSuccessCallback,\n            this.fetchAccessStatsErrorCallback,\n        );\n    }\n\n    refresh(): void {\n        this.fetchAccessStats();\n    }\n\n    render() {\n        const {\n            classification,\n            elementId,\n            hasProperties,\n            hasNotices,\n            hasAccessStats,\n            hasClassification,\n            hasRetentionPolicy,\n            hasVersions,\n            onAccessStatsClick,\n            onVersionHistoryClick,\n            onClassificationClick,\n            onRetentionPolicyExtendClick,\n            retentionPolicy,\n        }: Props = this.props;\n\n        const { accessStats, accessStatsError, file, fileError, isLoadingAccessStats }: State = this.state;\n\n        // TODO: Add loading indicator and handle errors once file call is split out\n        return (\n            <SidebarContent\n                className=\"bcs-details\"\n                elementId={elementId}\n                sidebarView={SIDEBAR_VIEW_DETAILS}\n                title={<FormattedMessage {...messages.sidebarDetailsTitle} />}\n            >\n                {file && hasNotices && (\n                    <div className=\"bcs-DetailsSidebar-notices\">\n                        <SidebarNotices file={file} />\n                    </div>\n                )}\n                {file && hasClassification && (\n                    <SidebarClassification classification={classification} file={file} onEdit={onClassificationClick} />\n                )}\n                {file && hasAccessStats && (\n                    <SidebarAccessStats\n                        accessStats={accessStats}\n                        file={file}\n                        onAccessStatsClick={onAccessStatsClick}\n                        {...accessStatsError}\n                    />\n                )}\n                {file && hasProperties && (\n                    <SidebarSection\n                        interactionTarget={SECTION_TARGETS.FILE_PROPERTIES}\n                        title={<FormattedMessage {...messages.sidebarProperties} />}\n                    >\n                        {hasVersions && <SidebarVersions file={file} onVersionHistoryClick={onVersionHistoryClick} />}\n                        <SidebarFileProperties\n                            file={file}\n                            onDescriptionChange={this.onDescriptionChange}\n                            {...fileError}\n                            hasRetentionPolicy={hasRetentionPolicy}\n                            isLoading={isLoadingAccessStats}\n                            onRetentionPolicyExtendClick={onRetentionPolicyExtendClick}\n                            retentionPolicy={retentionPolicy}\n                        />\n                    </SidebarSection>\n                )}\n            </SidebarContent>\n        );\n    }\n}\n\nexport type DetailsSidebarProps = ExternalProps;\nexport { DetailsSidebar as DetailsSidebarComponent };\nexport default flow([withLogger(ORIGIN_DETAILS_SIDEBAR), withErrorBoundary(ORIGIN_DETAILS_SIDEBAR), withAPIContext])(\n    DetailsSidebar,\n);\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Versions sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport isFinite from 'lodash/isFinite';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport AccessStats from '../../features/access-stats/AccessStats';\nimport messages from '../common/messages';\nimport { INTERACTION_TARGET, SECTION_TARGETS, DETAILS_TARGETS } from '../common/interactionTargets';\nimport { isBoxNote } from '../../utils/file';\nimport SidebarSection from './SidebarSection';\nimport withErrorHandling from './withErrorHandling';\n\ntype Props = {\n    accessStats?: FileAccessStats,\n    error?: MessageDescriptor,\n    file: BoxItem,\n    onAccessStatsClick?: Function,\n} & InjectIntlProvidedProps;\n\nconst SidebarAccessStats = ({\n    onAccessStatsClick,\n    accessStats = {\n        has_count_overflowed: false,\n    },\n    file,\n    error,\n    intl,\n}: Props) => {\n    const { preview_count, comment_count, download_count, edit_count } = accessStats;\n\n    if (\n        !isFinite(preview_count) &&\n        !isFinite(comment_count) &&\n        !isFinite(download_count) &&\n        !isFinite(edit_count) &&\n        !error\n    ) {\n        return null;\n    }\n\n    const errorMessage = error ? intl.formatMessage(error) : undefined;\n    return (\n        <SidebarSection\n            interactionTarget={SECTION_TARGETS.ACCESS_STATS}\n            title={<FormattedMessage {...messages.sidebarAccessStats} />}\n        >\n            <AccessStats\n                errorMessage={errorMessage}\n                commentCount={comment_count}\n                commentStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.COMMENTS,\n                }}\n                downloadCount={download_count}\n                downloadStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.DOWNLOADS,\n                }}\n                previewCount={preview_count}\n                previewStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.PREVIEWS,\n                }}\n                viewStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.VIEWS,\n                }}\n                editCount={edit_count}\n                editStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.EDITS,\n                }}\n                openAccessStatsModal={onAccessStatsClick}\n                isBoxNote={isBoxNote(file)}\n                viewMoreButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.VIEW_DETAILS,\n                }}\n            />\n        </SidebarSection>\n    );\n};\n\nexport { SidebarAccessStats as SidebarAccessStatsComponent };\nexport default withErrorHandling(injectIntl(SidebarAccessStats));\n","/**\n * @flow\n * @file Classification sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport getProp from 'lodash/get';\nimport { FormattedMessage } from 'react-intl';\n\nimport Classification, { classificationMessages, EditClassificationButton } from '../../features/classification';\nimport { INTERACTION_TARGET, SECTION_TARGETS } from '../common/interactionTargets';\nimport Collapsible from '../../components/collapsible';\nimport { FIELD_PERMISSIONS_CAN_UPLOAD } from '../../constants';\nimport './SidebarClassification.scss';\n\ntype OnEdit = (e: SyntheticEvent<HTMLButtonElement>) => void;\ntype Props = {\n    classification?: ClassificationInfo,\n    file: BoxItem,\n    onEdit?: OnEdit,\n};\n\nconst SidebarClassification = ({ classification, file, onEdit }: Props) => {\n    const isEditable = !!onEdit && getProp(file, FIELD_PERMISSIONS_CAN_UPLOAD, false);\n    const hasClassification = !!getProp(classification, 'name');\n    if (!hasClassification && !isEditable) {\n        return null;\n    }\n    return (\n        <Collapsible\n            buttonProps={{\n                [INTERACTION_TARGET]: SECTION_TARGETS.CLASSIFICATION,\n            }}\n            className=\"bcs-SidebarClassification\"\n            headerActionItems={\n                isEditable ? (\n                    <EditClassificationButton\n                        className=\"bcs-SidebarClassification-edit\"\n                        isEditing={hasClassification}\n                        onEdit={((onEdit: any): OnEdit)}\n                    />\n                ) : null\n            }\n            title={<FormattedMessage {...classificationMessages.classification} />}\n        >\n            <Classification {...classification} messageStyle=\"inline\" />\n        </Collapsible>\n    );\n};\n\nexport default SidebarClassification;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Sidebar file properties component\n * @author Box\n */\n\nimport React from 'react';\nimport getProp from 'lodash/get';\nimport { injectIntl } from 'react-intl';\nimport ItemProperties from '../../features/item-details/ItemProperties';\nimport LoadingIndicatorWrapper from '../../components/loading-indicator/LoadingIndicatorWrapper';\nimport getFileSize from '../../utils/getFileSize';\nimport { INTERACTION_TARGET, DETAILS_TARGETS } from '../common/interactionTargets';\nimport withErrorHandling from './withErrorHandling';\n\ntype Props = {\n    classification?: ClassificationInfo,\n    file: BoxItem,\n    hasClassification: boolean,\n    hasRetentionPolicy: boolean,\n    isLoading: boolean,\n    onDescriptionChange: Function,\n    onRetentionPolicyExtendClick?: Function,\n    retentionPolicy?: Object,\n} & InjectIntlProvidedProps;\n\nconst SidebarFileProperties = ({\n    file,\n    onDescriptionChange,\n    hasRetentionPolicy,\n    retentionPolicy,\n    onRetentionPolicyExtendClick,\n    isLoading,\n    intl,\n}: Props) => (\n    <LoadingIndicatorWrapper isLoading={isLoading}>\n        <ItemProperties\n            createdAt={file.content_created_at}\n            description={file.description}\n            descriptionTextareaProps={{\n                [INTERACTION_TARGET]: DETAILS_TARGETS.DESCRIPTION,\n            }}\n            modifiedAt={file.content_modified_at}\n            onDescriptionChange={getProp(file, 'permissions.can_rename') ? onDescriptionChange : undefined}\n            owner={getProp(file, 'owned_by.name')}\n            retentionPolicyProps={\n                hasRetentionPolicy\n                    ? {\n                          ...retentionPolicy,\n                          openModal: onRetentionPolicyExtendClick,\n                      }\n                    : {}\n            }\n            size={getFileSize(file.size, intl.locale)}\n            uploader={getProp(file, 'created_by.name')}\n        />\n    </LoadingIndicatorWrapper>\n);\n\nexport { SidebarFileProperties as SidebarFilePropertiesComponent };\nexport default injectIntl(withErrorHandling(SidebarFileProperties));\n","/**\n * @flow\n * @file Preview details sidebar notices component\n * @author Box\n */\n\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport SharedLinkExpirationNotice from '../../features/item-details/SharedLinkExpirationNotice';\nimport ItemExpirationNotice from '../../features/item-details/ItemExpirationNotice';\nimport { addTime } from '../../utils/datetime';\n\nimport DateField from '../common/date';\n\nconst ONE_MINUTE_IN_MS = 60000;\n\nconst NOTICE_DATE_FORMAT = {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric',\n};\n\ntype Props = {\n    file: BoxItem,\n};\n\nconst SidebarNotices = ({ file }: Props) => {\n    const itemExpiration = getProp(file, 'expires_at');\n    const sharedLinkExpiration = getProp(file, 'shared_link.unshared_at');\n\n    if (!itemExpiration && !sharedLinkExpiration) {\n        return null;\n    }\n\n    return (\n        <>\n            {!!itemExpiration && (\n                <ItemExpirationNotice\n                    expiration={\n                        <DateField\n                            date={addTime(new Date(itemExpiration), ONE_MINUTE_IN_MS)}\n                            dateFormat={NOTICE_DATE_FORMAT}\n                            relative={false}\n                        />\n                    }\n                    itemType=\"file\"\n                />\n            )}\n            {!!sharedLinkExpiration && (\n                <SharedLinkExpirationNotice\n                    expiration={\n                        <DateField\n                            date={addTime(new Date(sharedLinkExpiration), ONE_MINUTE_IN_MS)}\n                            dateFormat={NOTICE_DATE_FORMAT}\n                            relative={false}\n                        />\n                    }\n                />\n            )}\n        </>\n    );\n};\n\nexport default SidebarNotices;\n","/**\n * @flow\n * @file Versions sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport VersionHistoryLink from '../../features/item-details/VersionHistoryLink';\n\nimport { DETAILS_TARGETS } from '../common/interactionTargets';\nimport { isBoxNote } from '../../utils/file';\nimport './SidebarVersions.scss';\n\ntype Props = {\n    file: BoxItem,\n    onVersionHistoryClick?: Function,\n};\n\nconst SidebarVersions = ({ onVersionHistoryClick, file }: Props) => {\n    const { version_number } = file;\n\n    const versionNumber = parseInt(version_number, 10);\n\n    if (isBoxNote(file) || !versionNumber || versionNumber <= 1) {\n        return null;\n    }\n\n    return (\n        <VersionHistoryLink\n            className=\"bcs-SidebarVersions\"\n            data-resin-target={DETAILS_TARGETS.VERSION_HISTORY}\n            data-testid={DETAILS_TARGETS.VERSION_HISTORY}\n            onClick={onVersionHistoryClick}\n            versionCount={versionNumber}\n        />\n    );\n};\n\nexport default SidebarVersions;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file withErrorHandling higher order component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ErrorMask from '../../components/error-mask/ErrorMask';\nimport InlineError from '../../components/inline-error/InlineError';\n\nimport SidebarSection from './SidebarSection';\n\ntype Props = {\n    errorCode?: string,\n} & Errors;\n\nconst withErrorHandling = (WrappedComponent: React.ComponentType<any>) => ({\n    maskError,\n    inlineError,\n    errorCode,\n    ...rest\n}: Props) => {\n    if (maskError) {\n        return (\n            <SidebarSection>\n                <ErrorMask\n                    errorHeader={<FormattedMessage {...maskError.errorHeader} />}\n                    errorSubHeader={\n                        maskError.errorSubHeader ? <FormattedMessage {...maskError.errorSubHeader} /> : undefined\n                    }\n                />\n            </SidebarSection>\n        );\n    }\n    if (inlineError) {\n        return (\n            <>\n                <InlineError title={<FormattedMessage {...inlineError.title} />}>\n                    {<FormattedMessage {...inlineError.content} />}\n                </InlineError>\n                <WrappedComponent {...rest} />\n            </>\n        );\n    }\n\n    return <WrappedComponent {...rest} />;\n};\n\nexport default withErrorHandling;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport AccessStatsItemsList from './AccessStatsItemsList';\n\nimport messages from './messages';\n\nimport './AccessStats.scss';\n\ntype AccessStatsType = {\n    commentCount?: number,\n    /**\n     * Props for comment stat PlainButton\n     */\n    commentStatButtonProps?: Object,\n    downloadCount?: number,\n    /**\n     * Props for download stat PlainButton\n     */\n    downloadStatButtonProps?: Object,\n    editCount?: number,\n    /**\n     * Props for edit stat PlainButton\n     */\n    editStatButtonProps?: Object,\n    errorMessage?: string,\n    hasCountOverflowed?: boolean,\n    isBoxNote?: boolean,\n    /**\n     * A function that opens the access stats modal\n     */\n    openAccessStatsModal?: Function,\n    previewCount?: number,\n    /**\n     * Props for preview stat PlainButton\n     */\n    previewStatButtonProps?: Object,\n    /**\n     * Props for View More PlainButton\n     */\n    viewMoreButtonProps?: Object,\n    /**\n     * Props for view stat PlainButton\n     */\n    viewStatButtonProps?: Object,\n};\n\nconst AccessStats = ({\n    commentCount = 0,\n    commentStatButtonProps = {},\n    downloadCount = 0,\n    downloadStatButtonProps = {},\n    editCount = 0,\n    editStatButtonProps = {},\n    errorMessage,\n    hasCountOverflowed = false,\n    isBoxNote = false,\n    openAccessStatsModal,\n    previewCount = 0,\n    previewStatButtonProps = {},\n    viewMoreButtonProps = {},\n    viewStatButtonProps = {},\n}: AccessStatsType) => (\n    <div className=\"access-stats\">\n        {errorMessage ? (\n            <p>{errorMessage}</p>\n        ) : (\n            <>\n                <AccessStatsItemsList\n                    commentCount={commentCount}\n                    commentStatButtonProps={commentStatButtonProps}\n                    downloadCount={downloadCount}\n                    downloadStatButtonProps={downloadStatButtonProps}\n                    editCount={editCount}\n                    editStatButtonProps={editStatButtonProps}\n                    hasCountOverflowed={hasCountOverflowed}\n                    isBoxNote={isBoxNote}\n                    openAccessStatsModal={openAccessStatsModal}\n                    previewCount={previewCount}\n                    previewStatButtonProps={previewStatButtonProps}\n                    viewStatButtonProps={viewStatButtonProps}\n                />\n                {openAccessStatsModal && (\n                    <PlainButton\n                        className=\"lnk access-stats-view-details\"\n                        onClick={openAccessStatsModal}\n                        {...viewMoreButtonProps}\n                    >\n                        <FormattedMessage {...messages.accessStatsViewDetails} />\n                    </PlainButton>\n                )}\n            </>\n        )}\n    </div>\n);\n\nexport default AccessStats;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport { FormattedMessage, FormattedNumber } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport IconEye from '../../icons/general/IconEye';\nimport IconComment from '../../icons/general/IconComment';\nimport IconDownloadSolid from '../../icons/general/IconDownloadSolid';\nimport IconPencilSolid from '../../icons/general/IconPencilSolid';\n\nimport messages from './messages';\n\nimport './AccessStatsItem.scss';\n\nconst statsAttributesTable = {\n    preview: {\n        icon: IconEye,\n        message: messages.accessStatsPreviews,\n    },\n    view: {\n        icon: IconEye,\n        message: messages.accessStatsViews,\n    },\n    download: {\n        icon: IconDownloadSolid,\n        message: messages.accessStatsDownloads,\n    },\n    comment: {\n        icon: IconComment,\n        message: messages.accessStatsComments,\n    },\n    edit: {\n        icon: IconPencilSolid,\n        message: messages.accessStatsEdits,\n    },\n};\nconst ICON_COLOR = '#2a62b9';\nconst ITEM_CONTENT_CLASS_NAME = 'access-stats-item-content';\n\ntype AccessStatsItemType = {\n    count: number,\n    hasCountOverflowed?: boolean,\n    openAccessStatsModal?: Function,\n    statButtonProps: Object,\n    type: $Keys<typeof statsAttributesTable>,\n};\n\nconst AccessStatsItem = ({\n    type,\n    count = 0,\n    hasCountOverflowed = false,\n    openAccessStatsModal,\n    statButtonProps,\n}: AccessStatsItemType) => {\n    const statAttributes = statsAttributesTable[type];\n    const IconComponent = statAttributes.icon;\n    const labelMessage = statAttributes.message;\n\n    const itemContent = (\n        <>\n            <IconComponent color={ICON_COLOR} height={10} width={14} />\n            <span className=\"access-stats-label\">\n                <FormattedMessage {...labelMessage} />\n            </span>\n            <FormattedNumber value={count} />\n            {hasCountOverflowed && '+'}\n        </>\n    );\n\n    return (\n        <li className=\"access-stats-item\">\n            {openAccessStatsModal ? (\n                <PlainButton className={ITEM_CONTENT_CLASS_NAME} onClick={openAccessStatsModal} {...statButtonProps}>\n                    {itemContent}\n                </PlainButton>\n            ) : (\n                <span className={ITEM_CONTENT_CLASS_NAME}>{itemContent}</span>\n            )}\n        </li>\n    );\n};\n\nexport default AccessStatsItem;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\n\nimport AccessStatsItem from './AccessStatsItem';\n\ntype AccessStatsItemsType = {\n    commentCount: number,\n    commentStatButtonProps: Object,\n    downloadCount: number,\n    downloadStatButtonProps: Object,\n    editCount: number,\n    editStatButtonProps: Object,\n    hasCountOverflowed: boolean,\n    isBoxNote: boolean,\n    openAccessStatsModal?: Function,\n    previewCount: number,\n    previewStatButtonProps: Object,\n    viewStatButtonProps: Object,\n};\n\nconst AccessStatsItemsList = ({\n    commentCount,\n    commentStatButtonProps,\n    downloadCount,\n    downloadStatButtonProps,\n    editCount,\n    editStatButtonProps,\n    hasCountOverflowed = false,\n    isBoxNote,\n    openAccessStatsModal,\n    previewCount,\n    previewStatButtonProps,\n    viewStatButtonProps,\n}: AccessStatsItemsType) => (\n    <ul className=\"access-stats-list\">\n        <AccessStatsItem\n            count={previewCount}\n            hasCountOverflowed={hasCountOverflowed}\n            openAccessStatsModal={openAccessStatsModal}\n            statButtonProps={isBoxNote ? viewStatButtonProps : previewStatButtonProps}\n            type={isBoxNote ? 'view' : 'preview'}\n        />\n        <AccessStatsItem\n            count={editCount}\n            hasCountOverflowed={hasCountOverflowed}\n            openAccessStatsModal={openAccessStatsModal}\n            statButtonProps={editStatButtonProps}\n            type=\"edit\"\n        />\n        <AccessStatsItem\n            count={commentCount}\n            hasCountOverflowed={hasCountOverflowed}\n            openAccessStatsModal={openAccessStatsModal}\n            statButtonProps={commentStatButtonProps}\n            type=\"comment\"\n        />\n        {!isBoxNote && (\n            <AccessStatsItem\n                count={downloadCount}\n                hasCountOverflowed={hasCountOverflowed}\n                openAccessStatsModal={openAccessStatsModal}\n                statButtonProps={downloadStatButtonProps}\n                type=\"download\"\n            />\n        )}\n    </ul>\n);\n\nexport default AccessStatsItemsList;\n","import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    accessStatsViewDetails: {\n        defaultMessage: 'View Details',\n        description: 'The text in the link in the sidebar to open up the access stats popup',\n        id: 'boxui.accessStats.accessStatsViewDetails',\n    },\n    accessStatsViews: {\n        defaultMessage: 'Views',\n        description: 'The label for the view category of access stats for box notes',\n        id: 'boxui.accessStats.accessStatsViews',\n    },\n    accessStatsPreviews: {\n        defaultMessage: 'Previews',\n        description: 'The label for the preview category of access stats',\n        id: 'boxui.accessStats.accessStatsPreviews',\n    },\n    accessStatsEdits: {\n        defaultMessage: 'Edits',\n        description: 'The label for the edit category of access stats',\n        id: 'boxui.accessStats.accessStatsEdits',\n    },\n    accessStatsComments: {\n        defaultMessage: 'Comments',\n        description: 'The label for the comments category of access stats',\n        id: 'boxui.accessStats.accessStatsComments',\n    },\n    accessStatsDownloads: {\n        defaultMessage: 'Downloads',\n        description: 'The label for the downloads category of access stats',\n        id: 'boxui.accessStats.accessStatsDownloads',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Label from '../../components/label/Label';\nimport ClassifiedBadge from './ClassifiedBadge';\nimport messages from './messages';\nimport './Classification.scss';\n\nconst STYLE_INLINE: 'inline' = 'inline';\nconst STYLE_TOOLTIP: 'tooltip' = 'tooltip';\n\ntype Props = {\n    className?: string,\n    definition?: string,\n    messageStyle?: typeof STYLE_INLINE | typeof STYLE_TOOLTIP,\n    name?: string,\n    onClick?: (event: SyntheticEvent<HTMLButtonElement>) => void,\n};\n\nconst Classification = ({ definition, className = '', messageStyle, name, onClick }: Props) => {\n    const isClassified = !!name;\n    const hasDefinition = !!definition;\n    const isTooltipMessageEnabled = isClassified && hasDefinition && messageStyle === STYLE_TOOLTIP;\n    const isInlineMessageEnabled = isClassified && hasDefinition && messageStyle === STYLE_INLINE;\n    const isNotClassifiedMessageVisible = !isClassified && messageStyle === STYLE_INLINE;\n\n    return (\n        <article className={`bdl-Classification ${className}`}>\n            {isClassified && (\n                <ClassifiedBadge\n                    name={((name: any): string)}\n                    onClick={onClick}\n                    tooltipText={isTooltipMessageEnabled ? definition : undefined}\n                />\n            )}\n            {isInlineMessageEnabled && (\n                <Label text={<FormattedMessage {...messages.definition} />}>\n                    <p className=\"bdl-Classification-definition\">{definition}</p>\n                </Label>\n            )}\n            {isNotClassifiedMessageVisible && (\n                <span className=\"bdl-Classification-missingMessage\">\n                    <FormattedMessage {...messages.missing} />\n                </span>\n            )}\n        </article>\n    );\n};\n\nexport { STYLE_INLINE, STYLE_TOOLTIP };\nexport default Classification;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\n\nimport PlainButton from '../../components/plain-button';\nimport Tooltip from '../../components/tooltip';\nimport IconSecurityClassification from '../../icons/general/IconSecurityClassification';\nimport SecurityBadge from '../security';\nimport { bdlYellorange } from '../../styles/variables';\nimport type { Position } from '../../components/tooltip';\nimport './ClassifiedBadge.scss';\n\ntype Props = {\n    name: string,\n    onClick?: (event: SyntheticEvent<HTMLButtonElement>) => void,\n    tooltipPosition?: Position,\n    tooltipText?: string,\n};\n\nconst ClassifiedBadge = ({ name, onClick, tooltipPosition = 'bottom-center', tooltipText }: Props) => {\n    const isClickable = typeof onClick === 'function';\n    const isTooltipDisabled = !tooltipText;\n    const badge = (\n        <SecurityBadge\n            className=\"bdl-ClassifiedBadge\"\n            icon={<IconSecurityClassification color={bdlYellorange} height={10} width={10} strokeWidth={3} />}\n            message={name}\n        />\n    );\n    return (\n        <Tooltip isDisabled={isTooltipDisabled} isTabbable={false} position={tooltipPosition} text={tooltipText}>\n            {isClickable ? (\n                <PlainButton\n                    className=\"bdl-ClassifiedBadge-editButton\"\n                    data-resin-target=\"editclassification\"\n                    onClick={onClick}\n                    type=\"button\"\n                >\n                    {badge}\n                </PlainButton>\n            ) : (\n                badge\n            )}\n        </Tooltip>\n    );\n};\n\nexport default ClassifiedBadge;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Classification add/edit button\n * @author Box\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport PlainButton from '../../components/plain-button/PlainButton';\n\ntype Props = {\n    className?: string,\n    isEditing: boolean,\n    onEdit: (e: SyntheticEvent<HTMLButtonElement>) => void,\n};\n\nconst EditClassificationButton = ({ className = '', isEditing, onEdit, ...rest }: Props) => {\n    const message = isEditing ? messages.edit : messages.add;\n    const interaction = isEditing ? 'editclassification' : 'addclassification';\n    return (\n        <PlainButton\n            className={`bdl-EditClassificationButton ${className}`}\n            data-resin-target={interaction}\n            onClick={onEdit}\n            type=\"button\"\n            {...rest}\n        >\n            <FormattedMessage {...message} />\n        </PlainButton>\n    );\n};\n\nexport default EditClassificationButton;\n","// @flow\n\nexport { default } from './Classification';\nexport { default as ClassifiedBadge } from './ClassifiedBadge';\nexport { default as classificationMessages } from './messages';\nexport { default as EditClassificationButton } from './EditClassificationButton';\n","import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    add: {\n        defaultMessage: 'Add',\n        description: 'Button to add classification on an item',\n        id: 'boxui.classification.add',\n    },\n    classification: {\n        defaultMessage: 'Classification',\n        description: 'Header for classification section in sidebar',\n        id: 'boxui.classification.classification',\n    },\n    definition: {\n        defaultMessage: 'Definition',\n        description: 'Header displayed above the classification definition',\n        id: 'boxui.classification.definition',\n    },\n    edit: {\n        defaultMessage: 'Edit',\n        description: 'Button to edit classification on an item',\n        id: 'boxui.classification.edit',\n    },\n    missing: {\n        defaultMessage: 'Not classified',\n        description: 'Default message for classification in the sidebar when there is none',\n        id: 'boxui.classification.missing',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nimport messages from './messages';\n\ntype Props = {\n    intl: Object,\n    onDescriptionChange: Function,\n    textAreaProps?: Object,\n    value?: string,\n};\n\ntype State = {\n    value: string,\n};\n\nclass EditableDescription extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        textAreaProps: {},\n        value: '',\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            value: props.value || '',\n        };\n    }\n\n    componentDidUpdate({ value: prevValue }: Props): void {\n        const { value } = this.props;\n        if (prevValue !== value) {\n            this.setState({ value });\n        }\n    }\n\n    handleBlur = (): void => {\n        const { value } = this.state;\n        this.props.onDescriptionChange(value);\n    };\n\n    handleChange = (event: SyntheticEvent<HTMLTextAreaElement>): void => {\n        const { value } = event.currentTarget;\n        this.setState({ value });\n    };\n\n    render() {\n        const { intl, textAreaProps } = this.props;\n        const { value } = this.state;\n\n        return (\n            <TextareaAutosize\n                {...textAreaProps}\n                className=\"description-textarea\"\n                maxLength=\"255\"\n                maxRows={6}\n                onBlur={this.handleBlur}\n                onChange={this.handleChange}\n                placeholder={intl.formatMessage(messages.descriptionPlaceholder)}\n                value={value}\n            />\n        );\n    }\n}\n\nexport { EditableDescription as EditableDescriptionBase };\nexport default injectIntl(EditableDescription);\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport TextInput from '../../components/text-input/TextInput';\nimport commonMessages from '../../common/messages';\n\nimport messages from './messages';\n\nconst VALUE_MISSING = 'valueMissing';\nconst TYPE_MISMATCH = 'typeMismatch';\n\nconst errorMap = {\n    [VALUE_MISSING]: <FormattedMessage {...commonMessages.requiredFieldError} />,\n    [TYPE_MISMATCH]: <FormattedMessage {...commonMessages.invalidURLError} />,\n};\n\ntype Props = {\n    intl: Object,\n    onValidURLChange: Function,\n    value: string,\n};\n\ntype State = {\n    error: '' | $Keys<typeof errorMap>,\n    value: string,\n};\n\nclass EditableURL extends React.Component<Props, State> {\n    state = {\n        error: '',\n        value: this.props.value,\n    };\n\n    componentDidUpdate({ value: prevValue }: Props) {\n        const { value } = this.props;\n        if (prevValue !== value) {\n            this.setState({ value });\n        }\n    }\n\n    inputEl: ?HTMLInputElement;\n\n    handleBlur = (): void => {\n        if (!this.inputEl) {\n            return;\n        }\n\n        const { valid, valueMissing } = this.inputEl.validity;\n        if (!valid) {\n            this.setState({\n                error: valueMissing ? VALUE_MISSING : TYPE_MISMATCH,\n            });\n            return;\n        }\n\n        this.props.onValidURLChange(this.state.value);\n    };\n\n    handleChange = (event: SyntheticEvent<HTMLInputElement>): void => {\n        this.setState({ value: event.currentTarget.value });\n    };\n\n    handleFocus = (): void => {\n        this.setState({ error: '' });\n    };\n\n    render() {\n        const {\n            intl: { formatMessage },\n        } = this.props;\n        const { error, value } = this.state;\n\n        return (\n            <TextInput\n                className=\"url-input\"\n                error={error ? errorMap[error] : undefined}\n                hideLabel\n                inputRef={ref => {\n                    this.inputEl = ref;\n                }}\n                isRequired\n                label={formatMessage(messages.url)}\n                onBlur={this.handleBlur}\n                onChange={this.handleChange}\n                onFocus={this.handleFocus}\n                placeholder={formatMessage(messages.urlPlaceholder)}\n                type=\"url\"\n                value={value}\n            />\n        );\n    }\n}\n\nexport { EditableURL as EditableURLBase, VALUE_MISSING, TYPE_MISMATCH };\nexport default injectIntl(EditableURL);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport InlineNotice from '../../components/inline-notice';\n\nimport messages from './messages';\n\nconst FILE = 'file';\nconst FOLDER = 'folder';\nconst WEBLINK = 'web_link';\n\nconst ItemExpirationNotice = ({ expiration, itemType }) => {\n    let messageID = '';\n    switch (itemType) {\n        case FILE:\n            messageID = 'fileExpiration';\n            break;\n        case FOLDER:\n            messageID = 'folderExpiration';\n            break;\n        case WEBLINK:\n            messageID = 'bookmarkExpiration';\n            break;\n        // no default\n    }\n\n    return (\n        <InlineNotice>\n            <FormattedMessage {...messages[messageID]} values={{ expiration }} />\n        </InlineNotice>\n    );\n};\n\nItemExpirationNotice.propTypes = {\n    /** a localized, human-readable string/node representing the expiration date */\n    expiration: PropTypes.node.isRequired,\n    /** the type of the item */\n    itemType: PropTypes.oneOf([FILE, FOLDER, WEBLINK]).isRequired,\n};\n\nexport default ItemExpirationNotice;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport uniqueid from 'lodash/uniqueId';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport EditableDescription from './EditableDescription';\nimport EditableURL from './EditableURL';\nimport RetentionPolicy from './RetentionPolicy';\nimport ReadonlyDescription from './ReadonlyDescription';\nimport messages from './messages';\n\nimport './ItemProperties.scss';\n\nconst datetimeOptions = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n};\n\nconst ItemProperties = ({\n    createdAt,\n    description,\n    descriptionTextareaProps = {},\n    enterpriseOwner,\n    modifiedAt,\n    onDescriptionChange,\n    onValidURLChange,\n    owner,\n    retentionPolicyProps = {},\n    size,\n    trashedAt,\n    uploader,\n    url,\n}) => {\n    const descriptionId = uniqueid('description_');\n\n    return (\n        <dl className=\"item-properties\">\n            {description || onDescriptionChange ? (\n                <>\n                    <FormattedMessage {...messages.description}>\n                        {text => <dt id={descriptionId}>{text}</dt>}\n                    </FormattedMessage>\n                    <dd>\n                        {onDescriptionChange ? (\n                            <EditableDescription\n                                onDescriptionChange={onDescriptionChange}\n                                textAreaProps={{ ...descriptionTextareaProps, 'aria-labelledby': descriptionId }}\n                                value={description}\n                            />\n                        ) : (\n                            <ReadonlyDescription value={description} />\n                        )}\n                    </dd>\n                </>\n            ) : null}\n            {!!url && (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.url} />\n                    <dd>{onValidURLChange ? <EditableURL onValidURLChange={onValidURLChange} value={url} /> : url}</dd>\n                </>\n            )}\n            {owner ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.owner} />\n                    <dd>{owner}</dd>\n                </>\n            ) : null}\n            {enterpriseOwner ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.enterpriseOwner} />\n                    <dd>{enterpriseOwner}</dd>\n                </>\n            ) : null}\n            {uploader ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.uploader} />\n                    <dd>{uploader}</dd>\n                </>\n            ) : null}\n            {createdAt ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.created} />\n                    <dd>\n                        <FormattedDate value={new Date(createdAt)} {...datetimeOptions} />\n                    </dd>\n                </>\n            ) : null}\n            {modifiedAt ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.modified} />\n                    <dd>\n                        <FormattedDate value={new Date(modifiedAt)} {...datetimeOptions} />\n                    </dd>\n                </>\n            ) : null}\n            {size ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.size} />\n                    <dd>{size}</dd>\n                </>\n            ) : null}\n            {trashedAt ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.deleted} />\n                    <dd>\n                        <FormattedDate value={new Date(trashedAt)} {...datetimeOptions} />\n                    </dd>\n                </>\n            ) : null}\n            <RetentionPolicy {...retentionPolicyProps} />\n        </dl>\n    );\n};\n\nItemProperties.propTypes = {\n    /** the datetime this item was created, accepts any value that can be passed to the Date() constructor */\n    createdAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /** a description for the item */\n    description: PropTypes.string,\n    /** props for the editable description textarea */\n    descriptionTextareaProps: PropTypes.object,\n    /** the name of the item's enterprise owner if the item is owned by a different enterprise */\n    enterpriseOwner: PropTypes.string,\n    /** the datetime this item was last modified, accepts any value that can be passed to the Date() constructor */\n    modifiedAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /** function called on description textarea blur with the new value to save */\n    onDescriptionChange: PropTypes.func,\n    /** function called on url input blur with the new value to save */\n    onValidURLChange: PropTypes.func,\n    /** the name of the item's owner */\n    owner: PropTypes.string,\n    /** props for the retention policy of this item */\n    retentionPolicyProps: PropTypes.object,\n    /** use the getFileSize util to get a localized human-readable string from the number of bytes */\n    size: PropTypes.string,\n    /** the datetime this item was deleted or moved to trash, accepts any value that can be passed to the Date() constructor */\n    trashedAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /** the name of the user who uploaded this item */\n    uploader: PropTypes.string,\n    /** the URL for the item when the item is a weblink */\n    url: PropTypes.string,\n};\n\nexport default ItemProperties;\n","// extracted by mini-css-extract-plugin","import React from 'react';\nimport PropTypes from 'prop-types';\nimport processString from 'react-process-string';\n\nconst NEWLINE_REGEX = /(\\r\\n|\\n\\r|\\n|\\r)/g;\n// eslint-disable-next-line no-useless-escape\nconst URL_REGEX = /\\b(ht|f)tps?:\\/\\/[\\w\\._\\-]+(:\\d+)?(\\/[\\w\\-_\\.~\\+\\/#\\?&%=:\\[\\]@!\\$'\\(\\)\\*;,]*)?/gim;\n\nconst ReadonlyDescription = ({ value }) =>\n    processString([\n        {\n            regex: NEWLINE_REGEX,\n            // eslint-disable-next-line react/display-name\n            fn: key => <br key={key} />,\n        },\n        {\n            regex: URL_REGEX,\n            // eslint-disable-next-line react/display-name\n            fn: (key, result) => (\n                <a key={key} href={result[0]} rel=\"noopener noreferrer\" target=\"_blank\">\n                    {result[0]}\n                </a>\n            ),\n        },\n    ])(value);\n\nReadonlyDescription.propTypes = {\n    value: PropTypes.string,\n};\n\nexport default ReadonlyDescription;\n","/* @flow */\nimport * as React from 'react';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button';\n\nimport messages from './messages';\n\nconst datetimeOptions = {\n    day: 'numeric',\n    month: 'short',\n    year: 'numeric',\n};\n\ntype Props = {\n    dispositionTime?: number,\n    openModal?: Function,\n    policyType?: string,\n    retentionPolicyDescription?: string,\n};\n\nconst RetentionPolicy = ({ dispositionTime, openModal, policyType, retentionPolicyDescription }: Props) => {\n    if (!retentionPolicyDescription) {\n        return null;\n    }\n\n    return (\n        <>\n            <FormattedMessage tagName=\"dt\" {...messages.retentionPolicyDescription} />\n            <dd>{retentionPolicyDescription}</dd>\n            {policyType !== 'indefinite' ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.retentionPolicyExpiration} />\n                    {dispositionTime ? (\n                        <dd>\n                            <FormattedDate value={new Date(dispositionTime)} {...datetimeOptions} />\n                            {openModal ? (\n                                <PlainButton className=\"lnk\" onClick={openModal}>\n                                    <FormattedMessage {...messages.retentionPolicyExtend} />\n                                </PlainButton>\n                            ) : null}\n                        </dd>\n                    ) : null}\n                </>\n            ) : null}\n        </>\n    );\n};\n\nexport default RetentionPolicy;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport InlineNotice from '../../components/inline-notice';\n\nimport messages from './messages';\n\nconst SharedLinkExpirationNotice = ({ expiration }) => (\n    <InlineNotice>\n        <FormattedMessage {...messages.sharedLinkExpiration} values={{ expiration }} />\n    </InlineNotice>\n);\n\nSharedLinkExpirationNotice.propTypes = {\n    /** a localized, human-readable string/node representing the expiration date */\n    expiration: PropTypes.node.isRequired,\n};\n\nexport default SharedLinkExpirationNotice;\n","// @flow\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button';\n\nimport messages from './messages';\n\ntype Props = {\n    className: string,\n    /** the number of saved versions that exist for this item, should be 2 or more */\n    onClick?: Function,\n    versionCount: number,\n};\n\nconst VersionHistoryLink = ({ className, versionCount, onClick, ...rest }: Props) => {\n    const formattedMessageComponent = <FormattedMessage {...messages.savedVersions} values={{ versionCount }} />;\n\n    // Only render it as a link if there is an onClick\n    if (onClick) {\n        return (\n            <PlainButton className={classNames('lnk', className)} onClick={onClick} {...rest}>\n                {formattedMessageComponent}\n            </PlainButton>\n        );\n    }\n\n    return <div className={className}>{formattedMessageComponent}</div>;\n};\n\nVersionHistoryLink.defaultProps = {\n    className: '',\n};\n\nexport default VersionHistoryLink;\n","// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    bookmarkExpiration: {\n        defaultMessage: 'This bookmark will be deleted on {expiration}.',\n        description:\n            'Warning message in the sidebar that this bookmark will be automatically deleted on a certain date, {expiration} is the date',\n        id: 'boxui.itemDetails.bookmarkExpiration',\n    },\n    created: {\n        defaultMessage: 'Created',\n        description: 'Label for created date under item properties in the sidebar',\n        id: 'boxui.itemDetails.created',\n    },\n    deleted: {\n        defaultMessage: 'Deleted',\n        description: 'Label for deletion date under item properties in the sidebar',\n        id: 'boxui.itemDetails.deleted',\n    },\n    description: {\n        defaultMessage: 'Description',\n        description: 'Label for description under item properties in the sidebar',\n        id: 'boxui.itemDetails.description',\n    },\n    descriptionPlaceholder: {\n        defaultMessage: 'Enter a description',\n        description: 'Placeholder for textarea to enter a description under item properties in the sidebar',\n        id: 'boxui.itemDetails.descriptionPlaceholder',\n    },\n    enterpriseOwner: {\n        defaultMessage: 'Enterprise Owner',\n        description: 'Label for name of enterprise owner under item properties in the sidebar',\n        id: 'boxui.itemDetails.enterpriseOwner',\n    },\n    fileExpiration: {\n        defaultMessage: 'This file will be deleted on {expiration}.',\n        description:\n            'Warning message in the sidebar that this file will be automatically deleted on a certain date, {expiration} is the date',\n        id: 'boxui.itemDetails.fileExpiration',\n    },\n    folderExpiration: {\n        defaultMessage: 'This folder will be deleted on {expiration}.',\n        description:\n            'Warning message in the sidebar that this folder will be automatically deleted on a certain date, {expiration} is the date',\n        id: 'boxui.itemDetails.folderExpiration',\n    },\n    modified: {\n        defaultMessage: 'Modified',\n        description: 'Label for modified date under item properties in the sidebar',\n        id: 'boxui.itemDetails.modified',\n    },\n    owner: {\n        defaultMessage: 'Owner',\n        description: 'Label for name of owner under item properties in the sidebar',\n        id: 'boxui.itemDetails.owner',\n    },\n    retentionPolicyDescription: {\n        defaultMessage: 'Policy',\n        description: 'Label for description of the retention policy under item properties in the sidebar',\n        id: 'boxui.itemDetails.retentionPolicyDescription',\n    },\n    retentionPolicyExpiration: {\n        defaultMessage: 'Policy Expiration',\n        description: 'Label for the expiration date of the retention policy under item properties in the sidebar',\n        id: 'boxui.itemDetails.retentionPolicyExpiration',\n    },\n    retentionPolicyExtend: {\n        defaultMessage: 'Extend',\n        description:\n            'Button to extend the expiration date of the retention policy under item properties in the sidebar',\n        id: 'boxui.itemDetails.retentionPolicyExtend',\n    },\n    savedVersions: {\n        defaultMessage: '{versionCount, number} Saved Versions',\n        description:\n            'Text for button in the sidebar to open the version history popup, {versionCount} is the number of saved file versions',\n        id: 'boxui.itemDetails.savedVersions',\n    },\n    sharedLinkExpiration: {\n        defaultMessage: 'This shared link will be disabled on {expiration}.',\n        description:\n            'Warning message in the sidebar that this shared link will expire on a certain date, {expiration} is the date',\n        id: 'boxui.itemDetails.sharedLinkExpiration',\n    },\n    size: {\n        defaultMessage: 'Size',\n        description: 'Label for human-readable filesize under item properties in the sidebar',\n        id: 'boxui.itemDetails.size',\n    },\n    uploader: {\n        defaultMessage: 'Uploader',\n        description: 'Label for name of uploader under item properties in the sidebar',\n        id: 'boxui.itemDetails.uploader',\n    },\n    url: {\n        defaultMessage: 'URL',\n        description: 'Label for a weblink url under item properties in the sidebar',\n        id: 'boxui.itemDetails.url',\n    },\n    urlPlaceholder: {\n        defaultMessage: 'Enter a valid url',\n        description: 'Placeholder for a weblink url text area in the right sidebar',\n        id: 'boxui.itemDetails.urlPlaceholder',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nimport IconAlertDefault from '../../icons/general/IconAlertDefault';\nimport { bdlYellorange } from '../../styles/variables';\nimport './SecurityBadge.scss';\n\ntype Props = {\n    className?: string,\n    icon?: React.Node,\n    message: React.Node,\n};\n\nconst SecurityBadge = ({ className, icon, message, ...rest }: Props) => (\n    <h1 className={classNames('bdl-SecurityBadge', className)} {...rest}>\n        {icon}\n        <span className=\"bdl-SecurityBadge-name\">{message}</span>\n    </h1>\n);\n\nSecurityBadge.defaultProps = {\n    icon: <IconAlertDefault color={bdlYellorange} height={22} width={22} strokeWidth={3} />,\n};\n\nexport default SecurityBadge;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './SecurityBadge';\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconComment = ({ className = '', color = '#000000', height = 11, title, width = 11 }: Props) => (\n    <AccessibleSVG\n        className={`icon-comment ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 11 11\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M9.556.932H1.492C.938.932.49 1.386.49 1.94l-.006 9.072L2.5 8.996h7.056c.554 0 1.008-.454 1.008-1.008V1.94c0-.554-.454-1.008-1.008-1.008zM2.5 4.46h6.048v1.008H2.5V4.46zm4.032 2.52H2.5V5.972h4.032V6.98zm2.016-3.024H2.5V2.948h6.048v1.008z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconComment;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconDownloadSolid = ({ className = '', color = '#000000', height = 10, title, width = 10 }: Props) => (\n    <AccessibleSVG\n        className={`icon-download-solid ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 10 10\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M9.658 4.304H7.143V.634h-3.77v3.67H.857l4.4 4.283 4.4-4.283zM.858 9.81v1.224h8.8V9.81h-8.8z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconDownloadSolid;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconEye = ({ className = '', color = '#000000', height = 11, title, width = 15 }: Props) => (\n    <AccessibleSVG className={`icon-eye ${className}`} height={height} title={title} viewBox=\"0 0 15 11\" width={width}>\n        <path\n            className=\"fill-color\"\n            d=\"M.118 5.857C1.233 8.855 3.986 10.98 7.21 10.98c3.223 0 5.976-2.125 7.09-5.123C13.187 2.86 10.434.735 7.21.735 3.986.735 1.233 2.86.118 5.857zM7.21 9.27c-1.78 0-3.224-1.528-3.224-3.413 0-1.885 1.444-3.414 3.224-3.414 1.78 0 3.223 1.53 3.223 3.414 0 1.885-1.444 3.414-3.223 3.414zm0-5.462c-1.07 0-1.935.915-1.935 2.05 0 1.133.864 2.048 1.935 2.048 1.07 0 1.934-.915 1.934-2.05 0-1.133-.864-2.048-1.934-2.048z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconEye;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconInfo = ({ className = '', color = '#000000', height = 24, title, width = 24 }: Props) => (\n    <AccessibleSVG\n        className={`icon-info ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"-603 389 16 16\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M-595 403c5.5 0 8-7.1 3.9-10.6-4.2-3.6-10.8.3-9.8 5.7.5 2.8 3 4.9 5.9 4.9zm.9-6.7v3.7h-1.4v-3.7h1.4zm.1-2.2c0 1-1.7 1.1-1.7 0 .1-1.1 1.7-1.1 1.7 0z\"\n            fill={color}\n            fillRule=\"evenodd\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconInfo;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconPencilSolid = ({ className = '', color = '#000000', height = 10, title, width = 10 }: Props) => (\n    <AccessibleSVG\n        className={`icon-pencil-solid ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 10 10\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M.5 7.625V9.5h1.875l5.53-5.53-1.876-1.874L.5 7.626zM9.354 2.52c.195-.194.195-.51 0-.704L8.184.646C7.99.45 7.674.45 7.48.646l-.916.915L8.44 3.437l.914-.915z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconPencilSolid;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nimport AccessibleSVG from '../accessible-svg';\nimport { bdlGray } from '../../styles/variables';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    strokeWidth?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconSecurityClassification = ({\n    className = '',\n    height = 32,\n    color = bdlGray,\n    title,\n    strokeWidth = 2,\n    width = 32,\n}: Props) => {\n    const classes = classNames('bdl-IconSecurityClassification', className);\n\n    return (\n        <AccessibleSVG className={classes} height={height} title={title} viewBox=\"0 0 32 32\" width={width}>\n            <path\n                d=\"M17,2 L5,8 L5,15 C5,21.4214876 10.6933333,29.5421488 17,31 C23.3066667,29.5421488 29,21.4214876 29,15 L29,8 L17,2 Z\"\n                stroke={color}\n                strokeWidth={strokeWidth}\n                fill=\"none\"\n            />\n            <path\n                d=\"M23,11 L23,19\"\n                stroke={color}\n                strokeWidth={strokeWidth}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                fill=\"none\"\n            />\n        </AccessibleSVG>\n    );\n};\n\nexport default IconSecurityClassification;\n","// @flow\nimport * as React from 'react';\nimport { bdlGreenLight } from '../../styles/variables';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    opacity?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconVerified = ({\n    className = '',\n    color = bdlGreenLight,\n    height = 14,\n    opacity = 1,\n    title,\n    width = 14,\n}: Props) => (\n    <AccessibleSVG\n        className={`icon-verified ${className}`}\n        height={height}\n        opacity={opacity}\n        title={title}\n        viewBox=\"0 0 14 14\"\n        width={width}\n    >\n        <path\n            d=\"M7 14c-3.865993 0-7-3.134007-7-7s3.134007-7 7-7 7 3.134007 7 7-3.134007 7-7 7zM5.31288 9.303048l1.44555 1.21296 4.499514-5.36231-1.44555-1.21296-4.499514 5.36231zM3 7.36231L5.31288 9.30305l1.21296-1.44555L4.21296 5.91676 3 7.36231z\"\n            fill={color}\n            fillRule=\"evenodd\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconVerified;\n","import filesize from 'filesize';\n\nconst defaultDigitalUnits = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nconst bcp47TagToDigitalUnits = {\n    fi: ['t', 'kt', 'Mt', 'Gt', 'Tt', 'Pt', 'Et', 'Zt', 'Yt'],\n    fr: ['o', 'Ko', 'Mo', 'Go', 'To', 'Po', 'Eo', 'Zo', 'Yo'],\n    ru: ['Б', 'КБ', 'МБ', 'ГБ', 'ТБ', 'ПБ', 'ЭБ', 'ЗБ', 'ЙБ'],\n};\n\n/**\n * Formats a file size from number of bytes to a human-readable, localized string.\n * @param {number} size Number of bytes\n * @param {string} [locale] Optional locale, defaults to 'en'\n * @returns {string} The size as a localized string\n */\nconst getFileSize = (size, locale = 'en') => {\n    const settings = { round: 1 };\n\n    const localizedUnits = bcp47TagToDigitalUnits[locale];\n    if (localizedUnits) {\n        // map default units to localized units, ex. { B: Б, KB: КБ, ... }\n        settings.symbols = defaultDigitalUnits.reduce((symbols, unit, index) => {\n            symbols[unit] = localizedUnits[index];\n            return symbols;\n        }, {});\n    }\n\n    return filesize(size, settings);\n};\n\nexport default getFileSize;\n"],"sourceRoot":""}