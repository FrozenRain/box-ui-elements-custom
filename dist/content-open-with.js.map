{"version":3,"sources":["webpack:///./src/elements/content-open-with/BoxToolsInstallMessage.js","webpack:///./src/elements/content-open-with/BoxToolsInstallMessage.scss","webpack:///./src/elements/content-open-with/ContentOpenWith.js","webpack:///./src/elements/content-open-with/ContentOpenWith.scss","webpack:///./src/elements/content-open-with/ExecuteForm.js","webpack:///./src/elements/content-open-with/IconFileMap.js","webpack:///./src/elements/content-open-with/IntegrationPortal.js","webpack:///./src/elements/content-open-with/IntegrationPortalContainer.js","webpack:///./src/elements/content-open-with/MultipleIntegrationsOpenWithButton.js","webpack:///./src/elements/content-open-with/OpenWithButton.js","webpack:///./src/elements/content-open-with/OpenWithButtonContents.js","webpack:///./src/elements/content-open-with/OpenWithDropdownMenu.js","webpack:///./src/elements/content-open-with/OpenWithDropdownMenuItem.js","webpack:///./src/elements/content-open-with/OpenWithDropdownMenuItem.scss","webpack:///./src/elements/content-open-with/OpenWithFallbackButton.js","webpack:///./src/elements/content-open-with/index.js","webpack:///./src/elements/content-open-with/openWithUtils.js","webpack:///./src/icons/adobe-sign/IconAdobeSign.js","webpack:///./src/icons/general/IconOpenWith.js","webpack:///./src/icons/google-docs/IconGoogleDocs.js","webpack:///./src/icons/google-docs/IconGoogleSheets.js","webpack:///./src/icons/google-docs/IconGoogleSlides.js"],"names":["DEFAULT_BOX_TOOLS_INSTALLATION_URL","DEFAULT_BOX_TOOLS_NAME","BoxToolsInstallMessage","boxToolsName","boxToolsInstallUrl","onLinkClick","window","open","messages","boxToolsInstallMessage","boxTools","UNSUPPORTED_INVOCATION_METHOD_TYPE","BLACKLISTED_ERROR_MESSAGE_KEY","BOX_TOOLS_INSTALL_ERROR_MESSAGE_KEY","GENERIC_EXECUTE_MESSAGE_KEY","AUTH_CODE","ContentOpenWith","PureComponent","constructor","props","isDropdownOpen","integrations","isLoading","fetchError","executePostData","shouldRenderErrorIntegrationPortal","shouldRenderLoadingIntegrationPortal","boxEditIntegration","find","appIntegrationId","isBoxEditIntegration","isDisabled","extension","getIntegrationFileExtension","isBoxEditAvailable","canOpenExtensionWithBoxEdit","error","errorMessageObject","message","formattedErrorMessage","disabledReasons","push","setState","fileId","Promise","resolve","reject","api","getFileAPI","getFileExtension","Error","getBoxEditAPI","checkBoxEditAvailability","catch","getAppForExtension","code","onError","displayName","getAppIntegrationsAPI","execute","executeIntegrationSuccessHandler","bind","executeBoxEditErrorHandler","executeIntegrationErrorHandler","windowFeatures","screenX","screenY","outerHeight","innerWidth","integrationWindow","uniqueid","document","title","onunload","cleanupIntegrationWindow","integrationId","executeData","executeBoxEditSuccessHandler","executeOnlineIntegrationSuccessHandler","onExecute","method","url","HTTP_POST","HTTP_GET","location","opener","ERROR_CODE_EXECUTE_INTEGRATION","token","queryParams","queryString","parse","authCode","isFileScoped","isBoxEditSFCIntegration","openFile","data","auth_code","token_scope","TYPE_FILE","TYPE_FOLDER","console","apiHost","clientName","language","requestInterceptor","responseInterceptor","id","API","state","initialState","clearCache","destroy","componentWillUnmount","componentDidMount","fetchOpenWithData","componentDidUpdate","prevProps","currentFileId","previousFileId","BOX_EDIT_INTEGRATION_ID","BOX_EDIT_SFC_INTEGRATION_ID","getOpenWithAPI","getOpenWithIntegrations","fetchOpenWithSuccessHandler","fetchErrorHandler","integrationID","getDisplayIntegration","Array","isArray","length","render","intlMessages","dropdownAlignment","className","classNames","displayIntegration","numIntegrations","onIntegrationClick","onExecuteFormSubmit","name","DEFAULT_HOSTNAME_API","CLIENT_NAME_OPEN_WITH","noop","withErrorBoundary","ORIGIN_OPEN_WITH","OpenWithFallbackButton","ExecuteForm","ref","React","createRef","onSubmit","current","submit","params","windowName","map","key","value","ICON_FILE_MAP","IconAdobeSign","IconGoogleDocs","IconGoogleSheets","IconGoogleSlides","getIcon","iconName","FileIcon","copyStyles","documentElement","from","styleSheets","forEach","styleSheet","href","copiedStyleSheet","createElement","rel","head","appendChild","body","style","margin","padding","IntegrationPortal","children","containerElement","createPortal","IntegrationPortalContainer","hasError","executeIntegrationOpenWithErrorHeader","executeIntegrationOpenWithErrorSubHeader","MultipleIntegrationsOpenWithButton","buttonProps","defaultOpenWithDescription","CLASS_INTEGRATION_ICON","OPEN_WITH_BUTTON_ICON_SIZE","getTooltip","displayDescription","emptyOpenWithDescription","errorOpenWithDescription","OpenWithButton","onClick","isDisplayIntegrationDisabled","Icon","IconOpenWith","tooltipDisplayProps","utils","isDisabledBecauseBoxToolsIsNotInstalled","isShown","showCloseButton","OpenWithButtonContents","RIGHT_ALIGNMENT","OpenWithDropdownMenu","integration","getErrorMessage","defaultErrorMessage","boxEditErrorBlockedByPolicy","OpenWithDropdownMenuItem","description","OPEN_WITH_MENU_ITEM_ICON_SIZE","disabledReasonType","getProp","height","width","color","bdlGray80","ICON_CLASS","uniqueId","idPrefix"],"mappings":"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","file":"content-open-with.js","sourcesContent":["/**\n * @flow\n * @file Custom message to install Box Tools inside of Open With.\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from '../common/messages';\nimport './BoxToolsInstallMessage.scss';\n\nconst DEFAULT_BOX_TOOLS_INSTALLATION_URL = 'https://cloud.box.com/v/installboxtools';\nconst DEFAULT_BOX_TOOLS_NAME = 'Box Tools';\n\ntype Props = {\n    boxToolsInstallUrl?: string,\n    boxToolsName?: string,\n};\n\nconst BoxToolsInstallMessage = ({\n    boxToolsName = DEFAULT_BOX_TOOLS_NAME,\n    boxToolsInstallUrl = DEFAULT_BOX_TOOLS_INSTALLATION_URL,\n}: Props) => {\n    const onLinkClick = () => {\n        // Manually open the URL since disabled menu items are blocked from clickable actions by default\n        window.open(boxToolsInstallUrl);\n    };\n\n    return (\n        <FormattedMessage\n            {...messages.boxToolsInstallMessage}\n            values={{\n                boxTools: (\n                    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n                    <a href=\"#\" onClick={onLinkClick} rel=\"noopener noreferrer\">\n                        {boxToolsName}\n                    </a>\n                ),\n            }}\n        />\n    );\n};\n\nexport default BoxToolsInstallMessage;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Open With Component\n * @author Box\n */\n\nimport React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport uniqueid from 'lodash/uniqueId';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport queryString from 'query-string';\nimport Internationalize from '../common/Internationalize';\nimport messages from '../common/messages';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport API from '../../api';\nimport IntegrationPortalContainer from './IntegrationPortalContainer';\nimport OpenWithDropdownMenu from './OpenWithDropdownMenu';\nimport BoxToolsInstallMessage from './BoxToolsInstallMessage';\nimport OpenWithButton from './OpenWithButton';\nimport OpenWithFallbackButton from './OpenWithFallbackButton';\nimport ExecuteForm from './ExecuteForm';\nimport '../common/base.scss';\nimport './ContentOpenWith.scss';\nimport {\n    BOX_EDIT_INTEGRATION_ID,\n    BOX_EDIT_SFC_INTEGRATION_ID,\n    CLIENT_NAME_OPEN_WITH,\n    DEFAULT_HOSTNAME_API,\n    ERROR_CODE_EXECUTE_INTEGRATION,\n    HTTP_GET,\n    HTTP_POST,\n    ORIGIN_OPEN_WITH,\n    TYPE_FILE,\n    TYPE_FOLDER,\n} from '../../constants';\n\nconst UNSUPPORTED_INVOCATION_METHOD_TYPE = 'Integration invocation using this HTTP method type is not supported';\nconst BLACKLISTED_ERROR_MESSAGE_KEY = 'boxToolsBlacklistedError';\nconst BOX_TOOLS_INSTALL_ERROR_MESSAGE_KEY = 'boxToolsInstallErrorMessage';\nconst GENERIC_EXECUTE_MESSAGE_KEY = 'executeIntegrationOpenWithErrorHeader';\nconst AUTH_CODE = 'auth_code';\n\ntype ExternalProps = {\n    show?: boolean,\n};\n\ntype Props = {\n    /** Box API url. */\n    apiHost: string,\n    /** Class name applied to base component. */\n    boxToolsInstallUrl?: string,\n    /** Application client name. */\n    boxToolsName?: string,\n    /** Custom name for Box Tools to display to users */\n    className: string,\n    /** Custom URL to direct users to install Box Tools */\n    clientName: string,\n    /** Determines positioning of menu dropdown */\n    dropdownAlignment: Alignment,\n    /** Box File ID. */\n    fileId: string,\n    /** Language to use for translations. */\n    language?: string,\n    /** Messages to be translated. */\n    messages?: StringMap,\n    /** Callback that executes when an integration attempts to open the given file */\n    onError: Function,\n    /** Callback that executes when an integration invocation fails. The two most common cases being API failures or blocking of a new window */\n    onExecute: Function,\n    /** Axios request interceptor that runs before a network request. */\n    requestInterceptor?: Function,\n    /** Axios response interceptor that runs before a network response is returned. */\n    responseInterceptor?: Function,\n    /** Access token. */\n    token: Token,\n};\n\ntype State = {\n    executePostData: ?Object,\n    fetchError: ?Error,\n    integrations: ?Array<Integration>,\n    isDropdownOpen: boolean,\n    isLoading: boolean,\n    shouldRenderErrorIntegrationPortal: boolean,\n    shouldRenderLoadingIntegrationPortal: boolean,\n};\n\nclass ContentOpenWith extends PureComponent<Props, State> {\n    api: API;\n\n    id: string;\n\n    props: Props;\n\n    state: State;\n\n    window: any;\n\n    integrationWindow: ?any;\n\n    static defaultProps = {\n        apiHost: DEFAULT_HOSTNAME_API,\n        className: '',\n        clientName: CLIENT_NAME_OPEN_WITH,\n        onExecute: noop,\n        onError: noop,\n    };\n\n    initialState: State = {\n        isDropdownOpen: false,\n        integrations: null,\n        isLoading: true,\n        fetchError: null,\n        executePostData: null,\n        shouldRenderErrorIntegrationPortal: false,\n        shouldRenderLoadingIntegrationPortal: false,\n    };\n\n    /**\n     * [constructor]\n     *\n     * @private\n     * @return {ContentOpenWith}\n     */\n    constructor(props: Props) {\n        super(props);\n\n        const { token, apiHost, clientName, language, requestInterceptor, responseInterceptor } = props;\n        this.id = uniqueid('bcow_');\n        this.api = new API({\n            apiHost,\n            clientName,\n            language,\n            requestInterceptor,\n            responseInterceptor,\n            token,\n        });\n\n        // Clone initial state to allow for state reset on new files\n        this.state = { ...this.initialState };\n    }\n\n    /**\n     * Destroys api instances with caches\n     *\n     * @private\n     * @return {void}\n     */\n    clearCache(): void {\n        this.api.destroy(true);\n    }\n\n    /**\n     * Cleanup\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentWillUnmount() {\n        // Don't destroy the cache while unmounting\n        this.api.destroy(false);\n    }\n\n    /**\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentDidMount() {\n        const { fileId }: Props = this.props;\n        if (!fileId) {\n            return;\n        }\n\n        this.window = window;\n\n        this.fetchOpenWithData();\n    }\n\n    /**\n     * After component updates, re-fetch Open With data if appropriate.\n     *\n     * @return {void}\n     */\n    componentDidUpdate(prevProps: Props): void {\n        const { fileId: currentFileId }: Props = this.props;\n        const { fileId: previousFileId }: Props = prevProps;\n\n        if (!currentFileId) {\n            return;\n        }\n\n        if (currentFileId !== previousFileId) {\n            this.setState({ ...this.initialState });\n            this.fetchOpenWithData();\n        }\n    }\n\n    /**\n     * Checks if a given integration is a Box Edit integration.\n     *\n     * @param {string} [integrationId] - The integration ID\n     * @return {boolean}\n     */\n    isBoxEditIntegration(integrationId: ?string): boolean {\n        return integrationId === BOX_EDIT_INTEGRATION_ID || this.isBoxEditSFCIntegration(integrationId);\n    }\n\n    /**\n     * Checks if a given integration is a Box Edit integration.\n     *\n     * @param {string} [integrationId] - The integration ID\n     * @return {boolean}\n     */\n    isBoxEditSFCIntegration(integrationId: ?string): boolean {\n        return integrationId === BOX_EDIT_SFC_INTEGRATION_ID;\n    }\n\n    /**\n     * Fetches Open With data.\n     *\n     * @return {void}\n     */\n    fetchOpenWithData(): void {\n        const { fileId }: Props = this.props;\n        this.api\n            .getOpenWithAPI(false)\n            .getOpenWithIntegrations(fileId, this.fetchOpenWithSuccessHandler, this.fetchErrorHandler);\n    }\n\n    /**\n     * Fetch app integrations info needed to render.\n     *\n     * @param {OpenWithIntegrations} integrations - The available Open With integrations\n     * @return {void}\n     */\n    fetchOpenWithSuccessHandler = async (integrations: Array<Integration>): Promise<any> => {\n        const { boxToolsName, boxToolsInstallUrl } = this.props;\n        const boxEditIntegration = integrations.find(({ appIntegrationId }) =>\n            this.isBoxEditIntegration(appIntegrationId),\n        );\n\n        if (boxEditIntegration && !boxEditIntegration.isDisabled) {\n            try {\n                const { extension } = await this.getIntegrationFileExtension();\n                boxEditIntegration.extension = extension;\n                // If Box Edit is present and enabled, we need to set its ability to locally open the given file\n                // No-op if these checks are successful\n                await this.isBoxEditAvailable();\n                await this.canOpenExtensionWithBoxEdit(boxEditIntegration);\n            } catch (error) {\n                const errorMessageObject = messages[error.message] || messages[GENERIC_EXECUTE_MESSAGE_KEY];\n                let formattedErrorMessage = <FormattedMessage {...errorMessageObject} />;\n                if (error.message === BOX_TOOLS_INSTALL_ERROR_MESSAGE_KEY) {\n                    formattedErrorMessage = (\n                        <BoxToolsInstallMessage boxToolsInstallUrl={boxToolsInstallUrl} boxToolsName={boxToolsName} />\n                    );\n                }\n\n                boxEditIntegration.disabledReasons.push(formattedErrorMessage);\n                boxEditIntegration.isDisabled = true;\n            }\n        }\n\n        this.setState({ integrations, isLoading: false });\n    };\n\n    /**\n     * Fetches the file extension of the current file.\n     *\n     * @return {Promise}\n     */\n    getIntegrationFileExtension = (): Promise<BoxItem> => {\n        const { fileId }: Props = this.props;\n        return new Promise((resolve, reject) => {\n            this.api\n                .getFileAPI()\n                .getFileExtension(fileId, resolve, () => reject(new Error(GENERIC_EXECUTE_MESSAGE_KEY)));\n        });\n    };\n\n    /**\n     * Uses Box Edit to check if Box Tools is installed and reachable\n     *\n     * @return {Promise}\n     */\n    isBoxEditAvailable = (): Promise<any> => {\n        return this.api\n            .getBoxEditAPI()\n            .checkBoxEditAvailability()\n            .catch(() => {\n                throw new Error(BOX_TOOLS_INSTALL_ERROR_MESSAGE_KEY);\n            });\n    };\n\n    /**\n     * Uses Box Edit to check if Box Tools can open a given file type\n     *\n     * @param {String} extension - A file extension\n     * @return {Promise}\n     */\n    canOpenExtensionWithBoxEdit = ({ extension = '' }: Integration): Promise<any> => {\n        return this.api\n            .getBoxEditAPI()\n            .getAppForExtension(extension)\n            .catch(() => {\n                throw new Error(BLACKLISTED_ERROR_MESSAGE_KEY);\n            });\n    };\n\n    /**\n     * Handles a fetch error for the open_with_integrations and app_integrations endpoints\n     *\n     * @param {Error} error - An axios fetch error\n     * @return {void}\n     */\n    fetchErrorHandler = (error: any, code: string): void => {\n        this.props.onError(error, code, { error });\n        this.setState({ fetchError: error, isLoading: false });\n    };\n\n    /**\n     * Click handler when an integration is clicked\n     *\n     * @private\n     * @param {string} appIntegrationId - An app integration ID\n     * @param {string} displayName - The integration's display name\n     * @return {void}\n     */\n    onIntegrationClick = ({ appIntegrationId, displayName }: Integration): void => {\n        const { fileId }: Props = this.props;\n        const isBoxEditIntegration = this.isBoxEditIntegration(appIntegrationId);\n        this.api\n            .getAppIntegrationsAPI(false)\n            .execute(\n                appIntegrationId,\n                fileId,\n                this.executeIntegrationSuccessHandler.bind(this, appIntegrationId),\n                isBoxEditIntegration ? this.executeBoxEditErrorHandler : this.executeIntegrationErrorHandler,\n            );\n\n        if (isBoxEditIntegration) {\n            // No window management is required when using Box Edit.\n            return;\n        }\n\n        // These window features will open the new window directly on top of the current window at the same\n        const windowFeatures = `left=${window.screenX},top=${window.screenY},height=${window.outerHeight},width=${window.innerWidth},toolbar=0`;\n\n        // window.open() is immediately invoked to avoid popup-blockers\n        // The name is included to be the target of a form if the integration is a POST integration.\n        // A uniqueid is used to force the browser to open a new tab every time, while still allowing\n        // a form to reference a given tab.\n        this.integrationWindow = this.window.open('', `${uniqueid(appIntegrationId)}`, windowFeatures);\n        this.integrationWindow.document.title = displayName;\n        this.integrationWindow.onunload = this.cleanupIntegrationWindow;\n\n        this.setState({\n            shouldRenderLoadingIntegrationPortal: true,\n            shouldRenderErrorIntegrationPortal: false,\n        });\n    };\n\n    /**\n     * cleans up the portal UI when a tab is closed so that we can remount the component later.\n     *\n     * @private\n     * @return {void}\n     */\n    cleanupIntegrationWindow = () => {\n        this.setState({\n            shouldRenderLoadingIntegrationPortal: false,\n            shouldRenderErrorIntegrationPortal: false,\n        });\n    };\n\n    /**\n     * Opens the integration in a new tab based on the API data\n     *\n     * @private\n     * @param {string} integrationId - The integration that was executed\n     * @param {ExecuteAPI} executeData - API response on how to open an executed integration\n\n     * @return {void}\n     */\n    executeIntegrationSuccessHandler = (integrationId: string, executeData: ExecuteAPI): void => {\n        if (this.isBoxEditIntegration(integrationId)) {\n            this.executeBoxEditSuccessHandler(integrationId, executeData);\n        } else {\n            this.executeOnlineIntegrationSuccessHandler(executeData);\n        }\n        this.onExecute(integrationId);\n    };\n\n    /**\n     * Opens the file via a Partner Integration\n     *\n     * @private\n     * @param {ExecuteAPI} executeData - API response on how to open an executed integration\n\n     * @return {void}\n     */\n    executeOnlineIntegrationSuccessHandler = (executeData: ExecuteAPI): void => {\n        const { method, url } = executeData;\n        switch (method) {\n            case HTTP_POST:\n                this.setState({ executePostData: executeData });\n                break;\n            case HTTP_GET:\n                if (!this.integrationWindow) {\n                    return;\n                }\n\n                // Prevents abuse of window.opener\n                // see here for more details: https://mathiasbynens.github.io/rel-noopener/\n                this.integrationWindow.location = url;\n                this.integrationWindow.opener = null;\n                break;\n            default:\n                this.executeIntegrationErrorHandler(\n                    Error(UNSUPPORTED_INVOCATION_METHOD_TYPE),\n                    ERROR_CODE_EXECUTE_INTEGRATION,\n                );\n        }\n\n        this.integrationWindow = null;\n    };\n\n    /**\n     * Opens the file via Box Edit\n     *\n     * @private\n     * @param {string} url - Integration execution URL\n\n     * @return {void}\n     */\n    executeBoxEditSuccessHandler = (integrationId: string, { url }: ExecuteAPI): void => {\n        const { fileId, token, onError } = this.props;\n        const queryParams = queryString.parse(url);\n        const authCode = queryParams[AUTH_CODE];\n        const isFileScoped = this.isBoxEditSFCIntegration(integrationId);\n\n        this.api\n            .getBoxEditAPI()\n            .openFile(fileId, {\n                data: {\n                    auth_code: authCode,\n                    token,\n                    token_scope: isFileScoped ? TYPE_FILE : TYPE_FOLDER,\n                },\n            })\n            .catch(error => {\n                onError(error, ERROR_CODE_EXECUTE_INTEGRATION, { error });\n            });\n    };\n\n    /**\n     * Clears state after a form has been submitted\n     *\n     * @private\n     * @return {void}\n     */\n    onExecuteFormSubmit = (): void => {\n        this.setState({ executePostData: null });\n    };\n\n    /**\n     * Calls the onExecute prop\n     *\n     * @private\n     * @param {string} integrationID - The integration that was executed\n     * @return {void}\n     */\n    onExecute(integrationID: string) {\n        this.props.onExecute(integrationID);\n        this.setState({\n            shouldRenderLoadingIntegrationPortal: false,\n        });\n    }\n\n    /**\n     * Handles execution related errors\n     *\n     * @private\n     * @param {Error} error - Error object\n     * @return {void}\n     */\n    executeIntegrationErrorHandler = (error: any, code: string): void => {\n        this.props.onError(error, code, { error });\n        // eslint-disable-next-line no-console\n        console.error(error);\n        this.setState({\n            shouldRenderLoadingIntegrationPortal: false,\n            shouldRenderErrorIntegrationPortal: true,\n        });\n    };\n\n    /**\n     * Handles Box Edit execution related errors\n     *\n     * @private\n     * @param {Error} error - Error object\n     * @return {void}\n     */\n    executeBoxEditErrorHandler = (error: any): void => {\n        this.props.onError(error);\n        // eslint-disable-next-line no-console\n        console.error(error);\n    };\n\n    /**\n     * Gets a display integration, if available, for the Open With button\n     *\n     * @private\n     * @return {?Integration}\n     */\n    getDisplayIntegration(): ?Integration {\n        const { integrations }: State = this.state;\n        // We only consider an integration a display integration if is the only integration in our state\n        return Array.isArray(integrations) && integrations.length === 1 ? integrations[0] : null;\n    }\n\n    /**\n     * Render the Open With element\n     *\n     * @private\n     * @inheritdoc\n     * @return {Element}\n     */\n    render() {\n        const { language, messages: intlMessages, dropdownAlignment }: Props = this.props;\n        const {\n            fetchError,\n            isLoading,\n            integrations,\n            executePostData,\n            shouldRenderLoadingIntegrationPortal,\n            shouldRenderErrorIntegrationPortal,\n        }: State = this.state;\n\n        const className = classNames('be bcow', this.props.className);\n        const displayIntegration = this.getDisplayIntegration();\n        const numIntegrations = integrations ? integrations.length : 0;\n\n        return (\n            <Internationalize language={language} messages={intlMessages}>\n                <div className={className} data-testid=\"bcow-content\" id={this.id}>\n                    {numIntegrations <= 1 ? (\n                        <OpenWithButton\n                            displayIntegration={displayIntegration}\n                            error={fetchError}\n                            isLoading={isLoading}\n                            onClick={this.onIntegrationClick}\n                        />\n                    ) : (\n                        <OpenWithDropdownMenu\n                            dropdownAlignment={dropdownAlignment}\n                            integrations={((integrations: any): Array<Integration>)}\n                            onClick={this.onIntegrationClick}\n                        />\n                    )}\n                    {(shouldRenderLoadingIntegrationPortal || shouldRenderErrorIntegrationPortal) && (\n                        <IntegrationPortalContainer\n                            hasError={shouldRenderErrorIntegrationPortal}\n                            integrationWindow={this.integrationWindow}\n                        />\n                    )}\n                    {executePostData && (\n                        <ExecuteForm\n                            executePostData={executePostData}\n                            id={this.id}\n                            onSubmit={this.onExecuteFormSubmit}\n                            windowName={this.integrationWindow && this.integrationWindow.name}\n                        />\n                    )}\n                </div>\n            </Internationalize>\n        );\n    }\n}\n\nexport type ContentOpenWithProps = Props & ExternalProps;\nexport { ContentOpenWith as ContentOpenWithComponent };\nexport default withErrorBoundary(ORIGIN_OPEN_WITH, OpenWithFallbackButton)(ContentOpenWith);\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Form to invoke an integration via POST\n * @author Box\n */\n\nimport React, { PureComponent } from 'react';\nimport { HTTP_POST } from '../../constants';\n\ntype Props = {\n    executePostData: ExecuteAPI,\n    id: string,\n    onSubmit: Function,\n    windowName: ?string,\n};\n\nclass ExecuteForm extends PureComponent<Props> {\n    ref: any;\n\n    constructor(props: Props) {\n        super(props);\n        this.ref = React.createRef();\n    }\n\n    componentDidMount() {\n        const { onSubmit }: Props = this.props;\n        this.ref.current.submit();\n        onSubmit();\n    }\n\n    render() {\n        const {\n            executePostData: { url, params },\n            id,\n            windowName,\n        }: Props = this.props;\n        return (\n            <form\n                ref={this.ref}\n                action={url}\n                id={`bcow-execute-form-${id}`}\n                method={HTTP_POST}\n                rel=\"noreferrer noopener\"\n                target={windowName || '_blank'}\n            >\n                {params && params.map(({ key, value }) => <input key={key} name={key} type=\"hidden\" value={value} />)}\n            </form>\n        );\n    }\n}\n\nexport default ExecuteForm;\n","/**\n * @flow\n * @file Maintains a mapping of integration names to icons.\n * @author Box\n */\nimport IconAdobeSign from '../../icons/adobe-sign/IconAdobeSign';\nimport IconGoogleDocs from '../../icons/google-docs/IconGoogleDocs';\nimport IconGoogleSheets from '../../icons/google-docs/IconGoogleSheets';\nimport IconGoogleSlides from '../../icons/google-docs/IconGoogleSlides';\nimport FileIcon from '../../icons/file-icon/FileIcon';\n\nconst ICON_FILE_MAP = {\n    'Adobe Sign': IconAdobeSign,\n    'Google Docs': IconGoogleDocs,\n    'Google Docs (beta)': IconGoogleDocs,\n    'Google Sheets': IconGoogleSheets,\n    'Google Sheets (beta)': IconGoogleSheets,\n    'Google Slides': IconGoogleSlides,\n    'Google Slides (beta)': IconGoogleSlides,\n};\n\nfunction getIcon(iconName: string): React.Element<any> {\n    return ICON_FILE_MAP[iconName] || FileIcon;\n}\n\nexport default getIcon;\n","/**\n * @flow\n * @file Allows react to render a component in an arbitrary DOM node, in this case in a new window.\n * @author Box\n */\n\nimport { createPortal } from 'react-dom';\n\ntype Props = {\n    children: any,\n    integrationWindow: any,\n};\n\n/**\n * Copies stylesheets to the new window.\n *\n * @private\n * @param {HTMLDocument} documentElement - an HTML document\n * @param {Window} integrationWindow - a browser window\n * @return {void}\n */\nexport function copyStyles(documentElement: Document, integrationWindow: any) {\n    // The new window will have no CSS, so we copy all style sheets as a safe way\n    // of ensuring required styles are present\n    Array.from(documentElement.styleSheets).forEach(styleSheet => {\n        if (!styleSheet.href) {\n            return;\n        }\n\n        const copiedStyleSheet = integrationWindow.document.createElement('link');\n        copiedStyleSheet.rel = 'stylesheet';\n        copiedStyleSheet.href = styleSheet.href;\n        integrationWindow.document.head.appendChild(copiedStyleSheet);\n    });\n\n    // Reset margin and padding in our new window\n    integrationWindow.document.body.style.margin = 0;\n    integrationWindow.document.body.style.padding = 0;\n}\n\nconst IntegrationPortal = ({ integrationWindow, children }: Props) => {\n    const containerElement = integrationWindow.document.createElement('div');\n    copyStyles(document, integrationWindow);\n    integrationWindow.document.body.appendChild(containerElement);\n    return createPortal(children, containerElement);\n};\n\nexport default IntegrationPortal;\n","/**\n * @flow\n * @file integration portal container\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ErrorMask from '../../components/error-mask/ErrorMask';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport messages from '../common/messages';\nimport IntegrationPortal from './IntegrationPortal';\n\ntype Props = {\n    hasError: boolean,\n    integrationWindow: any,\n};\n\nconst IntegrationPortalContainer = ({ hasError, integrationWindow }: Props) => (\n    <IntegrationPortal integrationWindow={integrationWindow}>\n        <div className=\"be bcow bcow-portal-container\">\n            {hasError ? (\n                <ErrorMask\n                    errorHeader={<FormattedMessage {...messages.executeIntegrationOpenWithErrorHeader} />}\n                    errorSubHeader={<FormattedMessage {...messages.executeIntegrationOpenWithErrorSubHeader} />}\n                />\n            ) : (\n                <LoadingIndicator className=\"bcow-portal-loading-indicator\" size=\"large\" />\n            )}\n        </div>\n    </IntegrationPortal>\n);\n\nexport default IntegrationPortalContainer;\n","/**\n * @flow\n * @file Open With button when multiple integrations are present\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport MenuToggle from '../../components/dropdown-menu/MenuToggle';\nimport IconOpenWith from '../../icons/general/IconOpenWith';\nimport Button from '../../components/button/Button';\nimport Tooltip from '../common/Tooltip';\nimport messages from '../common/messages';\nimport OpenWithButtonContents from './OpenWithButtonContents';\nimport { CLASS_INTEGRATION_ICON, OPEN_WITH_BUTTON_ICON_SIZE } from '../../constants';\n\ntype Props = {\n    buttonProps?: ?Object,\n};\n\nconst MultipleIntegrationsOpenWithButton = (buttonProps: Props) => (\n    <Tooltip position=\"middle-left\" text={<FormattedMessage {...messages.defaultOpenWithDescription} />}>\n        <Button data-testid=\"multipleintegrationsbutton\" {...buttonProps}>\n            <MenuToggle>\n                <OpenWithButtonContents>\n                    <IconOpenWith\n                        className={CLASS_INTEGRATION_ICON}\n                        dimension={OPEN_WITH_BUTTON_ICON_SIZE}\n                        height={OPEN_WITH_BUTTON_ICON_SIZE}\n                        width={OPEN_WITH_BUTTON_ICON_SIZE}\n                    />\n                </OpenWithButtonContents>\n            </MenuToggle>\n        </Button>\n    </Tooltip>\n);\n\nexport default MultipleIntegrationsOpenWithButton;\n","/**\n * @flow\n * @file Open With button\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport noop from 'lodash/noop';\nimport Button from '../../components/button/Button';\nimport IconOpenWith from '../../icons/general/IconOpenWith';\nimport Tooltip from '../common/Tooltip';\nimport messages from '../common/messages';\nimport OpenWithButtonContents from './OpenWithButtonContents';\nimport utils from './openWithUtils';\nimport { CLASS_INTEGRATION_ICON, OPEN_WITH_BUTTON_ICON_SIZE } from '../../constants';\nimport getIcon from './IconFileMap';\n\ntype Props = {\n    displayIntegration?: ?Integration,\n    error: ?any,\n    icon?: string,\n    isLoading: boolean,\n    onClick?: Integration => void,\n    tooltipText?: string | Object,\n};\n\n/**\n * Gets the tooltip text for the ContentOpenWith button\n *\n * @private\n * @return {?(string | Element)} the tooltip message\n */\nexport const getTooltip = (\n    displayDescription: string,\n    isLoading: boolean,\n    error: ?Error,\n    disabledReasons: Array<DisabledReason> = [],\n): ?(string | React.Element<typeof FormattedMessage>) => {\n    if (isLoading) {\n        return null;\n    }\n\n    let message = <FormattedMessage {...messages.emptyOpenWithDescription} />;\n    if (disabledReasons.length > 0) {\n        [message] = disabledReasons;\n    } else if (error) {\n        message = <FormattedMessage {...messages.errorOpenWithDescription} />;\n    } else if (displayDescription) {\n        message = displayDescription;\n    }\n\n    return message;\n};\n\nconst OpenWithButton = ({ error, onClick = noop, displayIntegration, isLoading }: Props) => {\n    const { displayName, isDisabled: isDisplayIntegrationDisabled, extension, disabledReasons, displayDescription } =\n        displayIntegration || {};\n\n    const isDisabled = !!isDisplayIntegrationDisabled || !displayName;\n    const Icon = displayName ? getIcon(displayName) : IconOpenWith;\n\n    const tooltipDisplayProps = utils.isDisabledBecauseBoxToolsIsNotInstalled(displayIntegration)\n        ? { isShown: true, showCloseButton: true }\n        : {};\n\n    return (\n        <Tooltip\n            className=\"bcow-tooltip\"\n            position=\"bottom-center\"\n            text={getTooltip(displayDescription, isLoading, error, disabledReasons)}\n            {...tooltipDisplayProps}\n        >\n            <Button\n                data-testid=\"singleintegrationbutton\"\n                isDisabled={isDisabled}\n                onClick={() => (displayIntegration ? onClick(displayIntegration) : noop)}\n            >\n                <OpenWithButtonContents>\n                    <Icon\n                        className={CLASS_INTEGRATION_ICON}\n                        dimension={OPEN_WITH_BUTTON_ICON_SIZE}\n                        extension={extension}\n                        height={OPEN_WITH_BUTTON_ICON_SIZE}\n                        width={OPEN_WITH_BUTTON_ICON_SIZE}\n                    />\n                </OpenWithButtonContents>\n            </Button>\n        </Tooltip>\n    );\n};\n\nexport default OpenWithButton;\n","/**\n * @flow\n * @file Open With button contents\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from '../common/messages';\n\ntype Props = {\n    children: any,\n};\n\nconst OpenWithButtonContents = ({ children }: Props) => (\n    <>\n        {children}\n        <span className=\"bcow-btn-header-text\">\n            <FormattedMessage {...messages.open} />\n        </span>\n    </>\n);\n\nexport default OpenWithButtonContents;\n","/**\n * @flow\n * @file Open With dropdown menu\n * @author Box\n */\n\nimport * as React from 'react';\nimport DropdownMenu from '../../components/dropdown-menu/DropdownMenu';\nimport Menu from '../../components/menu/Menu';\nimport OpenWithDropdownMenuItem from './OpenWithDropdownMenuItem';\nimport MultipleIntegrationsOpenWithButton from './MultipleIntegrationsOpenWithButton';\n\ntype Props = {\n    dropdownAlignment: Alignment,\n    integrations: Array<Integration>,\n    onClick: Function,\n};\n\nconst RIGHT_ALIGNMENT = 'right';\n\nconst OpenWithDropdownMenu = ({ dropdownAlignment = RIGHT_ALIGNMENT, integrations, onClick }: Props) => (\n    <DropdownMenu isRightAligned={dropdownAlignment === RIGHT_ALIGNMENT}>\n        <MultipleIntegrationsOpenWithButton />\n        <Menu className=\"bcow-menu\">\n            {integrations.map(integration => (\n                <OpenWithDropdownMenuItem\n                    key={integration.appIntegrationId}\n                    integration={integration}\n                    onClick={onClick}\n                />\n            ))}\n        </Menu>\n    </DropdownMenu>\n);\n\nexport default OpenWithDropdownMenu;\n","/**\n * @flow\n * @file Open With dropdown menu item\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport MenuItem from '../../components/menu/MenuItem';\nimport messages from '../common/messages';\nimport { OPEN_WITH_MENU_ITEM_ICON_SIZE } from '../../constants';\nimport getIcon from './IconFileMap';\nimport utils from './openWithUtils';\nimport './OpenWithDropdownMenuItem.scss';\n\ntype Props = {\n    integration: Integration,\n    onClick: Function,\n};\n\nfunction getErrorMessage(disabledReasons: Array<string> = []): React.Node {\n    let message;\n    // Use the first disabled reason as the description if the integration is disabled.\n    const code = disabledReasons[0];\n    const defaultErrorMessage = <FormattedMessage {...messages.errorOpenWithDescription} />;\n\n    switch (code) {\n        case 'blocked_by_shield_access_policy':\n            message = <FormattedMessage {...messages.boxEditErrorBlockedByPolicy} />;\n            break;\n        case 'collaborators_hidden':\n            message = defaultErrorMessage;\n            break;\n        default:\n            message = disabledReasons[0] || defaultErrorMessage;\n    }\n    return message;\n}\n\nconst OpenWithDropdownMenuItem = ({ integration, onClick }: Props) => {\n    const { displayName, displayDescription, isDisabled, extension, disabledReasons } = integration;\n    const Icon = getIcon(displayName);\n    const description = isDisabled ? getErrorMessage(disabledReasons) : displayDescription;\n    const className = classNames({\n        'bcow-box-tools-uninstalled': utils.isDisabledBecauseBoxToolsIsNotInstalled(integration),\n    });\n\n    return (\n        <MenuItem className={className} isDisabled={isDisabled} onClick={() => onClick(integration)}>\n            <Icon\n                dimension={OPEN_WITH_MENU_ITEM_ICON_SIZE}\n                extension={extension}\n                height={OPEN_WITH_MENU_ITEM_ICON_SIZE}\n                width={OPEN_WITH_MENU_ITEM_ICON_SIZE}\n            />\n            <span>\n                <p className=\"bcow-menu-item-title\">{displayName}</p>\n                <p className=\"bcow-menu-item-description\">{description}</p>\n            </span>\n        </MenuItem>\n    );\n};\n\nexport default OpenWithDropdownMenuItem;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Open With fallback button\n * @author Box\n */\n\nimport * as React from 'react';\nimport OpenWithButton from './OpenWithButton';\n\ntype Props = {\n    error: ElementsError,\n};\n\nconst OpenWithFallbackButton = ({ error }: Props) => (\n    <div className=\"be bcow\">\n        <OpenWithButton error={error} isLoading={false} />\n    </div>\n);\n\nexport default OpenWithFallbackButton;\n","// @flow\nexport { default } from './ContentOpenWith';\n","/**\n * @flow\n * @file Open With utils\n * @author Box\n */\n\nimport getProp from 'lodash/get';\nimport BoxToolsInstallMessage from './BoxToolsInstallMessage';\n\nconst isDisabledBecauseBoxToolsIsNotInstalled = (integration: ?Integration): boolean => {\n    const disabledReasonType = getProp(integration, 'disabledReasons.0.type');\n    return disabledReasonType === BoxToolsInstallMessage;\n};\n\nexport default { isDisabledBecauseBoxToolsIsNotInstalled };\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconAdobeSign = ({ className = '', height = 30, title, width = 30 }: Props) => (\n    <AccessibleSVG\n        className={`icon-adobe-sign ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 30 30\"\n        width={width}\n    >\n        <path d=\"M1.27 1.27h27.45v26.67H1.27z\" fill=\"#260000\" />\n        <path d=\"M0 0v29.23h30V0zm1.45 1.45h27.1v26.31H1.45z\" fill=\"#ff3601\" />\n        <path d=\"M5.8 11.59v4.01l1.73 2.76 1.72-2.76v-4.01H5.8M5.68 20.4h19.06v1.04H5.68z\" fill=\"#ff3601\" />\n        <path\n            d=\"M24.78 16a.29.29 0 0 0-.2-.16 8.9 8.9 0 0 0-4.64.45c1.24-1.64 1-1.93.91-2.09s-.38-.22-.72-.08a28.23 28.23 0 0 0-3.07 1.54c1-1.54 1.35-2.55 1.1-2.94a.55.55 0 0 0-.58-.23 7.25 7.25 0 0 0-1.13.29c2.07-3.1 2.72-4.71 2.23-5.54-.23-.38-.7-.54-1.39-.46a8.13 8.13 0 0 0-3.77 1.92 5.38 5.38 0 0 0-2.12 2.84 1.17 1.17 0 0 0 1 1.25.31.31 0 0 0 .25 0 .29.29 0 0 0 .16-.2.29.29 0 0 0 0-.24.29.29 0 0 0-.2-.16c-.49-.15-.54-.38-.53-.57.11-1.3 3.49-3.94 5.32-4.16.4 0 .65 0 .74.16.34.58-.59 2.48-2.77 5.64-2.8 1.29-4.85 3.25-5 4.27a.85.85 0 0 0 .48.92.8.8 0 0 0 .44.11c1.15 0 2.61-2 4.54-4.78a7.77 7.77 0 0 1 1.79-.57 13.36 13.36 0 0 1-1.88 3.33.32.32 0 0 0 0 .42.34.34 0 0 0 .41 0 38.86 38.86 0 0 1 4-2.11 15.55 15.55 0 0 1-1.42 1.94.35.35 0 0 0 0 .41.32.32 0 0 0 .38.11c.58-.23 3.56-1.33 5.29-.82a.31.31 0 0 0 .25 0 .35.35 0 0 0 .16-.2.31.31 0 0 0-.03-.29zm-10.22-1.62c-.93 1.31-2.75 3.83-3.45 3.46-.11-.05-.14-.1-.12-.23.1-.72 1.74-2.19 3.57-3.23z\"\n            fill=\"#facfcb\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconAdobeSign;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\nimport { bdlGray80 } from '../../styles/variables';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconOpenWith = ({ className = '', color = bdlGray80, height = 16, title, width = 16 }: Props) => (\n    <AccessibleSVG\n        className={`icon-open-with ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 16 16\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            fill={color}\n            fillRule=\"evenodd\"\n            d=\"M12 2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2zm0 1H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1zm-1 2v6h-1V6.71l-4.65 4.64-.7-.7L9.29 6H5V5h6z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconOpenWith;\n","// @flow\nimport * as React from 'react';\nimport uniqueId from 'lodash/uniqueId';\n\nimport AccessibleSVG from '../accessible-svg';\n\nconst ICON_CLASS = 'icon-google-docs';\n\ntype Props = {\n    className: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nclass IconGoogleDocs extends React.Component<Props> {\n    static defaultProps = {\n        className: '',\n        height: 30,\n        width: 30,\n    };\n\n    idPrefix = `${uniqueId(ICON_CLASS)}-`;\n\n    render() {\n        const { className, height, title, width } = this.props;\n        return (\n            <AccessibleSVG\n                className={`${ICON_CLASS} ${className}`}\n                height={height}\n                title={title}\n                viewBox=\"0 0 30 30\"\n                width={width}\n            >\n                <defs>\n                    <linearGradient\n                        gradientTransform=\"matrix(2.67 0 0 -2.67 596.67 1357)\"\n                        gradientUnits=\"userSpaceOnUse\"\n                        id={`${this.idPrefix}a`}\n                        x1=\"-215.49\"\n                        x2=\"-215.49\"\n                        y1=\"505.79\"\n                        y2=\"503.19\"\n                    >\n                        <stop offset=\"0\" stopColor=\"#1a237e\" stopOpacity=\".2\" />\n                        <stop offset=\"1\" stopColor=\"#1a237e\" stopOpacity=\".02\" />\n                    </linearGradient>\n                </defs>\n                <path\n                    d=\"M17.64 0H6.05A2.05 2.05 0 0 0 4 2.05V28a2.05 2.05 0 0 0 2.05 2h17.72a2.05 2.05 0 0 0 2.05-2V8.18l-4.77-3.41z\"\n                    fill=\"#4285f4\"\n                />\n                <path d=\"M18.23 7.58l7.59 7.58V8.18l-7.59-.6z\" fill={`url(#${this.idPrefix}a)`} />\n                <path\n                    d=\"M9.45 21.82h10.91v-1.37H9.45zm0 2.73h8.19v-1.37H9.45zm0-9.55v1.36h10.91V15zm0 4.09h10.91v-1.36H9.45z\"\n                    fill=\"#f1f1f1\"\n                />\n                <path d=\"M17.64 0v6.14a2 2 0 0 0 2 2h6.14z\" fill=\"#a1c2fa\" />\n                <path\n                    d=\"M6.05 0A2.05 2.05 0 0 0 4 2.05v.17A2.05 2.05 0 0 1 6.05.17h11.59V0z\"\n                    fill=\"#fff\"\n                    fillOpacity=\".2\"\n                />\n                <path d=\"M19.68 8.18a2 2 0 0 1-2-2v.17a2 2 0 0 0 2 2h6.14v-.17z\" fill=\"#1a237e\" fillOpacity=\".1\" />\n            </AccessibleSVG>\n        );\n    }\n}\n\nexport default IconGoogleDocs;\n","// @flow\nimport * as React from 'react';\nimport uniqueId from 'lodash/uniqueId';\n\nimport AccessibleSVG from '../accessible-svg';\n\nconst ICON_CLASS = 'icon-google-sheets';\n\ntype Props = {\n    className: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nclass IconGoogleSheets extends React.Component<Props> {\n    static defaultProps = {\n        className: '',\n        height: 30,\n        width: 30,\n    };\n\n    idPrefix = `${uniqueId(ICON_CLASS)}-`;\n\n    render() {\n        const { className, height, title, width } = this.props;\n        return (\n            <AccessibleSVG\n                className={`${ICON_CLASS} ${className}`}\n                height={height}\n                title={title}\n                viewBox=\"0 0 30 30\"\n                width={width}\n            >\n                <defs>\n                    <linearGradient\n                        gradientTransform=\"matrix(2.67 0 0 -2.67 596.67 1357)\"\n                        gradientUnits=\"userSpaceOnUse\"\n                        id={`${this.idPrefix}a`}\n                        x1=\"-215.49\"\n                        x2=\"-215.49\"\n                        y1=\"505.79\"\n                        y2=\"503.19\"\n                    >\n                        <stop offset=\"0\" stopColor=\"#208256\" />\n                        <stop offset=\".55\" stopColor=\"#19955a\" stopOpacity=\".2\" />\n                    </linearGradient>\n                </defs>\n                <path\n                    d=\"M17.64 0H6.05A2.05 2.05 0 0 0 4 2.05V28a2.05 2.05 0 0 0 2.05 2h17.72a2.05 2.05 0 0 0 2.05-2V8.18l-4.77-3.41z\"\n                    fill=\"#22a565\"\n                />\n                <path d=\"M18.23 7.58l7.59 7.58V8.18l-7.59-.6z\" fill={`url(#${this.idPrefix}a)`} />\n                <path d=\"M17.64 0v6.14a2 2 0 0 0 2 2h6.14z\" fill=\"#8ed1b1\" />\n                <path\n                    d=\"M6.05 0A2.05 2.05 0 0 0 4 2.05v.17A2.05 2.05 0 0 1 6.05.17h11.59V0z\"\n                    fill=\"#fff\"\n                    fillOpacity=\".2\"\n                />\n                <path d=\"M19.68 8.18a2 2 0 0 1-2-2v.17a2 2 0 0 0 2 2h6.14v-.17z\" fill=\"#1a237e\" fillOpacity=\".1\" />\n                <path\n                    d=\"M10 14v10h10V14zm1 1h3.5v2H11zm0 3h3.5v2H11zm0 5v-2h3.5v2zm8 0h-3.5v-2H19zm0-3h-3.5v-2H19zm0-3h-3.5v-2H19z\"\n                    fill=\"#f1f1f1\"\n                />\n            </AccessibleSVG>\n        );\n    }\n}\n\nexport default IconGoogleSheets;\n","// @flow\nimport * as React from 'react';\nimport uniqueId from 'lodash/uniqueId';\n\nimport AccessibleSVG from '../accessible-svg';\n\nconst ICON_CLASS = 'icon-google-slides';\n\ntype Props = {\n    className: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nclass IconGoogleSlides extends React.Component<Props> {\n    static defaultProps = {\n        className: '',\n        height: 30,\n        width: 30,\n    };\n\n    idPrefix = `${uniqueId(ICON_CLASS)}-`;\n\n    render() {\n        const { className, height, title, width } = this.props;\n        return (\n            <AccessibleSVG\n                className={`${ICON_CLASS} ${className}`}\n                height={height}\n                title={title}\n                viewBox=\"0 0 30 30\"\n                width={width}\n            >\n                <defs>\n                    <linearGradient\n                        gradientTransform=\"matrix(2.67 0 0 -2.67 596.67 1357)\"\n                        gradientUnits=\"userSpaceOnUse\"\n                        id={`${this.idPrefix}a`}\n                        x1=\"-215.49\"\n                        x2=\"-215.49\"\n                        y1=\"505.79\"\n                        y2=\"503.19\"\n                    >\n                        <stop offset=\"0\" stopColor=\"#d08714\" stopOpacity=\".88\" />\n                        <stop offset=\".55\" stopColor=\"#cf8714\" stopOpacity=\".2\" />\n                    </linearGradient>\n                </defs>\n                <path\n                    d=\"M17.64 0H6.05A2.05 2.05 0 0 0 4 2.05V28a2.05 2.05 0 0 0 2.05 2h17.72a2.05 2.05 0 0 0 2.05-2V8.18l-4.77-3.41z\"\n                    fill=\"#f4b912\"\n                />\n                <path d=\"M18.23 7.58l7.59 7.58V8.18l-7.59-.6z\" fill={`url(#${this.idPrefix}a)`} />\n                <path d=\"M17.64 0v6.14a2 2 0 0 0 2 2h6.14z\" fill=\"#fadc87\" />\n                <path\n                    d=\"M6.05 0A2.05 2.05 0 0 0 4 2.05v.17A2.05 2.05 0 0 1 6.05.17h11.59V0z\"\n                    fill=\"#fff\"\n                    fillOpacity=\".2\"\n                />\n                <path d=\"M19.68 8.18a2 2 0 0 1-2-2v.17a2 2 0 0 0 2 2h6.14v-.17z\" fill=\"#1a237e\" fillOpacity=\".1\" />\n                <path\n                    d=\"M10 15v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-8a1 1 0 0 0-1-1h-8a1 1 0 0 0-1 1zm9 6h-8v-4h8z\"\n                    fill=\"#f1f1f1\"\n                />\n            </AccessibleSVG>\n        );\n    }\n}\n\nexport default IconGoogleSlides;\n"],"sourceRoot":""}