{"version":3,"sources":["webpack:///./src/components/dropdown-menu/index.js","webpack:///./src/components/inline-error/index.js","webpack:///./src/components/menu/MenuLinkItem.js","webpack:///./src/components/menu/MenuSectionHeader.js","webpack:///./src/components/menu/MenuSeparator.js","webpack:///./src/components/menu/SelectMenuItem.js","webpack:///./src/components/menu/SelectMenuLinkItem.js","webpack:///./src/components/menu/SubmenuItem.js","webpack:///./src/components/menu/SubmenuItem.scss","webpack:///./src/components/menu/index.js","webpack:///./src/components/time/ReadableTime.js","webpack:///./src/components/time/index.js","webpack:///./src/components/time/messages.js","webpack:///./src/elements/common/selectors/version.js","webpack:///./src/icons/general/IconTrash.js"],"names":["MenuLinkItem","children","isSelected","isSelectItem","rest","linkEl","React","only","listItemProps","omit","role","linkProps","className","classNames","props","tabIndex","MenuSectionHeader","MenuSeparator","SelectMenuItem","SelectMenuLinkItem","SUBMENU_LEFT_ALIGNED_CLASS","SUBMENU_BOTTOM_ALIGNED_CLASS","SubmenuItem","isSubmenuOpen","submenuFocusIndex","submenuTriggerEl","submenuEl","rightBoundaryElement","bottomBoundaryElement","submenuElBounding","getBoundingClientRect","submenuTriggerElBounding","rightBoundaryElementBounding","right","window","innerWidth","bottomBoundaryElementBounding","bottom","innerHeight","isLeftAligned","width","isBottomAligned","top","height","event","isDisabled","onClick","stopPropagation","preventDefault","key","openSubmenuAndFocus","setState","isKeyboardEvent","closeSubmenu","focus","render","state","elements","toArray","submenuTriggerContent","submenu","length","Error","menuItemProps","undefined","handleMenuItemClick","onMouseLeave","onMouseEnter","openSubmenu","onKeyDown","handleKeyDown","ref","submenuProps","getMenuAlignmentClasses","initialFocusIndex","isHidden","isSubmenu","onClose","closeSubmenuAndFocusTrigger","setRef","ReadableTime","timestamp","relativeThreshold","ONE_HOUR_MS","allowFutureTimestamps","alwaysShowTime","showWeekday","relativeIfNewerThanTs","Date","now","shouldShowYear","isCurrentYear","dateMessage","messages","eventTime","date","weekday","isToday","eventTimeToday","isYesterday","eventTimeYesterday","eventTimeWeekdayLong","eventTimeDate","eventTimeDateShort","output","time","Math","abs","defineMessages","getVersionAction","restored_at","trashed_at","version_promoted","action","VERSION_UPLOAD_ACTION","VERSION_DELETE_ACTION","VERSION_RESTORE_ACTION","VERSION_PROMOTE_ACTION","getVersionUser","modified_by","restored_by","trashed_by","PLACEHOLDER_USER","IconTrash","color","bdlGray80","title"],"mappings":"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","file":"activity-sidebar~versions-sidebar.no.react.js","sourcesContent":["// @flow\nexport { default } from './DropdownMenu';\nexport { default as MenuToggle } from './MenuToggle';\n","// @flow\nexport { default } from './InlineError';\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\n\ntype Props = {\n    children: React.Node,\n    isSelectItem?: boolean,\n    isSelected?: boolean,\n};\n\nconst MenuLinkItem = ({ children, isSelected = false, isSelectItem = false, ...rest }: Props) => {\n    const linkEl = React.Children.only(children);\n\n    const listItemProps = omit(rest, ['role', 'tabIndex']);\n    listItemProps.role = 'none';\n\n    const linkProps: Object = {\n        className: classNames('menu-item', linkEl.props.className, {\n            'is-select-item': isSelectItem,\n            'is-selected': isSelected,\n        }),\n        role: isSelectItem ? 'menuitemradio' : 'menuitem',\n        tabIndex: -1,\n    };\n\n    if (isSelectItem) {\n        linkProps['aria-checked'] = isSelected;\n    }\n\n    return <li {...listItemProps}>{React.cloneElement(linkEl, linkProps)}</li>;\n};\n\nexport default MenuLinkItem;\n","// @flow\nimport * as React from 'react';\n\nimport MenuItem from './MenuItem';\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n};\n\nconst MenuSectionHeader = ({ className = '', ...rest }: Props) => (\n    <MenuItem className={`menu-section-header ${className}`} isDisabled {...rest} />\n);\n\nexport default MenuSectionHeader;\n","// @flow\nimport React from 'react';\n\nconst MenuSeparator = () => <li role=\"separator\" />;\n\nexport default MenuSeparator;\n","// @flow\nimport * as React from 'react';\n\nimport MenuItem from './MenuItem';\n\ntype Props = {\n    children: React.Node,\n};\n\nconst SelectMenuItem = (props: Props) => <MenuItem isSelectItem {...props} />;\n\nexport default SelectMenuItem;\n","// @flow\nimport * as React from 'react';\n\nimport MenuLinkItem from './MenuLinkItem';\n\ntype Props = {\n    children: React.Node,\n};\n\nconst SelectMenuLinkItem = (props: Props) => <MenuLinkItem isSelectItem {...props} />;\n\nexport default SelectMenuLinkItem;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\n\nimport './SubmenuItem.scss';\n\nconst SUBMENU_LEFT_ALIGNED_CLASS = 'is-left-aligned';\nconst SUBMENU_BOTTOM_ALIGNED_CLASS = 'is-bottom-aligned';\n\ntype Props = {\n    /** An HTMLElement defining the bottom boundary for the submenu */\n    bottomBoundaryElement?: HTMLElement,\n    children: React.Node,\n    className?: string,\n    isDisabled?: boolean,\n    onClick?: Function,\n    /** An HTMLElement defining the right boundary for the submenu */\n    rightBoundaryElement?: HTMLElement,\n};\n\ntype State = {\n    isSubmenuOpen: boolean,\n    submenuFocusIndex: ?number,\n};\n\n/**\n * A menu-item component which triggers open a submenu\n *\n * @NOTE: Nested submenus are NOT currently supported, switching\n * focus with arrow keys in the subsubmenu is not working properly.\n */\nclass SubmenuItem extends React.Component<Props, State> {\n    state = {\n        isSubmenuOpen: false,\n        submenuFocusIndex: null,\n    };\n\n    getMenuAlignmentClasses = () => {\n        if (!this.submenuTriggerEl || !this.submenuEl) {\n            return {};\n        }\n\n        const { rightBoundaryElement, bottomBoundaryElement } = this.props;\n        const submenuElBounding = this.submenuEl.getBoundingClientRect();\n        // $FlowFixMe checked this.submenuEl is set above\n        const submenuTriggerElBounding = this.submenuTriggerEl.getBoundingClientRect();\n        const rightBoundaryElementBounding = rightBoundaryElement\n            ? rightBoundaryElement.getBoundingClientRect()\n            : { right: window.innerWidth };\n        const bottomBoundaryElementBounding = bottomBoundaryElement\n            ? bottomBoundaryElement.getBoundingClientRect()\n            : { bottom: window.innerHeight };\n\n        const isLeftAligned =\n            submenuTriggerElBounding.right + submenuElBounding.width > rightBoundaryElementBounding.right;\n        const isBottomAligned =\n            submenuTriggerElBounding.top + submenuElBounding.height > bottomBoundaryElementBounding.bottom;\n\n        return {\n            [SUBMENU_LEFT_ALIGNED_CLASS]: isLeftAligned,\n            [SUBMENU_BOTTOM_ALIGNED_CLASS]: isBottomAligned,\n        };\n    };\n\n    handleMenuItemClick = (event: SyntheticKeyboardEvent<>) => {\n        const { isDisabled, onClick } = this.props;\n\n        // If aria-disabled is passed as a prop, we should ignore clicks on this menu item\n        if (isDisabled) {\n            event.stopPropagation();\n            event.preventDefault();\n\n            return;\n        }\n\n        if (onClick) {\n            onClick(event);\n        }\n    };\n\n    submenuTriggerEl: ?HTMLElement;\n\n    submenuEl: ?HTMLElement;\n\n    handleKeyDown = (event: SyntheticKeyboardEvent<>) => {\n        switch (event.key) {\n            case ' ': // Spacebar\n            case 'Enter':\n            case 'ArrowRight':\n                event.stopPropagation();\n                event.preventDefault();\n\n                this.openSubmenuAndFocus();\n                break;\n            default:\n                break;\n        }\n    };\n\n    closeSubmenu = () => {\n        this.setState({\n            isSubmenuOpen: false,\n        });\n    };\n\n    closeSubmenuAndFocusTrigger = (isKeyboardEvent: ?boolean) => {\n        this.closeSubmenu();\n\n        if (this.submenuTriggerEl && isKeyboardEvent) {\n            this.submenuTriggerEl.focus();\n        }\n    };\n\n    openSubmenu = () => {\n        this.setState({\n            isSubmenuOpen: true,\n            submenuFocusIndex: null,\n        });\n    };\n\n    openSubmenuAndFocus = () => {\n        this.setState({\n            isSubmenuOpen: true,\n            submenuFocusIndex: 0,\n        });\n    };\n\n    render() {\n        const { children, className, isDisabled, ...rest } = this.props;\n        const { isSubmenuOpen, submenuFocusIndex } = this.state;\n\n        const elements = React.Children.toArray(children);\n        const submenuTriggerContent = elements[0];\n        const submenu = elements[1];\n        if (elements.length !== 2 || !submenuTriggerContent || !submenu) {\n            throw new Error('SubmenuItem must have exactly two children, a trigger component and a <Menu>');\n        }\n\n        const menuItemProps = {\n            ...omit(rest, ['bottomBoundaryElement', 'onClick', 'rightBoundaryElement', 'role', 'tabIndex']),\n            'aria-disabled': isDisabled ? 'true' : undefined,\n            'aria-expanded': isSubmenuOpen ? 'true' : 'false',\n            'aria-haspopup': 'true',\n            className: classNames('menu-item', 'submenu-target', className),\n            onClick: this.handleMenuItemClick,\n            onMouseLeave: this.closeSubmenu,\n            onMouseEnter: this.openSubmenu,\n            onKeyDown: this.handleKeyDown,\n            ref: ref => {\n                this.submenuTriggerEl = ref;\n            },\n            role: 'menuitem',\n            tabIndex: -1,\n        };\n\n        const submenuProps: Object = {\n            className: classNames(submenu.props.className, 'submenu', this.getMenuAlignmentClasses()),\n            initialFocusIndex: submenuFocusIndex,\n            // Hide the menu instead of unmounting it. Otherwise onMouseLeave won't work.\n            isHidden: !isSubmenuOpen,\n            isSubmenu: true,\n            onClose: this.closeSubmenuAndFocusTrigger,\n            setRef: ref => {\n                this.submenuEl = ref;\n            },\n        };\n\n        return (\n            <li {...menuItemProps}>\n                {submenuTriggerContent}\n                {React.cloneElement(submenu, submenuProps)}\n            </li>\n        );\n    }\n}\n\nexport default SubmenuItem;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default as Menu } from './Menu';\nexport { default as MenuItem } from './MenuItem';\nexport { default as MenuLinkItem } from './MenuLinkItem';\nexport { default as MenuSectionHeader } from './MenuSectionHeader';\nexport { default as MenuSeparator } from './MenuSeparator';\nexport { default as SelectMenuItem } from './SelectMenuItem';\nexport { default as SelectMenuLinkItem } from './SelectMenuLinkItem';\nexport { default as SubmenuItem } from './SubmenuItem';\n","// @flow\nimport React from 'react';\nimport { FormattedMessage, FormattedRelative, FormattedDate } from 'react-intl';\n\nimport { ONE_HOUR_MS } from '../../constants';\nimport { isToday, isYesterday, isCurrentYear } from '../../utils/datetime';\n\nimport messages from './messages';\n\ntype Props = {\n    /** A boolean that will cause future timestamps (usually due to incorrect computer time) to be corrected to the isToday message */\n    allowFutureTimestamps?: boolean,\n    /** A boolean that will include the time alongside the date, if the date is shown */\n    alwaysShowTime?: boolean,\n    /** The number of milliseconds before now that a relative (vs. absolute) time should be displayed (Default: 1 hour) */\n    relativeThreshold?: number,\n    /** A boolean that will include the weekday alongside the date, if the date is shown */\n    showWeekday?: boolean,\n    /** The timestamp which should be used to display the date */\n    timestamp: number,\n};\n\nconst ReadableTime = ({\n    timestamp,\n    relativeThreshold = ONE_HOUR_MS,\n    allowFutureTimestamps = true,\n    alwaysShowTime = false,\n    showWeekday = false,\n}: Props) => {\n    const relativeIfNewerThanTs = Date.now() - relativeThreshold;\n    const shouldShowYear = !isCurrentYear(timestamp);\n\n    if (!allowFutureTimestamps && timestamp > Date.now()) {\n        // TODO: what is the reasoning behind this rule?\n        timestamp = relativeIfNewerThanTs; // Default to 'Today' for timestamps that would show a future date\n    }\n\n    // e.g. Oct 5, 2018\n    let dateMessage = messages.eventTime;\n    let date = null;\n    let weekday = null;\n    if (isToday(timestamp)) {\n        // e.g. Today at 12:30 PM\n        dateMessage = messages.eventTimeToday;\n    } else if (isYesterday(timestamp)) {\n        // e.g. Yesterday at 11:30 AM\n        dateMessage = messages.eventTimeYesterday;\n    } else if (showWeekday) {\n        // e.g. Monday, Oct 5, 2018\n        dateMessage = messages.eventTimeWeekdayLong;\n        weekday = <FormattedDate value={timestamp} weekday=\"long\" />;\n    } else if (shouldShowYear && alwaysShowTime) {\n        // e.g. Oct 5, 2018 at 10:30 PM\n        dateMessage = messages.eventTimeDate;\n    } else if (!shouldShowYear && alwaysShowTime) {\n        // e.g. Oct 5 at 10:30 PM\n        dateMessage = messages.eventTimeDateShort;\n        date = <FormattedDate value={timestamp} month=\"short\" day=\"numeric\" />;\n    } else if (!shouldShowYear && !alwaysShowTime) {\n        // e.g. Oct 5\n        return <FormattedDate value={timestamp} month=\"short\" day=\"numeric\" />;\n    }\n\n    let output = <FormattedMessage {...dateMessage} values={{ time: timestamp, date, weekday }} />;\n\n    // if the time stamp is within +/- the relative threshold for the current time,\n    // print the default time format\n    if (Math.abs(Date.now() - timestamp) <= relativeThreshold) {\n        output = <FormattedRelative value={timestamp} />;\n    }\n\n    return output;\n};\n\nexport default ReadableTime;\n","// @flow\n// eslint-disable-next-line import/prefer-default-export\nexport { default as ReadableTime } from './ReadableTime';\n","// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    eventTime: {\n        defaultMessage: '{time, date, medium}',\n        description: 'The time that an event occurred',\n        id: 'boxui.readableTime.eventTime',\n    },\n    eventTimeToday: {\n        defaultMessage: 'Today at {time, time, short}',\n        description: 'The time that an event occurred today',\n        id: 'boxui.readableTime.eventTimeToday',\n    },\n    eventTimeYesterday: {\n        defaultMessage: 'Yesterday at {time, time, short}',\n        description: 'The time that an event occurred yesterday',\n        id: 'boxui.readableTime.eventTimeYesterday',\n    },\n    eventTimeDate: {\n        defaultMessage: '{time, date, medium} at {time, time, short}',\n        description: 'The time that an event occurred at a given date with the year included',\n        id: 'boxui.readableTime.eventTimeDate',\n    },\n    eventTimeDateShort: {\n        defaultMessage: '{date} at {time, time, short}',\n        description: 'The time that an event occurred at a given date without the year included',\n        id: 'boxui.readableTime.eventTimeDateShort',\n    },\n    eventTimeWeekdayLong: {\n        defaultMessage: '{weekday}, {time, date, medium}',\n        description: 'The time that an event occurred at a given date with the weekday included',\n        id: 'boxui.readableTime.eventTimeWeekdayLong',\n    },\n});\n\nexport default messages;\n","// @flow\nimport {\n    PLACEHOLDER_USER,\n    VERSION_DELETE_ACTION,\n    VERSION_PROMOTE_ACTION,\n    VERSION_RESTORE_ACTION,\n    VERSION_UPLOAD_ACTION,\n} from '../../../constants';\n\ntype VersionAction =\n    | typeof VERSION_DELETE_ACTION\n    | typeof VERSION_PROMOTE_ACTION\n    | typeof VERSION_RESTORE_ACTION\n    | typeof VERSION_UPLOAD_ACTION;\n\nconst getVersionAction = ({ restored_at, trashed_at, version_promoted }: $Shape<BoxItemVersion>): VersionAction => {\n    let action = VERSION_UPLOAD_ACTION;\n\n    if (trashed_at) {\n        action = VERSION_DELETE_ACTION;\n    }\n\n    if (restored_at) {\n        action = VERSION_RESTORE_ACTION;\n    }\n\n    if (version_promoted) {\n        action = VERSION_PROMOTE_ACTION;\n    }\n\n    return action;\n};\n\nconst getVersionUser = ({ modified_by, restored_by, trashed_by }: $Shape<BoxItemVersion>): User => {\n    return restored_by || trashed_by || modified_by || PLACEHOLDER_USER;\n};\n\nexport default {\n    getVersionAction,\n    getVersionUser,\n};\n","// @flow\nimport * as React from 'react';\nimport { bdlGray80 } from '../../styles/variables';\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconTrash = ({ className = '', color = bdlGray80, height = 16, title, width = 16 }: Props) => (\n    <AccessibleSVG\n        className={`icon-trash ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 16 16\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            fill={color}\n            fillRule=\"evenodd\"\n            d=\"M14 2l-1.8 11c-.1.6-.7 1-1.2 1H5c-.6 0-1.1-.5-1.2-1L2 2h12zm-1.2 1H3.2l1.6 9.9s.1.1.2.1h6c.06 0 .12-.036.158-.065l.042-.035L12.8 3zm-2.3 1c.3 0 .5.2.5.5s-.2.5-.5.5h-5c-.3 0-.5-.2-.5-.5s.2-.5.5-.5z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconTrash;\n"],"sourceRoot":""}