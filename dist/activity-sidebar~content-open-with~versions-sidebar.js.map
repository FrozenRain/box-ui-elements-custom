{"version":3,"sources":["webpack:///./src/components/dropdown-menu/DropdownMenu.js","webpack:///./src/components/dropdown-menu/DropdownMenu.scss","webpack:///./src/components/dropdown-menu/MenuToggle.js","webpack:///./src/components/dropdown-menu/MenuToggle.scss","webpack:///./src/components/menu/Menu.js","webpack:///./src/components/menu/Menu.scss","webpack:///./src/components/menu/MenuItem.js"],"names":["DropdownMenu","React","uniqueId","initialFocusIndex","isOpen","setState","menuButtonEl","document","getElementById","menuButtonID","focus","event","state","stopPropagation","preventDefault","closeMenu","openMenuAndSetFocusIndex","key","KEYS","space","enter","arrowDown","arrowUp","escape","isKeyboardEvent","onMenuClose","props","focusButton","menuEl","menuID","target","Node","contains","componentDidUpdate","prevProps","prevState","addEventListener","handleDocumentClick","onMenuOpen","removeEventListener","componentWillUnmount","render","bodyElement","children","isRightAligned","constrainToScrollParent","constrainToWindow","className","elements","toArray","length","Error","menuButton","menu","menuButtonProps","id","onClick","handleButtonClick","onKeyDown","handleButtonKeyDown","menuProps","onClose","handleMenuClose","attachment","targetAttachment","constraints","push","to","bodyEl","HTMLElement","body","MenuToggle","MENU_ITEM_SELECTOR","TOP_LEVEL_MENU_ITEM_SELECTOR","SUBMENU_ITEM_SELECTOR","stopPropagationAndPreventDefault","Menu","constructor","isHidden","undefined","setTimeout","setFocus","isSubmenu","selector","menuItemEls","slice","call","querySelectorAll","menuItemEl","menuIndex","i","index","numMenuItems","focusIndex","getMenuItemElFromEventTarget","fireOnCloseHandler","keyboardPressed","focusFirstItem","focusNextItem","focusPreviousItem","focusLastItem","click","componentDidMount","setMenuItemEls","setInitialFocusIndex","prevIsHidden","prevChildren","focusedMenuItemEl","setRef","shouldOutlineFocus","rest","omit","classNames","ref","role","tabIndex","handleClick","handleKeyDown","MenuItem","isDisabled","isSelectItem","isSelected","showRadar","menuItemProps","onClickHandler","menuItem"],"mappings":"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","file":"activity-sidebar~content-open-with~versions-sidebar.js","sourcesContent":["// @flow\nimport * as React from 'react';\nimport TetherComponent from 'react-tether';\nimport uniqueId from 'lodash/uniqueId';\n\nimport { KEYS } from '../../constants';\nimport './DropdownMenu.scss';\n\ntype Props = {\n    bodyElement?: HTMLElement,\n    children: React.Node,\n    /** Forces menu to render within the scroll parent */\n    className?: string,\n    /** Forces menu to render within the visible window */\n    constrainToScrollParent: boolean,\n    /** Right aligns menu to button */\n    constrainToWindow: boolean,\n    /** Function called when menu is opened */\n    isRightAligned: boolean,\n    /** Handler for dropdown menu close events */\n    onMenuClose?: (event: SyntheticEvent<>) => void,\n    /** Handler for dropdown menu open events */\n    onMenuOpen?: () => void,\n};\n\ntype State = {\n    initialFocusIndex: ?number,\n    isOpen: boolean,\n};\n\nclass DropdownMenu extends React.Component<Props, State> {\n    static defaultProps = {\n        constrainToScrollParent: false,\n        constrainToWindow: false,\n        isRightAligned: false,\n    };\n\n    menuID = uniqueId('menu');\n\n    menuButtonID = uniqueId('menubutton');\n\n    state = {\n        initialFocusIndex: null,\n        isOpen: false,\n    };\n\n    componentDidUpdate(prevProps: Props, prevState: State) {\n        if (!prevState.isOpen && this.state.isOpen) {\n            // When menu is being opened\n            document.addEventListener('click', this.handleDocumentClick, true);\n            document.addEventListener('contextmenu', this.handleDocumentClick, true);\n\n            const { onMenuOpen } = this.props;\n            if (onMenuOpen) {\n                onMenuOpen();\n            }\n        } else if (prevState.isOpen && !this.state.isOpen) {\n            // When menu is being closed\n            document.removeEventListener('contextmenu', this.handleDocumentClick, true);\n            document.removeEventListener('click', this.handleDocumentClick, true);\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.state.isOpen) {\n            // Clean-up global click handlers\n            document.removeEventListener('contextmenu', this.handleDocumentClick, true);\n            document.removeEventListener('click', this.handleDocumentClick, true);\n        }\n    }\n\n    menuID: string;\n\n    menuButtonID: string;\n\n    openMenuAndSetFocusIndex = (initialFocusIndex: ?number) => {\n        this.setState({\n            initialFocusIndex,\n            isOpen: true,\n        });\n    };\n\n    closeMenu = () => {\n        this.setState({\n            isOpen: false,\n        });\n    };\n\n    focusButton = () => {\n        // @NOTE: This breaks encapsulation a bit, but the only other way is passing ref functions to unknown children components\n        const menuButtonEl = document.getElementById(this.menuButtonID);\n        if (menuButtonEl) {\n            menuButtonEl.focus();\n        }\n    };\n\n    handleButtonClick = (event: SyntheticEvent<>) => {\n        const { isOpen } = this.state;\n\n        event.stopPropagation();\n        event.preventDefault();\n\n        if (isOpen) {\n            this.closeMenu();\n        } else {\n            this.openMenuAndSetFocusIndex(null);\n        }\n    };\n\n    handleButtonKeyDown = (event: SyntheticKeyboardEvent<>) => {\n        const { isOpen } = this.state;\n\n        switch (event.key) {\n            case KEYS.space:\n            case KEYS.enter:\n            case KEYS.arrowDown:\n                event.stopPropagation();\n                event.preventDefault();\n\n                this.openMenuAndSetFocusIndex(0);\n                break;\n\n            case KEYS.arrowUp:\n                event.stopPropagation();\n                event.preventDefault();\n\n                this.openMenuAndSetFocusIndex(-1);\n                break;\n\n            case KEYS.escape:\n                if (isOpen) {\n                    event.stopPropagation();\n                }\n\n                event.preventDefault();\n                this.closeMenu();\n                break;\n\n            default:\n                break;\n        }\n    };\n\n    handleMenuClose = (isKeyboardEvent: boolean, event: SyntheticEvent<>) => {\n        const { onMenuClose } = this.props;\n\n        this.closeMenu();\n        this.focusButton();\n\n        if (onMenuClose) {\n            onMenuClose(event);\n        }\n    };\n\n    handleDocumentClick = (event: MouseEvent) => {\n        const menuEl = document.getElementById(this.menuID);\n        const menuButtonEl = document.getElementById(this.menuButtonID);\n\n        // Some DOM magic to get global click handlers to close menu when not interacting with menu or associated button\n        if (\n            menuEl &&\n            menuButtonEl &&\n            event.target instanceof Node &&\n            !menuEl.contains(event.target) &&\n            !menuButtonEl.contains(event.target)\n        ) {\n            this.closeMenu();\n        }\n    };\n\n    render() {\n        const {\n            bodyElement,\n            children,\n            isRightAligned,\n            constrainToScrollParent,\n            constrainToWindow,\n            className,\n        } = this.props;\n        const { isOpen, initialFocusIndex } = this.state;\n\n        const elements = React.Children.toArray(children);\n\n        if (elements.length !== 2) {\n            throw new Error('DropdownMenu must have exactly two children: A button component and a <Menu>');\n        }\n\n        const menuButton = elements[0];\n        const menu = elements[1];\n\n        const menuButtonProps: Object = {\n            id: this.menuButtonID,\n            key: this.menuButtonID,\n            onClick: this.handleButtonClick, // NOTE: Overrides button's handler\n            onKeyDown: this.handleButtonKeyDown, // NOTE: Overrides button's handler\n            'aria-haspopup': 'true',\n            'aria-expanded': isOpen ? 'true' : 'false',\n        };\n\n        // Add this only when its open, otherwise the menuID element isn't rendered\n        if (isOpen) {\n            menuButtonProps['aria-controls'] = this.menuID;\n        }\n\n        const menuProps = {\n            id: this.menuID,\n            key: this.menuID,\n            initialFocusIndex,\n            onClose: this.handleMenuClose,\n            'aria-labelledby': this.menuButtonID,\n        };\n\n        let attachment = 'top left';\n        let targetAttachment = 'bottom left';\n\n        if (isRightAligned) {\n            attachment = 'top right';\n            targetAttachment = 'bottom right';\n        }\n\n        const constraints = [];\n\n        if (constrainToScrollParent) {\n            constraints.push({\n                to: 'scrollParent',\n                attachment: 'together',\n            });\n        }\n\n        if (constrainToWindow) {\n            constraints.push({\n                to: 'window',\n                attachment: 'together',\n            });\n        }\n\n        const bodyEl = bodyElement instanceof HTMLElement ? bodyElement : document.body;\n\n        return (\n            <TetherComponent\n                attachment={attachment}\n                bodyElement={bodyEl}\n                className={className}\n                classPrefix=\"dropdown-menu\"\n                constraints={constraints}\n                enabled={isOpen}\n                targetAttachment={targetAttachment}\n            >\n                {React.cloneElement(menuButton, menuButtonProps)}\n                {isOpen ? React.cloneElement(menu, menuProps) : null}\n            </TetherComponent>\n        );\n    }\n}\n\nexport default DropdownMenu;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\n\nimport IconCaretDown from '../../icons/general/IconCaretDown';\n\nimport './MenuToggle.scss';\n\ntype Props = {\n    children?: React.Node,\n};\n\nconst MenuToggle = ({ children }: Props) => (\n    <span className=\"menu-toggle\">\n        {children}\n        <IconCaretDown className=\"toggle-arrow\" width={7} />\n    </span>\n);\n\nexport default MenuToggle;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport omit from 'lodash/omit';\nimport classNames from 'classnames';\n\nimport './Menu.scss';\n\nconst MENU_ITEM_SELECTOR = '.menu-item:not([aria-disabled])';\nconst TOP_LEVEL_MENU_ITEM_SELECTOR = `ul:not(.submenu) > ${MENU_ITEM_SELECTOR}, ul:not(.submenu) > li > ${MENU_ITEM_SELECTOR}`;\nconst SUBMENU_ITEM_SELECTOR = `ul.submenu > ${MENU_ITEM_SELECTOR}, ul.submenu > li > ${MENU_ITEM_SELECTOR}`;\n\nfunction stopPropagationAndPreventDefault(event) {\n    event.stopPropagation();\n    event.preventDefault();\n}\n\ntype Props = {\n    children: React.Node,\n    className: string,\n    /** Focuses a specific menu item index when menu is mounted */\n    initialFocusIndex?: number,\n    isHidden?: boolean,\n    isSubmenu?: boolean,\n    onClose?: Function,\n    /** Will fire this callback when menu should \"close' */\n    setRef?: Function,\n    shouldOutlineFocus?: boolean,\n};\n\nclass Menu extends React.Component<Props> {\n    static defaultProps = {\n        className: '',\n        isSubmenu: false,\n        isHidden: false,\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        this.focusIndex = 0;\n        this.menuEl = null;\n        this.menuItemEls = [];\n    }\n\n    componentDidMount() {\n        this.setMenuItemEls();\n        this.setInitialFocusIndex();\n    }\n\n    componentDidUpdate({ isHidden: prevIsHidden, children: prevChildren }: Props) {\n        const { children, isHidden, isSubmenu } = this.props;\n\n        if (isSubmenu && prevIsHidden && !isHidden) {\n            // If updating submenu, use the current props instead of previous props.\n            this.setMenuItemEls();\n            this.setInitialFocusIndex(this.props);\n        }\n\n        // update focus index and menu item elements when the number of children changes\n        if (React.Children.toArray(prevChildren).length !== React.Children.toArray(children).length) {\n            const focusedMenuItemEl = this.menuItemEls[this.focusIndex];\n            this.setMenuItemEls();\n            const { menuIndex } = this.getMenuItemElFromEventTarget(focusedMenuItemEl);\n            this.setFocus(menuIndex);\n        }\n    }\n\n    setInitialFocusIndex = (props: Props = this.props) => {\n        const { initialFocusIndex, isHidden } = props;\n\n        if (isHidden || initialFocusIndex === undefined) {\n            return;\n        }\n\n        // If an initialFocusIndex was specified, attempt to use it to focus\n        if (typeof initialFocusIndex === 'number') {\n            // We do this after a timeout so that the menu is properly mounted before we attempt to focus it\n            setTimeout(() => {\n                this.setFocus(initialFocusIndex);\n            }, 0);\n        } else if (initialFocusIndex === null) {\n            // If no initial focus index is set, focus on the menu itself so that keyboard shortcut still works after a mouse click.\n            setTimeout(() => {\n                if (this.menuEl) {\n                    this.menuEl.focus();\n                }\n            }, 0);\n        }\n    };\n\n    setMenuItemEls = () => {\n        const { isSubmenu } = this.props;\n\n        const selector = isSubmenu ? SUBMENU_ITEM_SELECTOR : TOP_LEVEL_MENU_ITEM_SELECTOR;\n        // Keep track of all the valid menu items that were rendered (querySelector since we don't want to pass ref functions to every single child)\n        this.menuItemEls = this.menuEl ? [].slice.call(this.menuEl.querySelectorAll(selector)) : [];\n    };\n\n    getMenuItemElFromEventTarget = (target: Node) => {\n        let menuItemEl = null;\n        let menuIndex = -1;\n\n        for (let i = 0; i < this.menuItemEls.length; i += 1) {\n            if (this.menuItemEls[i].contains(target)) {\n                menuItemEl = this.menuItemEls[i];\n                menuIndex = i;\n                break;\n            }\n        }\n        return { menuItemEl, menuIndex };\n    };\n\n    setFocus = (index: number) => {\n        if (!this.menuItemEls.length) {\n            return;\n        }\n\n        const numMenuItems = this.menuItemEls.length;\n\n        if (index >= numMenuItems) {\n            this.focusIndex = 0;\n        } else if (index < 0) {\n            this.focusIndex = numMenuItems - 1;\n        } else {\n            this.focusIndex = index;\n        }\n\n        this.menuItemEls[this.focusIndex].focus();\n    };\n\n    focusIndex: number;\n\n    keyboardPressed: ?boolean;\n\n    menuEl: ?HTMLUListElement;\n\n    menuItemEls: Array<HTMLElement>;\n\n    focusFirstItem = () => {\n        this.setFocus(0);\n    };\n\n    focusLastItem = () => {\n        this.setFocus(-1);\n    };\n\n    focusNextItem = () => {\n        this.setFocus(this.focusIndex + 1);\n    };\n\n    focusPreviousItem = () => {\n        this.setFocus(this.focusIndex - 1);\n    };\n\n    fireOnCloseHandler = (isKeyboardEvent: ?boolean, event: SyntheticEvent<>) => {\n        const { onClose } = this.props;\n\n        if (onClose) {\n            // We need to pass the event type so we know which item to focus.\n            onClose(isKeyboardEvent, event);\n        }\n    };\n\n    handleClick = (event: SyntheticEvent<HTMLUListElement>) => {\n        const { menuItemEl } = event.target instanceof Node ? this.getMenuItemElFromEventTarget(event.target) : {};\n\n        if (!menuItemEl) {\n            return;\n        }\n\n        this.fireOnCloseHandler(false, event);\n    };\n\n    handleKeyDown = (event: SyntheticKeyboardEvent<>) => {\n        const { isSubmenu, initialFocusIndex } = this.props;\n\n        switch (event.key) {\n            case 'ArrowDown':\n                stopPropagationAndPreventDefault(event);\n\n                // If it's first keyboard event, focus on first item.\n                if (initialFocusIndex === null && !this.keyboardPressed) {\n                    this.focusFirstItem();\n                } else {\n                    this.focusNextItem();\n                }\n\n                break;\n\n            case 'ArrowUp':\n                stopPropagationAndPreventDefault(event);\n\n                this.focusPreviousItem();\n                break;\n\n            case 'ArrowLeft':\n                // Close submenu when arrow-left is clicked\n                if (!isSubmenu) {\n                    return;\n                }\n                stopPropagationAndPreventDefault(event);\n                this.fireOnCloseHandler(true, event);\n                break;\n\n            case 'Home':\n            case 'PageUp':\n                stopPropagationAndPreventDefault(event);\n\n                this.focusFirstItem();\n                break;\n\n            case 'End':\n            case 'PageDown':\n                stopPropagationAndPreventDefault(event);\n\n                this.focusLastItem();\n                break;\n\n            case 'Escape':\n                stopPropagationAndPreventDefault(event);\n\n                this.fireOnCloseHandler(true, event);\n                break;\n\n            case 'Tab':\n                // DO NOT PREVENT DEFAULT OR STOP PROPAGATION - This should move focus natively\n                this.fireOnCloseHandler(true, event);\n                break;\n\n            case ' ': // Spacebar\n            case 'Enter':\n                stopPropagationAndPreventDefault(event);\n\n                if (event.target instanceof HTMLElement) {\n                    event.target.click();\n                }\n                break;\n\n            default:\n                break;\n        }\n\n        this.keyboardPressed = true;\n    };\n\n    render() {\n        const { children, className, isHidden, setRef, shouldOutlineFocus, ...rest } = this.props;\n\n        const menuProps = omit(rest, ['onClose', 'initialFocusIndex', 'isSubmenu']);\n        menuProps.className = classNames('aria-menu', className, {\n            'is-hidden': isHidden,\n            'should-outline-focus': shouldOutlineFocus,\n        });\n        menuProps.ref = ref => {\n            this.menuEl = ref;\n            if (setRef) {\n                setRef(ref);\n            }\n        };\n        menuProps.role = 'menu';\n        menuProps.tabIndex = -1;\n        menuProps.onClick = this.handleClick;\n        menuProps.onKeyDown = this.handleKeyDown;\n\n        return <ul {...menuProps}>{children}</ul>;\n    }\n}\n\nexport default Menu;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\n\nimport RadarAnimation from '../radar';\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n    isDisabled?: boolean,\n    isSelectItem?: boolean,\n    isSelected?: boolean,\n    onClick?: Function,\n    showRadar?: boolean,\n};\n\nclass MenuItem extends React.Component<Props> {\n    onClickHandler = (event: SyntheticEvent<HTMLLIElement>) => {\n        const { isDisabled, onClick } = this.props;\n\n        // If aria-disabled is passed as a prop, we should ignore clicks on this menu item\n        if (isDisabled) {\n            event.stopPropagation();\n            event.preventDefault();\n\n            return;\n        }\n\n        if (onClick) {\n            onClick(event);\n        }\n    };\n\n    render() {\n        const { children, className, isDisabled, isSelectItem, isSelected, showRadar, ...rest } = this.props;\n        const menuItemProps = omit(rest, ['role', 'tabIndex', 'onClick']);\n\n        menuItemProps.className = classNames('menu-item', className, {\n            'is-select-item': isSelectItem,\n            'is-selected': isSelected,\n        });\n        menuItemProps.role = isSelectItem ? 'menuitemradio' : 'menuitem';\n        menuItemProps.tabIndex = -1;\n        menuItemProps.onClick = this.onClickHandler;\n\n        if (isSelectItem) {\n            menuItemProps['aria-checked'] = isSelected;\n        }\n\n        if (isDisabled) {\n            menuItemProps['aria-disabled'] = 'true';\n        }\n\n        let menuItem = <li {...menuItemProps}>{children}</li>;\n        if (showRadar) {\n            menuItem = <RadarAnimation>{menuItem}</RadarAnimation>;\n        }\n\n        return menuItem;\n    }\n}\n\nexport default MenuItem;\n"],"sourceRoot":""}