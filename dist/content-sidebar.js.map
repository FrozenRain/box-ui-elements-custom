{"version":3,"sources":["webpack:///./src/components/sidebar-toggle-button/SidebarToggleButton.js","webpack:///./src/components/sidebar-toggle-button/SidebarToggleButton.scss","webpack:///./src/components/tooltip/index.js","webpack:///./src/elements/common/api-context/APIContext.js","webpack:///./src/elements/common/api-context/index.js","webpack:///./src/elements/common/api-context/withAPIContext.js","webpack:///./src/elements/common/interactionTargets.js","webpack:///./src/elements/common/modal.scss","webpack:///./src/elements/common/nav-button/BackButton.js","webpack:///./src/elements/common/nav-button/BackButton.scss","webpack:///./src/elements/common/nav-button/NavButton.js","webpack:///./src/elements/common/nav-button/index.js","webpack:///./src/elements/content-sidebar/ContentSidebar.js","webpack:///./src/elements/content-sidebar/ContentSidebar.scss","webpack:///./src/elements/content-sidebar/Sidebar.js","webpack:///./src/elements/content-sidebar/SidebarContent.js","webpack:///./src/elements/content-sidebar/SidebarContent.scss","webpack:///./src/elements/content-sidebar/SidebarLoading.js","webpack:///./src/elements/content-sidebar/SidebarLoading.scss","webpack:///./src/elements/content-sidebar/SidebarLoadingError.js","webpack:///./src/elements/content-sidebar/SidebarLoadingError.scss","webpack:///./src/elements/content-sidebar/SidebarNav.js","webpack:///./src/elements/content-sidebar/SidebarNav.scss","webpack:///./src/elements/content-sidebar/SidebarNavButton.js","webpack:///./src/elements/content-sidebar/SidebarNavButton.scss","webpack:///./src/elements/content-sidebar/SidebarNavTablist.js","webpack:///./src/elements/content-sidebar/SidebarPanels.js","webpack:///./src/elements/content-sidebar/SidebarSection.js","webpack:///./src/elements/content-sidebar/SidebarSection.scss","webpack:///./src/elements/content-sidebar/SidebarToggle.js","webpack:///./src/elements/content-sidebar/SidebarUtils.js","webpack:///./src/elements/content-sidebar/additional-tabs/AdditionalTab.js","webpack:///./src/elements/content-sidebar/additional-tabs/AdditionalTab.scss","webpack:///./src/elements/content-sidebar/additional-tabs/AdditionalTabPlaceholder.js","webpack:///./src/elements/content-sidebar/additional-tabs/AdditionalTabs.js","webpack:///./src/elements/content-sidebar/additional-tabs/AdditionalTabs.scss","webpack:///./src/elements/content-sidebar/additional-tabs/AdditionalTabsLoading.js","webpack:///./src/elements/content-sidebar/additional-tabs/AdditionalTabsLoading.scss","webpack:///./src/elements/content-sidebar/additional-tabs/MoreTabPlaceholder.js","webpack:///./src/elements/content-sidebar/additional-tabs/index.js","webpack:///./src/elements/content-sidebar/additional-tabs/messages.js","webpack:///./src/elements/content-sidebar/index.js","webpack:///./src/elements/content-sidebar/skills/skillUtils.js","webpack:///./src/icons/general/IconChatRound.js","webpack:///./src/icons/general/IconDocInfo.js","webpack:///./src/icons/general/IconEllipsis.js","webpack:///./src/icons/general/IconHide.js","webpack:///./src/icons/general/IconMagicWand.js","webpack:///./src/icons/general/IconMetadataThick.js","webpack:///./src/icons/general/IconShow.js"],"names":["DIRECTION_LEFT","DIRECTION_RIGHT","SidebarToggleButton","className","direction","intl","isOpen","onClick","rest","isCollapsed","intlMessage","messages","sidebarHide","sidebarShow","intlText","formatMessage","classes","classNames","tooltipPosition","renderButton","injectIntl","React","createContext","withAPIContext","WrappedComponent","props","ref","api","SIDEBAR_NAV_TARGETS","ACTIVITY","DETAILS","SKILLS","METADATA","TOGGLE","SECTION_TARGETS","FILE_PROPERTIES","ACCESS_STATS","CLASSIFICATION","DETAILS_TARGETS","COMMENTS","DOWNLOADS","EDITS","PREVIEWS","VIEWS","VIEW_DETAILS","CLASSIFICATION_ADD","CLASSIFICATION_EDIT","DESCRIPTION","VERSION_HISTORY","ACTIVITY_TARGETS","INLINE_DELETE_CONFIRM","INLINE_DELETE_CANCEL","APPROVAL_FORM_ADD_TASK","APPROVAL_FORM_CANCEL","APPROVAL_FORM_POST","PROFILE","MENTION","VERSION_CARD","TASK_DATE_PICKER","TASK_APPROVE","TASK_COMPLETE","TASK_REJECT","TASK_OPTIONS","TASK_OPTIONS_DELETE","TASK_OPTIONS_EDIT","COMMENT_OPTIONS","COMMENT_OPTIONS_DELETE","COMMENT_OPTIONS_EDIT","SKILLS_TARGETS","FACES","CARD","FACE","DELETE","EDIT","EDIT_SAVE","EDIT_CANCEL","TIMELINE","KEYWORDS","SELECT","TRANSCRIPTS","COPY","EXPAND","TRANSCRIPT","EDIT_TEXT","NEXT","PREVIOUS","INTERACTION_TARGET","BackButton","to","history","push","goBack","back","NavButton","activeClassName","children","component","Component","PlainButton","exact","isActive","replace","strict","path","pathname","location","match","isActiveValue","event","defaultPrevented","isLeftClick","method","MARK_NAME_JS_READY","ORIGIN_CONTENT_SIDEBAR","EVENT_JS_READY","mark","ContentSidebar","constructor","isLoading","error","code","console","onError","editors","setState","metadataEditors","file","fetchMetadata","apiHost","cache","clientName","language","requestInterceptor","responseInterceptor","sharedLink","sharedLinkPassword","token","API","logger","onReadyMetric","endMarkName","clearCache","destroy","componentWillUnmount","componentDidMount","fetchFile","componentDidUpdate","prevProps","fileId","prevFileId","state","metadataSidebarProps","isFeatureEnabled","canHaveMetadataSidebar","SidebarUtils","getMetadataAPI","getMetadata","fetchMetadataSuccessCallback","noop","fetchOptions","canHaveSidebar","getFileAPI","getFile","fetchFileSuccessCallback","errorCallback","fields","SIDEBAR_FIELDS_TO_FETCH","refresh","sidebarRef","render","activitySidebarProps","additionalTabs","currentUser","defaultView","detailsSidebarProps","getPreview","getViewer","hasAdditionalTabs","hasActivityFeed","hasMetadata","hasSkills","hasVersions","isDefaultOpen","onVersionChange","onVersionHistoryClick","versionsSidebarProps","initialPath","charAt","shouldRenderSidebar","DEFAULT_HOSTNAME_API","CLIENT_NAME_CONTENT_SIDEBAR","flow","withFeatureProvider","withLogger","withErrorBoundary","SIDEBAR_FORCE_KEY","SIDEBAR_FORCE_VALUE_CLOSED","SIDEBAR_FORCE_VALUE_OPEN","Sidebar","uniqueid","LocalStore","basePath","substring","split","file_version","currentVersion","fileVersionSlug","id","urlPrefix","getUrlPrefix","preventDefault","isDirty","getLocationState","setForcedByLocation","prevLocation","silent","key","locationState","getProp","isForced","undefined","store","setItem","getItem","isForcedOpen","isForcedSet","current","sidebarPanels","isLocationOpen","hasActivity","canHaveActivitySidebar","hasDetails","canHaveDetailsSidebar","shouldRenderMetadataSidebar","shouldRenderSkillsSidebar","handleVersionHistoryClick","styleClassName","withFeatureConsumer","withRouter","SidebarContent","actions","title","elementId","sidebarView","label","defaultProps","SidebarLoading","SidebarLoadingError","SidebarNav","onNavigate","sidebarNavLabel","SIDEBAR_VIEW_ACTIVITY","sidebarActivityTitle","SIDEBAR_VIEW_DETAILS","sidebarDetailsTitle","SIDEBAR_VIEW_SKILLS","sidebarSkillsTitle","SIDEBAR_VIEW_METADATA","sidebarMetadataTitle","SidebarNavButton","dataResinTarget","dataTestId","tooltip","sidebarPath","isMatch","isToggle","isExact","sidebarState","open","SidebarNavTablist","refs","tablist","map","child","handleKeyDown","currentIndex","indexOf","length","nextIndex","KEYS","arrowUp","focus","stopPropagation","arrowDown","tab","BASE_EVENT_NAME","MARK_NAME_JS_LOADING_DETAILS","ORIGIN_DETAILS_SIDEBAR","MARK_NAME_JS_LOADING_ACTIVITY","ORIGIN_ACTIVITY_SIDEBAR","MARK_NAME_JS_LOADING_SKILLS","ORIGIN_SKILLS_SIDEBAR","MARK_NAME_JS_LOADING_METADATA","ORIGIN_METADATA_SIDEBAR","MARK_NAME_JS_LOADING_VERSIONS","ORIGIN_VERSIONS_SIDEBAR","URL_TO_FEED_ITEM_TYPE","comments","tasks","LoadableDetailsSidebar","getAsyncSidebarContent","LoadableActivitySidebar","LoadableSkillsSidebar","LoadableMetadataSidebar","LoadableVersionsSidebar","SIDEBAR_VIEW_VERSIONS","SidebarPanels","activitySidebar","detailsSidebar","metadataSidebar","versionsSidebar","matchEntryType","params","activeFeedEntryType","activeFeedEntryId","sidebar","versionId","redirect","SidebarSection","prevState","interactionTarget","sectionClassName","toggleVisibility","COLOR_999","SidebarToggle","hasProperties","hasAccessStats","hasClassification","hasNotices","canHaveSkillsSidebar","hasSkillsData","Array","isArray","getTitleForView","view","getLoaderForView","markName","importFn","Promise","resolve","AsyncLoad","errorComponent","fallback","loader","BLOCKED_BY_SHEILD","AdditionalTab","isErrored","onImageLoad","isDisabled","status","getDisabledReason","reason","blockedByShieldAccessPolicy","getTabIcon","iconUrl","TabIcon","onImageError","bdlGray50","callback","callbackFn","tooltipText","callbackData","AdditionalTabPlaceholder","AdditionalTabs","PureComponent","tabs","hasMoreTab","find","numTabs","numLoadedTabs","tabData","LOADING_TABS","MoreTabPlaceholder","AdditionalTabsLoading","LoadingComponent","idx","bdlGray10","defineMessages","isValidSkillsCard","card","fileVersion","skillCardFileVersion","entries","cards","some","IconChatRound","color","height","width","IconDocInfo","IconEllipsis","IconHide","IconMagicWand","IconMetadataThick","IconShow"],"mappings":"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","file":"content-sidebar.js","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { injectIntl } from 'react-intl';\n\nimport IconHide from '../../icons/general/IconHide';\nimport IconShow from '../../icons/general/IconShow';\nimport PlainButton from '../plain-button';\nimport Tooltip from '../tooltip';\n\nimport messages from '../../elements/common/messages';\n\nimport './SidebarToggleButton.scss';\n\nconst DIRECTION_LEFT = 'left';\nconst DIRECTION_RIGHT = 'right';\n\ntype Props = {\n    className?: string,\n    direction?: string,\n    isOpen: boolean,\n    onClick?: Function,\n} & InjectIntlProvidedProps;\n\nconst SidebarToggleButton = ({\n    className = '',\n    direction = DIRECTION_RIGHT,\n    intl,\n    isOpen,\n    onClick,\n    ...rest\n}: Props) => {\n    const isCollapsed = !isOpen ? 'collapsed' : '';\n    const intlMessage = isOpen ? messages.sidebarHide : messages.sidebarShow;\n    const intlText = intl.formatMessage(intlMessage);\n    const classes = classNames(className, 'bdl-SidebarToggleButton', {\n        'bdl-is-collapsed': isCollapsed,\n    });\n    const tooltipPosition = direction === DIRECTION_LEFT ? 'middle-right' : 'middle-left';\n\n    const renderButton = () => {\n        if (direction === DIRECTION_LEFT) {\n            return isOpen ? <IconShow height={16} width={16} /> : <IconHide height={16} width={16} />;\n        }\n        return isOpen ? <IconHide height={16} width={16} /> : <IconShow height={16} width={16} />;\n    };\n\n    return (\n        <Tooltip position={tooltipPosition} text={intlText}>\n            <PlainButton aria-label={intlText} className={classes} onClick={onClick} type=\"button\" {...rest}>\n                {renderButton()}\n            </PlainButton>\n        </Tooltip>\n    );\n};\n\nexport default injectIntl(SidebarToggleButton);\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './Tooltip';\nexport type { Position } from './Tooltip';\n","/**\n * @flow\n * @file Creates an API Context\n * @author Box\n */\nimport React from 'react';\nimport API from '../../../api';\n\nexport default React.createContext<?API>();\n","// @flow\nexport { default } from './APIContext';\nexport { default as withAPIContext } from './withAPIContext';\n","/**\n * @flow\n * @file Wraps a component with the API context\n * @author Box\n */\nimport * as React from 'react';\nimport APIContext from './APIContext';\n\nconst withAPIContext = (WrappedComponent: React.ComponentType<any>) =>\n    React.forwardRef<Object, React.Ref<any>>((props: Object, ref: React.Ref<any>) => (\n        <APIContext.Consumer>{api => <WrappedComponent ref={ref} {...props} api={api} />}</APIContext.Consumer>\n    ));\n\nexport default withAPIContext;\n","// @flow strict\nexport const SIDEBAR_NAV_TARGETS = {\n    ACTIVITY: 'sidebaractivity',\n    DETAILS: 'sidebardetails',\n    SKILLS: 'sidebarskills',\n    METADATA: 'sidebarmetadata',\n    TOGGLE: 'sidebartoggle',\n};\n\nexport const SECTION_TARGETS = {\n    FILE_PROPERTIES: 'fileproperties',\n    ACCESS_STATS: 'accessstats',\n    CLASSIFICATION: 'classification',\n};\n\nexport const DETAILS_TARGETS = {\n    ACCESS_STATS: {\n        COMMENTS: 'accessstats-comments',\n        DOWNLOADS: 'accessstats-downloads',\n        EDITS: 'accessstats-edits',\n        PREVIEWS: 'accessstats-previews',\n        VIEWS: 'accessstats-views',\n        VIEW_DETAILS: 'accessstats-viewdetails',\n    },\n    CLASSIFICATION_ADD: 'addclassification',\n    CLASSIFICATION_EDIT: 'editclassification',\n    DESCRIPTION: 'description',\n    VERSION_HISTORY: 'versionhistory',\n};\n\nexport const ACTIVITY_TARGETS = {\n    INLINE_DELETE_CONFIRM: 'activityfeed-delete-confirm',\n    INLINE_DELETE_CANCEL: 'activityfeed-delete-cancel',\n    APPROVAL_FORM_ADD_TASK: 'activityfeed-apporvalformaddtask',\n    APPROVAL_FORM_CANCEL: 'activityfeed-approvalformcancel',\n    APPROVAL_FORM_POST: 'activityfeed-approvalformpost',\n    PROFILE: 'activityfeed-profilelink',\n    MENTION: 'activityfeed-mentionlink',\n    VERSION_CARD: 'activityfeed-versioninfo',\n    TASK_DATE_PICKER: 'activityfeed-taskdatepicker',\n    TASK_APPROVE: 'activityfeed-taskapprove',\n    TASK_COMPLETE: 'activityfeed-taskcomplete',\n    TASK_REJECT: 'activityfeed-taskreject',\n    TASK_OPTIONS: 'activityfeedtask', // component\n    TASK_OPTIONS_DELETE: 'activityfeed-task-delete',\n    TASK_OPTIONS_EDIT: 'activityfeed-task-edit',\n    COMMENT_OPTIONS: 'activityfeedcomment', // component\n    COMMENT_OPTIONS_DELETE: 'activityfeed-comment-delete',\n    COMMENT_OPTIONS_EDIT: 'activityfeed-comment-edit',\n};\n\nexport const SKILLS_TARGETS = {\n    FACES: {\n        CARD: 'skill-facecard',\n        FACE: 'skill-face',\n        DELETE: 'skill-facedelete',\n        EDIT: 'skill-faceedit',\n        EDIT_SAVE: 'skill-faceeditsave',\n        EDIT_CANCEL: 'skill-faceeditcancel',\n        TIMELINE: 'skill-facetimeslice',\n    },\n    KEYWORDS: {\n        CARD: 'skill-keywordcard',\n        EDIT: 'skill-keywordedit',\n        EDIT_SAVE: 'skill-keywordeditsave',\n        EDIT_CANCEL: 'skill-keywordeditcancel',\n        TIMELINE: 'skill-keywordtimeslice',\n        SELECT: 'skill-keywordselect',\n    },\n    TRANSCRIPTS: {\n        CARD: 'skill-transcriptcard',\n        COPY: 'skill-transcriptcopy',\n        EDIT: 'skill-transcriptedit',\n        EXPAND: 'skill-transcriptexpand',\n        EDIT_SAVE: 'skill-transcripteditsave',\n        EDIT_CANCEL: 'skill-transcripteditcancel',\n        TRANSCRIPT: 'skill-transcript',\n        EDIT_TEXT: 'skill-transcriptedittext',\n    },\n    TIMELINE: {\n        NEXT: 'skill-timelimelinenext',\n        PREVIOUS: 'skill-timelineprevious',\n    },\n};\n\nexport const INTERACTION_TARGET = 'data-resin-target';\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Back Button component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport { Route, type Location } from 'react-router-dom';\nimport IconNavigateLeft from '../../../icons/general/IconNavigateLeft';\nimport messages from '../messages';\nimport PlainButton from '../../../components/plain-button';\nimport './BackButton.scss';\n\ntype Props = {\n    className?: string,\n    to?: Location,\n};\n\nconst BackButton = ({ className, to, ...rest }: Props) => (\n    <Route>\n        {({ history }) => (\n            <PlainButton\n                className={classNames('bdl-BackButton', className)}\n                onClick={() => (to ? history.push(to) : history.goBack())}\n                type=\"button\"\n                {...rest}\n            >\n                <IconNavigateLeft height={24} width={24} />\n                <span className=\"accessibility-hidden\">\n                    <FormattedMessage {...messages.back} />\n                </span>\n            </PlainButton>\n        )}\n    </Route>\n);\n\nexport default BackButton;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Nav Button component intended to mimic React Router's NavLink component for non-anchor elements\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Route } from 'react-router-dom';\nimport type { Match, Location } from 'react-router-dom';\nimport PlainButton from '../../../components/plain-button';\nimport { isLeftClick } from '../../../utils/dom';\n\ntype Props = {\n    activeClassName?: string,\n    children: React.Node,\n    className?: string,\n    component?: React.ComponentType<any>,\n    exact?: boolean,\n    isActive?: (match: Match, location: Location) => ?boolean,\n    onClick?: (event: SyntheticEvent<>) => void,\n    replace?: boolean,\n    strict?: boolean,\n    to: string | Location,\n};\n\nconst NavButton = React.forwardRef<Props, React.Ref<any>>((props: Props, ref: React.Ref<any>) => {\n    const {\n        activeClassName = 'bdl-is-active',\n        children,\n        className = 'bdl-NavButton',\n        component: Component = PlainButton,\n        exact,\n        isActive,\n        onClick,\n        replace,\n        strict,\n        to,\n        ...rest\n    } = props;\n    const path = typeof to === 'object' ? to.pathname : to;\n\n    return (\n        <Route exact={exact} path={path} strict={strict}>\n            {({ history, location, match }) => {\n                const isActiveValue = !!(isActive ? isActive(match, location) : match);\n\n                return (\n                    <Component\n                        className={classNames(className, { [activeClassName]: isActiveValue })}\n                        onClick={event => {\n                            if (onClick) {\n                                onClick(event);\n                            }\n\n                            if (!event.defaultPrevented && isLeftClick(event)) {\n                                const method = replace ? history.replace : history.push;\n                                method(to);\n                            }\n                        }}\n                        ref={ref}\n                        {...rest}\n                    >\n                        {children}\n                    </Component>\n                );\n            }}\n        </Route>\n    );\n});\n\nexport default NavButton;\n","export { default as BackButton } from './BackButton';\nexport { default } from './NavButton';\n","/**\n * @flow\n * @file Content Sidebar Container\n * @author Box\n */\n\nimport 'regenerator-runtime/runtime';\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport flow from 'lodash/flow';\nimport type { RouterHistory } from 'react-router-dom';\nimport API from '../../api';\nimport APIContext from '../common/api-context';\nimport Internationalize from '../common/Internationalize';\nimport Sidebar from './Sidebar';\nimport NavRouter from '../common/nav-router';\nimport SidebarUtils from './SidebarUtils';\nimport { DEFAULT_HOSTNAME_API, CLIENT_NAME_CONTENT_SIDEBAR, ORIGIN_CONTENT_SIDEBAR } from '../../constants';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { mark } from '../../utils/performance';\nimport { SIDEBAR_FIELDS_TO_FETCH } from '../../utils/fields';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withFeatureProvider } from '../common/feature-checking';\nimport { withLogger } from '../common/logger';\n\nimport type { DetailsSidebarProps } from './DetailsSidebar';\nimport type { ActivitySidebarProps } from './ActivitySidebar';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\nimport type { VersionsSidebarProps } from './versions';\nimport '../common/fonts.scss';\nimport '../common/base.scss';\nimport '../common/modal.scss';\nimport './ContentSidebar.scss';\n\ntype Props = {\n    activitySidebarProps: ActivitySidebarProps,\n    additionalTabs?: Array<AdditionalSidebarTab>,\n    apiHost: string,\n    cache?: APICache,\n    className: string,\n    clientName: string,\n    currentUser?: User,\n    defaultView: string,\n    detailsSidebarProps: DetailsSidebarProps,\n    features: FeatureConfig,\n    fileId?: string,\n    getPreview: Function,\n    getViewer: Function,\n    hasActivityFeed: boolean,\n    hasAdditionalTabs: boolean,\n    hasMetadata: boolean,\n    hasSkills: boolean,\n    hasVersions: boolean,\n    history?: RouterHistory,\n    isDefaultOpen?: boolean,\n    language?: string,\n    messages?: StringMap,\n    metadataSidebarProps: MetadataSidebarProps,\n    onVersionChange?: Function,\n    onVersionHistoryClick?: Function,\n    requestInterceptor?: Function,\n    responseInterceptor?: Function,\n    sharedLink?: string,\n    sharedLinkPassword?: string,\n    token: Token,\n    versionsSidebarProps: VersionsSidebarProps,\n} & ErrorContextProps &\n    WithLoggerProps;\n\ntype State = {\n    file?: BoxItem,\n    isLoading: boolean,\n    metadataEditors?: Array<MetadataEditor>,\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_CONTENT_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass ContentSidebar extends React.Component<Props, State> {\n    props: Props;\n\n    state: State = { isLoading: true };\n\n    api: API;\n\n    sidebarRef: Sidebar;\n\n    static defaultProps = {\n        activitySidebarProps: {},\n        apiHost: DEFAULT_HOSTNAME_API,\n        className: '',\n        clientName: CLIENT_NAME_CONTENT_SIDEBAR,\n        defaultView: '',\n        detailsSidebarProps: {},\n        getPreview: noop,\n        getViewer: noop,\n        hasActivityFeed: false,\n        hasAdditionalTabs: false,\n        hasMetadata: false,\n        hasSkills: false,\n        isDefaultOpen: true,\n        metadataSidebarProps: {},\n    };\n\n    /**\n     * [constructor]\n     *\n     * @private\n     * @return {ContentSidebar}\n     */\n    constructor(props: Props) {\n        super(props);\n        const {\n            apiHost,\n            cache,\n            clientName,\n            language,\n            requestInterceptor,\n            responseInterceptor,\n            sharedLink,\n            sharedLinkPassword,\n            token,\n        } = props;\n\n        this.api = new API({\n            apiHost,\n            cache,\n            clientName,\n            language,\n            requestInterceptor,\n            responseInterceptor,\n            sharedLink,\n            sharedLinkPassword,\n            token,\n        });\n\n        /* eslint-disable react/prop-types */\n        const { logger } = props;\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n        /* eslint-enable react/prop-types */\n    }\n\n    /**\n     * Destroys api instances with caches\n     *\n     * @private\n     * @return {void}\n     */\n    clearCache(): void {\n        this.api.destroy(true);\n    }\n\n    /**\n     * Cleanup\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentWillUnmount() {\n        // Don't destroy the cache while unmounting\n        this.api.destroy(false);\n    }\n\n    /**\n     * Fetches the file data on load\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentDidMount() {\n        this.fetchFile();\n    }\n\n    /**\n     * Fetches new file data on update\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentDidUpdate(prevProps: Props): void {\n        const { fileId }: Props = this.props;\n        const { fileId: prevFileId }: Props = prevProps;\n\n        if (fileId !== prevFileId) {\n            this.fetchFile();\n        }\n    }\n\n    /**\n     * Network error callback\n     *\n     * @private\n     * @param {Error} error - Error object\n     * @param {string} code - error code\n     * @return {void}\n     */\n    errorCallback = (error: ElementsXhrError, code: string): void => {\n        /* eslint-disable no-console */\n        console.error(error);\n        /* eslint-enable no-console */\n\n        /* eslint-disable react/prop-types */\n        this.props.onError(error, code, {\n            error,\n        });\n        /* eslint-enable react/prop-types */\n    };\n\n    /**\n     * File fetch success callback that sets the file and view\n     * Only set file if there is data to show in the sidebar.\n     * Skills sidebar doesn't show when there is no data.\n     *\n     * @private\n     * @param {Object} file - Box file\n     * @return {void}\n     */\n    fetchMetadataSuccessCallback = ({ editors }: { editors: Array<MetadataEditor> }): void => {\n        this.setState({ metadataEditors: editors });\n    };\n\n    /**\n     * Fetches file metadata editors if required\n     *\n     * @private\n     * @return {void}\n     */\n    fetchMetadata(): void {\n        const { file }: State = this.state;\n        const { metadataSidebarProps }: Props = this.props;\n        const { isFeatureEnabled = true }: MetadataSidebarProps = metadataSidebarProps;\n\n        // Only fetch metadata if we think that the file may have metadata on it\n        // but currently the metadata feature is turned off. Use case of this would be a free\n        // user who doesn't have the metadata feature but is collabed on a file from a user\n        // who added metadata on the file. If the feature is enabled we always end up showing\n        // the metadata sidebar irrespective of there being any existing metadata or not.\n        const canHaveMetadataSidebar = !isFeatureEnabled && SidebarUtils.canHaveMetadataSidebar(this.props);\n\n        if (canHaveMetadataSidebar) {\n            this.api\n                .getMetadataAPI(false)\n                .getMetadata(((file: any): BoxItem), this.fetchMetadataSuccessCallback, noop, isFeatureEnabled);\n        }\n    }\n\n    /**\n     * File fetch success callback that sets the file and sidebar visibility.\n     * Also makes an optional request to fetch metadata editors\n     *\n     * @private\n     * @param {Object} file - Box file\n     * @return {void}\n     */\n    fetchFileSuccessCallback = (file: BoxItem): void => {\n        this.setState(\n            {\n                file,\n                isLoading: false,\n            },\n            this.fetchMetadata,\n        );\n    };\n\n    /**\n     * Fetches a file\n     *\n     * @private\n     * @param {Object|void} [fetchOptions] - Fetch options\n     * @return {void}\n     */\n    fetchFile(fetchOptions: FetchOptions = {}): void {\n        const { fileId }: Props = this.props;\n        this.setState({ isLoading: true });\n        if (fileId && SidebarUtils.canHaveSidebar(this.props)) {\n            this.api.getFileAPI().getFile(fileId, this.fetchFileSuccessCallback, this.errorCallback, {\n                ...fetchOptions,\n                fields: SIDEBAR_FIELDS_TO_FETCH,\n            });\n        }\n    }\n\n    /**\n     * Refreshes the sidebar panel\n     * @returns {void}\n     */\n    refresh(): void {\n        if (this.sidebarRef) {\n            this.sidebarRef.refresh();\n        }\n    }\n\n    /**\n     * Renders the sidebar\n     *\n     * @private\n     * @inheritdoc\n     * @return {Element}\n     */\n    render() {\n        const {\n            activitySidebarProps,\n            additionalTabs,\n            className,\n            currentUser,\n            defaultView,\n            detailsSidebarProps,\n            fileId,\n            getPreview,\n            getViewer,\n            hasAdditionalTabs,\n            hasActivityFeed,\n            hasMetadata,\n            hasSkills,\n            hasVersions,\n            history,\n            isDefaultOpen,\n            language,\n            messages,\n            metadataSidebarProps,\n            onVersionChange,\n            onVersionHistoryClick,\n            versionsSidebarProps,\n        }: Props = this.props;\n        const { file, isLoading, metadataEditors }: State = this.state;\n        const initialPath = defaultView.charAt(0) === '/' ? defaultView : `/${defaultView}`;\n\n        if (!file || !fileId || !SidebarUtils.shouldRenderSidebar(this.props, file, metadataEditors)) {\n            return null;\n        }\n\n        return (\n            <Internationalize language={language} messages={messages}>\n                <APIContext.Provider value={(this.api: any)}>\n                    <NavRouter history={history} initialEntries={[initialPath]}>\n                        <Sidebar\n                            activitySidebarProps={activitySidebarProps}\n                            additionalTabs={additionalTabs}\n                            className={className}\n                            currentUser={currentUser}\n                            detailsSidebarProps={detailsSidebarProps}\n                            file={file}\n                            fileId={fileId}\n                            getPreview={getPreview}\n                            getViewer={getViewer}\n                            hasActivityFeed={hasActivityFeed}\n                            hasAdditionalTabs={hasAdditionalTabs}\n                            hasMetadata={hasMetadata}\n                            hasSkills={hasSkills}\n                            hasVersions={hasVersions}\n                            isDefaultOpen={isDefaultOpen}\n                            isLoading={isLoading}\n                            metadataEditors={metadataEditors}\n                            metadataSidebarProps={metadataSidebarProps}\n                            onVersionChange={onVersionChange}\n                            onVersionHistoryClick={onVersionHistoryClick}\n                            versionsSidebarProps={versionsSidebarProps}\n                            wrappedComponentRef={ref => {\n                                this.sidebarRef = ref;\n                            }}\n                        />\n                    </NavRouter>\n                </APIContext.Provider>\n            </Internationalize>\n        );\n    }\n}\n\nexport type ContentSidebarProps = Props;\nexport { ContentSidebar as ContentSidebarComponent };\nexport default flow([\n    withFeatureProvider,\n    withLogger(ORIGIN_CONTENT_SIDEBAR),\n    withErrorBoundary(ORIGIN_CONTENT_SIDEBAR),\n])(ContentSidebar);\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Content Sidebar Component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport uniqueid from 'lodash/uniqueId';\nimport { withRouter } from 'react-router-dom';\nimport type { Location, RouterHistory } from 'react-router-dom';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport LocalStore from '../../utils/LocalStore';\nimport SidebarNav from './SidebarNav';\nimport SidebarPanels from './SidebarPanels';\nimport SidebarUtils from './SidebarUtils';\nimport { withFeatureConsumer } from '../common/feature-checking';\nimport type { FeatureConfig } from '../common/feature-checking';\nimport type { ActivitySidebarProps } from './ActivitySidebar';\nimport type { DetailsSidebarProps } from './DetailsSidebar';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\nimport type { VersionsSidebarProps } from './versions';\n\ntype Props = {\n    activitySidebarProps: ActivitySidebarProps,\n    additionalTabs?: Array<AdditionalSidebarTab>,\n    className: string,\n    currentUser?: User,\n    detailsSidebarProps: DetailsSidebarProps,\n    features: FeatureConfig,\n    file: BoxItem,\n    fileId: string,\n    getPreview: Function,\n    getViewer: Function,\n    hasActivityFeed: boolean,\n    hasAdditionalTabs: boolean,\n    hasMetadata: boolean,\n    hasSkills: boolean,\n    hasVersions: boolean,\n    history: RouterHistory,\n    isDefaultOpen?: boolean,\n    isLoading?: boolean,\n    location: Location,\n    metadataEditors?: Array<MetadataEditor>,\n    metadataSidebarProps: MetadataSidebarProps,\n    onVersionChange?: Function,\n    onVersionHistoryClick?: Function,\n    versionsSidebarProps: VersionsSidebarProps,\n};\n\ntype State = {\n    isDirty: boolean,\n};\n\nexport const SIDEBAR_FORCE_KEY: 'bcs.force' = 'bcs.force';\nexport const SIDEBAR_FORCE_VALUE_CLOSED: 'closed' = 'closed';\nexport const SIDEBAR_FORCE_VALUE_OPEN: 'open' = 'open';\n\nclass Sidebar extends React.Component<Props, State> {\n    static defaultProps = {\n        isDefaultOpen: true,\n        isLoading: false,\n    };\n\n    id: string = uniqueid('bcs_');\n\n    props: Props;\n\n    sidebarPanels: { current: null | SidebarPanels } = React.createRef();\n\n    state: State;\n\n    store: LocalStore = new LocalStore();\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            isDirty: this.getLocationState('open') || false,\n        };\n\n        this.setForcedByLocation();\n    }\n\n    componentDidUpdate(prevProps: Props): void {\n        const { fileId, history, location }: Props = this.props;\n        const { fileId: prevFileId, location: prevLocation }: Props = prevProps;\n        const { isDirty }: State = this.state;\n\n        // User navigated to a different file without ever navigating the sidebar\n        if (!isDirty && fileId !== prevFileId && location.pathname !== '/') {\n            history.replace({ pathname: '/', state: { silent: true } });\n        }\n\n        // User navigated or toggled the sidebar intentionally, internally or externally\n        if (location !== prevLocation && !this.getLocationState('silent')) {\n            this.setForcedByLocation();\n            this.setState({ isDirty: true });\n        }\n    }\n\n    getUrlPrefix = (pathname: string) => {\n        const basePath = pathname.substring(1).split('/')[0];\n        return basePath;\n    };\n\n    /**\n     * Handle version history click\n     *\n     * @param {SyntheticEvent} event - The event\n     * @return {void}\n     */\n    handleVersionHistoryClick = (event: SyntheticEvent<>): void => {\n        const { file, history } = this.props;\n        const { file_version: currentVersion } = file;\n        const fileVersionSlug = currentVersion ? `/${currentVersion.id}` : '';\n\n        const urlPrefix = this.getUrlPrefix(history.location.pathname);\n\n        if (event.preventDefault) {\n            event.preventDefault();\n        }\n\n        history.push(`/${urlPrefix}/versions${fileVersionSlug}`);\n    };\n\n    /**\n     * Getter for location state properties.\n     *\n     * NOTE: Each location on the history stack has its own optional state object that is wholly separate from\n     * this component's internal state. Values on the location state object can persist even between refreshes\n     * when using certain history contexts, such as BrowserHistory.\n     *\n     * @param key - Optionally get a specific key value from state\n     * @returns {any} - The location state or state key value\n     */\n    getLocationState(key?: string): any {\n        const { location } = this.props;\n        const { state: locationState = {} } = location;\n        return getProp(locationState, key);\n    }\n\n    /**\n     * Getter/setter for sidebar forced state\n     *\n     * @param isOpen - Optionally set the sidebar to open/closed\n     * @returns {string|null} - The sidebar open/closed state\n     */\n    isForced(isOpen?: boolean): ?(typeof SIDEBAR_FORCE_VALUE_CLOSED | typeof SIDEBAR_FORCE_VALUE_OPEN) {\n        if (isOpen !== undefined) {\n            this.store.setItem(SIDEBAR_FORCE_KEY, isOpen ? SIDEBAR_FORCE_VALUE_OPEN : SIDEBAR_FORCE_VALUE_CLOSED);\n        }\n\n        return this.store.getItem(SIDEBAR_FORCE_KEY);\n    }\n\n    /**\n     * Getter for whether the sidebar has been forced open\n     * @returns {boolean} - True if the sidebar has been forced open\n     */\n    isForcedOpen(): boolean {\n        return this.isForced() === SIDEBAR_FORCE_VALUE_OPEN;\n    }\n\n    /**\n     * Getter for whether the sidebar has been forced open/closed previously\n     * @returns {boolean} - True if the sidebar has been forced open/closed previously\n     */\n    isForcedSet(): boolean {\n        return this.isForced() !== null;\n    }\n\n    /**\n     * Refreshes the sidebar panel\n     * @returns {void}\n     */\n    refresh(): void {\n        const { current: sidebarPanels } = this.sidebarPanels;\n\n        if (sidebarPanels) {\n            sidebarPanels.refresh();\n        }\n    }\n\n    /**\n     * Helper to set the local store open state based on the location open state, if defined\n     */\n    setForcedByLocation(): void {\n        const isLocationOpen: ?boolean = this.getLocationState('open');\n\n        if (isLocationOpen !== undefined && isLocationOpen !== null) {\n            this.isForced(isLocationOpen);\n        }\n    }\n\n    render() {\n        const {\n            activitySidebarProps,\n            additionalTabs,\n            className,\n            currentUser,\n            detailsSidebarProps,\n            file,\n            fileId,\n            getPreview,\n            getViewer,\n            hasAdditionalTabs,\n            hasVersions,\n            isDefaultOpen,\n            isLoading,\n            metadataEditors,\n            metadataSidebarProps,\n            onVersionChange,\n            versionsSidebarProps,\n        }: Props = this.props;\n        const isOpen = this.isForcedSet() ? this.isForcedOpen() : !!isDefaultOpen;\n        const hasActivity = SidebarUtils.canHaveActivitySidebar(this.props);\n        const hasDetails = SidebarUtils.canHaveDetailsSidebar(this.props);\n        const hasMetadata = SidebarUtils.shouldRenderMetadataSidebar(this.props, metadataEditors);\n        const hasSkills = SidebarUtils.shouldRenderSkillsSidebar(this.props, file);\n        const onVersionHistoryClick = hasVersions ? this.handleVersionHistoryClick : this.props.onVersionHistoryClick;\n        const styleClassName = classNames('be bcs', className, {\n            'bcs-is-open': isOpen,\n        });\n\n        return (\n            <aside id={this.id} className={styleClassName}>\n                {isLoading ? (\n                    <div className=\"bcs-loading\">\n                        <LoadingIndicator />\n                    </div>\n                ) : (\n                    <>\n                        <SidebarNav\n                            additionalTabs={additionalTabs}\n                            elementId={this.id}\n                            fileId={fileId}\n                            hasActivity={hasActivity}\n                            hasAdditionalTabs={hasAdditionalTabs}\n                            hasDetails={hasDetails}\n                            hasMetadata={hasMetadata}\n                            hasSkills={hasSkills}\n                            isOpen={isOpen}\n                        />\n                        <SidebarPanels\n                            activitySidebarProps={activitySidebarProps}\n                            currentUser={currentUser}\n                            elementId={this.id}\n                            detailsSidebarProps={detailsSidebarProps}\n                            file={file}\n                            fileId={fileId}\n                            getPreview={getPreview}\n                            getViewer={getViewer}\n                            hasActivity={hasActivity}\n                            hasDetails={hasDetails}\n                            hasMetadata={hasMetadata}\n                            hasSkills={hasSkills}\n                            hasVersions={hasVersions}\n                            isOpen={isOpen}\n                            key={file.id}\n                            metadataSidebarProps={metadataSidebarProps}\n                            onVersionChange={onVersionChange}\n                            onVersionHistoryClick={onVersionHistoryClick}\n                            ref={this.sidebarPanels}\n                            versionsSidebarProps={versionsSidebarProps}\n                        />\n                    </>\n                )}\n            </aside>\n        );\n    }\n}\n\nexport { Sidebar as SidebarComponent };\nexport default flow([withFeatureConsumer, withRouter])(Sidebar);\n","/**\n * @flow\n * @file Preview sidebar content component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport './SidebarContent.scss';\n\ntype Props = {\n    actions?: React.Node,\n    children: any,\n    className?: string,\n    elementId: string,\n    sidebarView: string,\n    title: React.Node,\n};\nconst SidebarContent = ({ actions, children, className, title, elementId, sidebarView, ...rest }: Props) => {\n    const label = `${elementId}${elementId === '' ? '' : '_'}${sidebarView}`;\n    const id = `${label}-content`;\n\n    return (\n        <div\n            aria-labelledby={label}\n            className={classNames('bcs-content', className)}\n            data-testid=\"bcs-content\"\n            id={id}\n            role=\"tabpanel\"\n            {...rest}\n        >\n            <div className=\"bcs-content-header\">\n                <h3 className=\"bcs-title\">{title}</h3>\n                {actions}\n            </div>\n            <div className=\"bcs-scroll-content-wrapper\">\n                <div className=\"bcs-scroll-content\">{children}</div>\n            </div>\n        </div>\n    );\n};\n\nSidebarContent.defaultProps = {\n    elementId: '',\n    sidebarView: '',\n};\n\nexport default SidebarContent;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file a placeholder component which will be displayed while a code splitted sidebar chunk is being loaded asyncronously\n * @author Box\n */\nimport * as React from 'react';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport SidebarContent from './SidebarContent';\nimport SidebarSection from './SidebarSection';\nimport './SidebarLoading.scss';\n\ntype Props = {\n    title: React.Node,\n};\n\nconst SidebarLoading = ({ title }: Props) => {\n    return (\n        <SidebarContent title={title}>\n            <SidebarSection isOpen>\n                <LoadingIndicator className=\"bcs-sidebar-loading\" />\n            </SidebarSection>\n        </SidebarContent>\n    );\n};\n\nexport default SidebarLoading;\n","// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport DefaultError from '../common/error-boundary/DefaultError';\nimport './SidebarLoadingError.scss';\n\nconst SidebarLoadingError = () => (\n    <div className=\"bcs-loading-error\">\n        <DefaultError />\n    </div>\n);\n\nexport default SidebarLoadingError;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Preview sidebar nav component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport IconMagicWand from '../../icons/general/IconMagicWand';\nimport IconMetadataThick from '../../icons/general/IconMetadataThick';\nimport IconDocInfo from '../../icons/general/IconDocInfo';\nimport IconChatRound from '../../icons/general/IconChatRound';\nimport messages from '../common/messages';\nimport { SIDEBAR_NAV_TARGETS } from '../common/interactionTargets';\nimport SidebarNavButton from './SidebarNavButton';\nimport SidebarToggle from './SidebarToggle';\nimport AdditionalTabs from './additional-tabs';\nimport SidebarNavTablist from './SidebarNavTablist';\nimport {\n    SIDEBAR_VIEW_SKILLS,\n    SIDEBAR_VIEW_ACTIVITY,\n    SIDEBAR_VIEW_DETAILS,\n    SIDEBAR_VIEW_METADATA,\n} from '../../constants';\nimport './SidebarNav.scss';\n\ntype Props = {\n    additionalTabs?: Array<AdditionalSidebarTab>,\n    elementId: string,\n    fileId: string,\n    hasActivity: boolean,\n    hasAdditionalTabs: boolean,\n    hasDetails: boolean,\n    hasMetadata: boolean,\n    hasSkills: boolean,\n    isOpen?: boolean,\n    onNavigate?: (SyntheticEvent<>, NavigateOptions) => void,\n} & InjectIntlProvidedProps;\n\nconst SidebarNav = ({\n    additionalTabs,\n    elementId,\n    fileId,\n    hasActivity,\n    hasAdditionalTabs,\n    hasDetails,\n    hasMetadata,\n    hasSkills,\n    intl,\n    isOpen,\n    onNavigate,\n}: Props) => (\n    <div className=\"bcs-SidebarNav\" aria-label={intl.formatMessage(messages.sidebarNavLabel)}>\n        <div className=\"bcs-SidebarNav-tabs\">\n            <SidebarNavTablist elementId={elementId} isOpen={isOpen} onNavigate={onNavigate}>\n                {hasActivity && (\n                    <SidebarNavButton\n                        data-resin-target={SIDEBAR_NAV_TARGETS.ACTIVITY}\n                        data-testid=\"sidebaractivity\"\n                        sidebarView={SIDEBAR_VIEW_ACTIVITY}\n                        tooltip={<FormattedMessage {...messages.sidebarActivityTitle} />}\n                    >\n                        <IconChatRound />\n                    </SidebarNavButton>\n                )}\n                {hasDetails && (\n                    <SidebarNavButton\n                        data-resin-target={SIDEBAR_NAV_TARGETS.DETAILS}\n                        data-testid=\"sidebardetails\"\n                        sidebarView={SIDEBAR_VIEW_DETAILS}\n                        tooltip={<FormattedMessage {...messages.sidebarDetailsTitle} />}\n                    >\n                        <IconDocInfo />\n                    </SidebarNavButton>\n                )}\n                {hasSkills && (\n                    <SidebarNavButton\n                        data-resin-target={SIDEBAR_NAV_TARGETS.SKILLS}\n                        data-testid=\"sidebarskills\"\n                        sidebarView={SIDEBAR_VIEW_SKILLS}\n                        tooltip={<FormattedMessage {...messages.sidebarSkillsTitle} />}\n                    >\n                        <IconMagicWand />\n                    </SidebarNavButton>\n                )}\n                {hasMetadata && (\n                    <SidebarNavButton\n                        data-resin-target={SIDEBAR_NAV_TARGETS.METADATA}\n                        data-testid=\"sidebarmetadata\"\n                        sidebarView={SIDEBAR_VIEW_METADATA}\n                        tooltip={<FormattedMessage {...messages.sidebarMetadataTitle} />}\n                    >\n                        <IconMetadataThick />\n                    </SidebarNavButton>\n                )}\n            </SidebarNavTablist>\n\n            {hasAdditionalTabs && (\n                <div className=\"bcs-SidebarNav-overflow\">\n                    <AdditionalTabs key={fileId} tabs={additionalTabs} />\n                </div>\n            )}\n        </div>\n        <div className=\"bcs-SidebarNav-footer\">\n            <SidebarToggle isOpen={isOpen} />\n        </div>\n    </div>\n);\n\nexport default injectIntl(SidebarNav);\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Preview sidebar nav button component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { Route } from 'react-router-dom';\nimport NavButton from '../common/nav-button';\nimport Tooltip from '../../components/tooltip/Tooltip';\nimport './SidebarNavButton.scss';\n\ntype Props = {\n    'data-resin-target'?: string,\n    'data-testid'?: string,\n    children: React.Node,\n    elementId?: string,\n    isOpen?: boolean,\n    sidebarView: string,\n    tooltip: React.Node,\n};\n\nconst SidebarNavButton = React.forwardRef<Props, React.Ref<any>>((props: Props, ref: React.Ref<any>) => {\n    const {\n        'data-resin-target': dataResinTarget,\n        'data-testid': dataTestId,\n        children,\n        elementId = '',\n        isOpen,\n        sidebarView,\n        tooltip,\n    } = props;\n    const sidebarPath = `/${sidebarView}`;\n\n    return (\n        <Route path={sidebarPath}>\n            {({ match }) => {\n                const isMatch = !!match;\n                const isActive = () => isMatch && !!isOpen;\n                const isActiveValue = isActive();\n                const isToggle = isMatch && match.isExact;\n                const sidebarState = { open: isToggle ? !isOpen : true };\n                const id = `${elementId}${elementId === '' ? '' : '_'}${sidebarView}`;\n\n                return (\n                    <Tooltip position=\"middle-left\" text={tooltip} isTabbable={false}>\n                        <NavButton\n                            activeClassName=\"bcs-is-selected\"\n                            aria-selected={isActiveValue}\n                            aria-controls={`${id}-content`}\n                            className=\"bcs-NavButton\"\n                            data-resin-target={dataResinTarget}\n                            data-testid={dataTestId}\n                            getDOMRef={ref}\n                            id={id}\n                            isActive={isActive}\n                            replace={isToggle}\n                            role=\"tab\"\n                            tabIndex={isActiveValue ? '0' : '-1'}\n                            to={{\n                                pathname: sidebarPath,\n                                state: sidebarState,\n                            }}\n                            type=\"button\"\n                        >\n                            {children}\n                        </NavButton>\n                    </Tooltip>\n                );\n            }}\n        </Route>\n    );\n});\n\nexport default SidebarNavButton;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Content Sidebar nav tablist Component\n * @author Box\n */\n\nimport * as React from 'react';\nimport type { RouterHistory } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { KEYS } from '../../constants';\n\ntype Props = {\n    children: React.Node,\n    elementId: string,\n    history: RouterHistory,\n    isOpen?: boolean,\n    onNavigate?: (SyntheticEvent<>, NavigateOptions) => void,\n};\n\nconst SidebarNavTablist = ({ children, history, elementId, isOpen, onNavigate }: Props) => {\n    const refs = [];\n    const tablist = React.Children.map(children, child => child && `/${child.props.sidebarView}`);\n    const handleKeyDown = (event: SyntheticKeyboardEvent<>): void => {\n        const currentIndex = tablist.indexOf(history.location.pathname);\n        const { length } = tablist;\n        let nextIndex = currentIndex;\n        switch (event.key) {\n            case KEYS.arrowUp:\n                nextIndex = (currentIndex - 1 + length) % length;\n\n                history.push(tablist[nextIndex]);\n                if (refs.length > 0) {\n                    refs[nextIndex].focus();\n                }\n\n                event.stopPropagation();\n                event.preventDefault();\n                break;\n            case KEYS.arrowDown:\n                nextIndex = (currentIndex + 1) % length;\n\n                history.push(tablist[nextIndex]);\n                if (refs.length > 0) {\n                    refs[nextIndex].focus();\n                }\n\n                event.stopPropagation();\n                event.preventDefault();\n                break;\n            default:\n                break;\n        }\n    };\n\n    return (\n        <div\n            aria-orientation=\"vertical\"\n            className=\"bcs-SidebarNav-main\"\n            role=\"tablist\"\n            tabIndex=\"0\"\n            onKeyDown={handleKeyDown}\n        >\n            {React.Children.map(children, tab => {\n                if (!tab) {\n                    return null;\n                }\n\n                return React.cloneElement(tab, {\n                    elementId,\n                    isOpen,\n                    onNavigate,\n                    ref: ref => {\n                        refs.push(ref);\n                    },\n                    ...tab.props,\n                });\n            })}\n        </div>\n    );\n};\n\nexport default withRouter(SidebarNavTablist);\n","/**\n * @flow\n * @file Content Sidebar Panels component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport SidebarUtils from './SidebarUtils';\nimport {\n    ORIGIN_ACTIVITY_SIDEBAR,\n    ORIGIN_DETAILS_SIDEBAR,\n    ORIGIN_METADATA_SIDEBAR,\n    ORIGIN_SKILLS_SIDEBAR,\n    ORIGIN_VERSIONS_SIDEBAR,\n    SIDEBAR_VIEW_ACTIVITY,\n    SIDEBAR_VIEW_DETAILS,\n    SIDEBAR_VIEW_METADATA,\n    SIDEBAR_VIEW_SKILLS,\n    SIDEBAR_VIEW_VERSIONS,\n} from '../../constants';\nimport type { DetailsSidebarProps } from './DetailsSidebar';\nimport type { ActivitySidebarProps } from './ActivitySidebar';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\nimport type { VersionsSidebarProps } from './versions';\n\ntype Props = {\n    activitySidebarProps: ActivitySidebarProps,\n    currentUser?: User,\n    detailsSidebarProps: DetailsSidebarProps,\n    elementId: string,\n    file: BoxItem,\n    fileId: string,\n    getPreview: Function,\n    getViewer: Function,\n    hasActivity: boolean,\n    hasDetails: boolean,\n    hasMetadata: boolean,\n    hasSkills: boolean,\n    hasVersions: boolean,\n    isOpen: boolean,\n    metadataSidebarProps: MetadataSidebarProps,\n    onVersionChange?: Function,\n    onVersionHistoryClick?: Function,\n    versionsSidebarProps: VersionsSidebarProps,\n};\n\ntype ElementRefType = {\n    current: null | Object,\n};\n\n// TODO: place into code splitting logic\nconst BASE_EVENT_NAME = '_JS_LOADING';\nconst MARK_NAME_JS_LOADING_DETAILS = `${ORIGIN_DETAILS_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_ACTIVITY = `${ORIGIN_ACTIVITY_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_SKILLS = `${ORIGIN_SKILLS_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_METADATA = `${ORIGIN_METADATA_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_VERSIONS = `${ORIGIN_VERSIONS_SIDEBAR}${BASE_EVENT_NAME}`;\n\nconst URL_TO_FEED_ITEM_TYPE = { comments: 'comment', tasks: 'task' };\n\nconst LoadableDetailsSidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_DETAILS, MARK_NAME_JS_LOADING_DETAILS);\nconst LoadableActivitySidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_ACTIVITY,\n    MARK_NAME_JS_LOADING_ACTIVITY,\n);\nconst LoadableSkillsSidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_SKILLS, MARK_NAME_JS_LOADING_SKILLS);\nconst LoadableMetadataSidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_METADATA,\n    MARK_NAME_JS_LOADING_METADATA,\n);\nconst LoadableVersionsSidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_VERSIONS,\n    MARK_NAME_JS_LOADING_VERSIONS,\n);\n\nclass SidebarPanels extends React.Component<Props> {\n    activitySidebar: ElementRefType = React.createRef();\n\n    detailsSidebar: ElementRefType = React.createRef();\n\n    metadataSidebar: ElementRefType = React.createRef();\n\n    versionsSidebar: ElementRefType = React.createRef();\n\n    /**\n     * Refreshes the contents of the active sidebar\n     * @returns {void}\n     */\n    refresh(): void {\n        const { current: activitySidebar } = this.activitySidebar;\n        const { current: detailsSidebar } = this.detailsSidebar;\n        const { current: metadataSidebar } = this.metadataSidebar;\n        const { current: versionsSidebar } = this.versionsSidebar;\n\n        if (activitySidebar) {\n            activitySidebar.refresh();\n        }\n\n        if (detailsSidebar) {\n            detailsSidebar.refresh();\n        }\n\n        if (metadataSidebar) {\n            metadataSidebar.refresh();\n        }\n\n        if (versionsSidebar) {\n            versionsSidebar.refresh();\n        }\n    }\n\n    render() {\n        const {\n            activitySidebarProps,\n            currentUser,\n            detailsSidebarProps,\n            elementId,\n            file,\n            fileId,\n            getPreview,\n            getViewer,\n            hasActivity,\n            hasDetails,\n            hasMetadata,\n            hasSkills,\n            hasVersions,\n            isOpen,\n            metadataSidebarProps,\n            onVersionChange,\n            onVersionHistoryClick,\n            versionsSidebarProps,\n        }: Props = this.props;\n\n        if (!isOpen || (!hasActivity && !hasDetails && !hasMetadata && !hasSkills && !hasVersions)) {\n            return null;\n        }\n\n        return (\n            <Switch>\n                {hasSkills && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_SKILLS}`}\n                        render={() => (\n                            <LoadableSkillsSidebar\n                                elementId={elementId}\n                                key={file.id}\n                                file={file}\n                                getPreview={getPreview}\n                                getViewer={getViewer}\n                                startMarkName={MARK_NAME_JS_LOADING_SKILLS}\n                            />\n                        )}\n                    />\n                )}\n                {/* This handles both the default activity sidebar and the activity sidebar with a\n                comment or task deeplink.  */}\n                {hasActivity && (\n                    <Route\n                        exact\n                        path={[\n                            `/${SIDEBAR_VIEW_ACTIVITY}`,\n                            `/${SIDEBAR_VIEW_ACTIVITY}/:activeFeedEntryType(comments|tasks)/:activeFeedEntryId?`,\n                        ]}\n                        render={({ match }) => {\n                            const matchEntryType = match.params.activeFeedEntryType;\n                            const activeFeedEntryType = matchEntryType\n                                ? URL_TO_FEED_ITEM_TYPE[matchEntryType]\n                                : undefined;\n                            return (\n                                <LoadableActivitySidebar\n                                    elementId={elementId}\n                                    currentUser={currentUser}\n                                    file={file}\n                                    onVersionHistoryClick={onVersionHistoryClick}\n                                    ref={this.activitySidebar}\n                                    startMarkName={MARK_NAME_JS_LOADING_ACTIVITY}\n                                    activeFeedEntryId={match.params.activeFeedEntryId}\n                                    activeFeedEntryType={activeFeedEntryType}\n                                    {...activitySidebarProps}\n                                />\n                            );\n                        }}\n                    />\n                )}\n                {hasDetails && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_DETAILS}`}\n                        render={() => (\n                            <LoadableDetailsSidebar\n                                elementId={elementId}\n                                fileId={fileId}\n                                key={fileId}\n                                hasVersions={hasVersions}\n                                onVersionHistoryClick={onVersionHistoryClick}\n                                ref={this.detailsSidebar}\n                                startMarkName={MARK_NAME_JS_LOADING_DETAILS}\n                                {...detailsSidebarProps}\n                            />\n                        )}\n                    />\n                )}\n                {hasMetadata && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_METADATA}`}\n                        render={() => (\n                            <LoadableMetadataSidebar\n                                elementId={elementId}\n                                fileId={fileId}\n                                ref={this.metadataSidebar}\n                                startMarkName={MARK_NAME_JS_LOADING_METADATA}\n                                {...metadataSidebarProps}\n                            />\n                        )}\n                    />\n                )}\n                {hasVersions && (\n                    <Route\n                        path=\"/:sidebar(activity|details)/versions/:versionId?\"\n                        render={({ match }) => (\n                            <LoadableVersionsSidebar\n                                fileId={fileId}\n                                key={fileId}\n                                onVersionChange={onVersionChange}\n                                parentName={match.params.sidebar}\n                                ref={this.versionsSidebar}\n                                versionId={match.params.versionId}\n                                {...versionsSidebarProps}\n                            />\n                        )}\n                    />\n                )}\n                <Route\n                    render={() => {\n                        let redirect = '';\n\n                        if (hasSkills) {\n                            redirect = SIDEBAR_VIEW_SKILLS;\n                        } else if (hasActivity) {\n                            redirect = SIDEBAR_VIEW_ACTIVITY;\n                        } else if (hasDetails) {\n                            redirect = SIDEBAR_VIEW_DETAILS;\n                        } else if (hasMetadata) {\n                            redirect = SIDEBAR_VIEW_METADATA;\n                        }\n\n                        return <Redirect to={{ pathname: `/${redirect}`, state: { silent: true } }} />;\n                    }}\n                />\n            </Switch>\n        );\n    }\n}\n\nexport default SidebarPanels;\n","// @deprecated, use Collapsible\n\n/**\n * @flow\n * @file Preview sidebar section component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport IconCaretDown from '../../icons/general/IconCaretDown';\nimport { COLOR_999 } from '../../constants';\nimport './SidebarSection.scss';\n\ntype Props = {\n    children?: any,\n    className: string,\n    interactionTarget?: string,\n    isOpen: boolean,\n    title?: string | React.Node,\n};\n\ntype State = {\n    isOpen: boolean,\n};\n\nclass SidebarSection extends React.PureComponent<Props, State> {\n    props: Props;\n\n    state: State;\n\n    static defaultProps = {\n        className: '',\n        isOpen: true,\n    };\n\n    /**\n     * [constructor]\n     *\n     * @private\n     * @return {ContentPreview}\n     */\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            isOpen: props.isOpen,\n        };\n    }\n\n    /**\n     * Click handler for toggling the section\n     *\n     * @private\n     * @param {Event} event - click event\n     * @return {void}\n     */\n    toggleVisibility = () => {\n        this.setState(prevState => ({\n            isOpen: !prevState.isOpen,\n        }));\n    };\n\n    /**\n     * Renders the section\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    render() {\n        const { isOpen }: State = this.state;\n        const { children, className, title, interactionTarget }: Props = this.props;\n\n        const sectionClassName = classNames(\n            'bcs-section',\n            {\n                'bcs-section-open': isOpen,\n            },\n            className,\n        );\n\n        return (\n            <div className={sectionClassName}>\n                {title && (\n                    <PlainButton\n                        className=\"bcs-section-title\"\n                        data-resin-target={interactionTarget}\n                        onClick={this.toggleVisibility}\n                        type=\"button\"\n                    >\n                        {title}\n                        <IconCaretDown color={COLOR_999} width={8} />\n                    </PlainButton>\n                )}\n                {(isOpen || !title) && <div className=\"bcs-section-content\">{children}</div>}\n            </div>\n        );\n    }\n}\n\nexport default SidebarSection;\n","// extracted by mini-css-extract-plugin","/**\n * @flow strict\n * @file Sidebar Toggle component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { withRouter, type RouterHistory } from 'react-router-dom';\nimport SidebarToggleButton from '../../components/sidebar-toggle-button/SidebarToggleButton';\nimport { SIDEBAR_NAV_TARGETS } from '../common/interactionTargets';\n\ntype Props = {\n    history: RouterHistory,\n    isOpen?: boolean,\n};\n\nconst SidebarToggle = ({ history, isOpen }: Props) => {\n    return (\n        <SidebarToggleButton\n            data-resin-target={SIDEBAR_NAV_TARGETS.TOGGLE}\n            data-testid=\"sidebartoggle\"\n            isOpen={isOpen}\n            onClick={event => {\n                event.preventDefault();\n                history.replace({ state: { open: !isOpen } });\n            }}\n        />\n    );\n};\n\nexport { SidebarToggle as SidebarToggleComponent };\nexport default withRouter(SidebarToggle);\n","/**\n * @flow\n * @file Utility for sidebar\n * @author Box\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport AsyncLoad from '../common/async-load';\nimport messages from '../common/messages';\nimport SidebarLoading from './SidebarLoading';\nimport SidebarLoadingError from './SidebarLoadingError';\nimport { hasSkills as hasSkillsData } from './skills/skillUtils';\nimport { mark } from '../../utils/performance';\nimport {\n    SIDEBAR_VIEW_SKILLS,\n    SIDEBAR_VIEW_ACTIVITY,\n    SIDEBAR_VIEW_METADATA,\n    SIDEBAR_VIEW_DETAILS,\n    SIDEBAR_VIEW_VERSIONS,\n} from '../../constants';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\n\nclass SidebarUtils {\n    /**\n     * Determines if we can render the details sidebar.\n     * Only relies on props.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @return {Boolean} true if we should render\n     */\n    static canHaveDetailsSidebar({ detailsSidebarProps = {} }: ContentSidebarProps): boolean {\n        const { hasProperties, hasAccessStats, hasClassification, hasVersions, hasNotices } = detailsSidebarProps;\n        return !!hasProperties || !!hasAccessStats || !!hasClassification || !!hasVersions || !!hasNotices;\n    }\n\n    /**\n     * Determines if we can render the metadata sidebar.\n     * Only relies on props.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @return {Boolean} true if we should render\n     */\n    static canHaveMetadataSidebar(props: ContentSidebarProps): boolean {\n        return !!props.hasMetadata;\n    }\n\n    /**\n     * Determines if we can render the activity sidebar.\n     * Only relies on props.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @return {Boolean} true if we should render\n     */\n    static canHaveActivitySidebar(props: ContentSidebarProps): boolean {\n        return !!props.hasActivityFeed;\n    }\n\n    /**\n     * Determines if we can render the skills sidebar.\n     * Only relies on props.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @return {Boolean} true if we should render\n     */\n    static canHaveSkillsSidebar(props: ContentSidebarProps): boolean {\n        return !!props.hasSkills;\n    }\n\n    /**\n     * Determines if we can render the sidebar.\n     * Only relies on props.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @return {Boolean} true if we should have a sidebar\n     */\n    static canHaveSidebar(props: ContentSidebarProps): boolean {\n        return (\n            SidebarUtils.canHaveDetailsSidebar(props) ||\n            SidebarUtils.canHaveActivitySidebar(props) ||\n            SidebarUtils.canHaveSkillsSidebar(props) ||\n            SidebarUtils.canHaveMetadataSidebar(props)\n        );\n    }\n\n    /**\n     * Determines if we should bother rendering the skills sidebar.\n     * Relies on props and file data.\n     *\n     * @private\n     * @param {ContentSidebarProps} props - User passed in props\n     * @param {BoxItem} file - box file\n     * @return {Boolean} true if we should render\n     */\n    static shouldRenderSkillsSidebar(props: ContentSidebarProps, file?: BoxItem): boolean {\n        return !!file && SidebarUtils.canHaveSkillsSidebar(props) && hasSkillsData(file);\n    }\n\n    /**\n     * Determines if we should bother rendering the metadata sidebar.\n     * Relies on props and metadata data and feature enabled or not.\n     *\n     * @private\n     * @param {ContentSidebarProps} props - User passed in props\n     * @param {Array<MetadataEditor>} editors - metadata editors\n     * @return {Boolean} true if we should render\n     */\n    static shouldRenderMetadataSidebar(props: ContentSidebarProps, editors?: Array<MetadataEditor>): boolean {\n        const { metadataSidebarProps = {} }: ContentSidebarProps = props;\n        const { isFeatureEnabled = true }: MetadataSidebarProps = metadataSidebarProps;\n\n        return (\n            SidebarUtils.canHaveMetadataSidebar(props) &&\n            (isFeatureEnabled || (Array.isArray(editors) && editors.length > 0))\n        );\n    }\n\n    /**\n     * Determines if we should bother rendering the sidebar.\n     * Relies on props and file data.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @param {BoxItem} file - box file\n     * @param {Array<MetadataEditor>} editors - metadata editors\n     * @return {Boolean} true if we should fetch or render\n     */\n    static shouldRenderSidebar(props: ContentSidebarProps, file?: BoxItem, editors?: Array<MetadataEditor>): boolean {\n        return (\n            !!file &&\n            (SidebarUtils.canHaveDetailsSidebar(props) ||\n                SidebarUtils.shouldRenderSkillsSidebar(props, file) ||\n                SidebarUtils.canHaveActivitySidebar(props) ||\n                SidebarUtils.shouldRenderMetadataSidebar(props, editors))\n        );\n    }\n\n    /**\n     * Gets the title for a given sidebar view\n     *\n     * @param {string} view - the view name\n     * @return {React.Node} - the node to render\n     */\n    static getTitleForView(view: string): React.Node {\n        switch (view) {\n            case SIDEBAR_VIEW_SKILLS:\n                return <FormattedMessage {...messages.sidebarSkillsTitle} />;\n            case SIDEBAR_VIEW_DETAILS:\n                return <FormattedMessage {...messages.sidebarDetailsTitle} />;\n            case SIDEBAR_VIEW_METADATA:\n                return <FormattedMessage {...messages.sidebarMetadataTitle} />;\n            case SIDEBAR_VIEW_ACTIVITY:\n                return <FormattedMessage {...messages.sidebarActivityTitle} />;\n            default:\n                return null;\n        }\n    }\n\n    /**\n     * Marks and gets the loader for a given sidebar view\n     *\n     * @param {String} view - the view name\n     * @param {String} markName -  the name to be used by performance.mark\n     * @return {Function} - a function which will resolve the module to load\n     */\n    static getLoaderForView(view: string, markName: string): Promise<any> {\n        mark(markName);\n        let importFn;\n        switch (view) {\n            case SIDEBAR_VIEW_SKILLS:\n                importFn = import(/* webpackMode: \"lazy\", webpackChunkName: \"skills-sidebar\" */ './SkillsSidebar');\n                break;\n            case SIDEBAR_VIEW_DETAILS:\n                importFn = import(/* webpackMode: \"lazy\", webpackChunkName: \"details-sidebar\" */ './DetailsSidebar');\n                break;\n            case SIDEBAR_VIEW_METADATA:\n                importFn = import(/* webpackMode: \"lazy\", webpackChunkName: \"metadata-sidebar\" */ './MetadataSidebar');\n                break;\n            case SIDEBAR_VIEW_ACTIVITY:\n                importFn = import(/* webpackMode: \"lazy\", webpackChunkName: \"activity-sidebar\" */ './ActivitySidebar');\n                break;\n            case SIDEBAR_VIEW_VERSIONS:\n                importFn = import(/* webpackMode: \"lazy\", webpackChunkName: \"versions-sidebar\" */ './versions');\n                break;\n            default:\n                return Promise.resolve(null);\n        }\n\n        return importFn;\n    }\n\n    /**\n     * Gets the component which async loads a given sidebar view\n     *\n     * @param {String} view - the view name\n     * @param {String} markName -  the name to be used by performance.mark\n     * @param {Object} props - additional props\n     * @return {React.Node} - the node to render\n     */\n    static getAsyncSidebarContent(view: string, markName: string, props: Object = {}) {\n        return AsyncLoad({\n            errorComponent: SidebarLoadingError,\n            fallback: <SidebarLoading title={this.getTitleForView(view)} />,\n            loader: () => this.getLoaderForView(view, markName),\n            ...props,\n        });\n    }\n}\n\nexport default SidebarUtils;\n","/**\n * @flow\n * @file Sidebar Additional Tab component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport { bdlGray50 } from '../../../styles/variables';\nimport Tooltip from '../../common/Tooltip';\nimport PlainButton from '../../../components/plain-button/PlainButton';\nimport IconEllipsis from '../../../icons/general/IconEllipsis';\nimport AdditionalTabPlaceholder from './AdditionalTabPlaceholder';\nimport messages from './messages';\n\nimport './AdditionalTab.scss';\n\ntype Props = {\n    isLoading: boolean,\n    onImageLoad: () => void,\n    status?: string,\n} & AdditionalSidebarTab;\n\ntype State = {\n    isErrored: boolean,\n};\n\nconst BLOCKED_BY_SHEILD = 'BLOCKED_BY_SHIELD_ACCESS_POLICY';\n\nclass AdditionalTab extends React.PureComponent<Props, State> {\n    state = {\n        isErrored: false,\n    };\n\n    onImageError = () => {\n        this.props.onImageLoad();\n        this.setState({ isErrored: true });\n    };\n\n    isDisabled() {\n        const { status } = this.props;\n        return status === BLOCKED_BY_SHEILD;\n    }\n\n    getDisabledReason() {\n        let reason = '';\n        const { status } = this.props;\n        switch (status) {\n            case BLOCKED_BY_SHEILD:\n                reason = <FormattedMessage {...messages.blockedByShieldAccessPolicy} />;\n                break;\n            default:\n            // noop\n        }\n        return reason;\n    }\n\n    getTabIcon() {\n        const { id, iconUrl, onImageLoad, title } = this.props;\n        const { isErrored } = this.state;\n\n        let TabIcon;\n\n        if (isErrored) {\n            TabIcon = <AdditionalTabPlaceholder isLoading={false} />;\n        } else if (id && id > 0) {\n            TabIcon = (\n                <img\n                    className=\"bdl-AdditionalTab-icon\"\n                    src={iconUrl}\n                    onError={this.onImageError}\n                    onLoad={onImageLoad}\n                    alt={title}\n                />\n            );\n        } else {\n            TabIcon = <IconEllipsis color={bdlGray50} />;\n        }\n\n        return TabIcon;\n    }\n\n    render() {\n        const { callback: callbackFn, id, isLoading, iconUrl, onImageLoad, title, ...rest } = this.props;\n\n        const isDisabled = this.isDisabled();\n\n        const className = classNames('bdl-AdditionalTab', {\n            'bdl-is-hidden': isLoading,\n            'bdl-is-disabled': isDisabled,\n        });\n\n        const tooltipText = isDisabled ? this.getDisabledReason() : title;\n\n        return (\n            <Tooltip position=\"middle-left\" text={tooltipText}>\n                <PlainButton\n                    className={className}\n                    data-testid=\"additionaltab\"\n                    type=\"button\"\n                    isDisabled={isDisabled}\n                    onClick={() => callbackFn({ id, callbackData: rest })}\n                >\n                    {this.getTabIcon()}\n                </PlainButton>\n            </Tooltip>\n        );\n    }\n}\n\nexport default AdditionalTab;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Preview sidebar additional tab placeholder component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n    isLoading: boolean,\n};\n\nconst AdditionalTabPlaceholder = ({ isLoading = false }: Props) => {\n    const classes = classNames('bdl-AdditionalTabPlaceholder-icon', {\n        'bdl-AdditionalTabPlaceholder-icon--loading': isLoading,\n    });\n    return (\n        <div className=\"bdl-AdditionalTabPlaceholder\" data-testid=\"additionaltabplaceholder\">\n            <div className={classes} />\n        </div>\n    );\n};\n\nexport default AdditionalTabPlaceholder;\n","/**\n * @flow\n * @file Preview sidebar additional tabs component\n * @author Box\n */\n\nimport React, { PureComponent } from 'react';\nimport AdditionalTab from './AdditionalTab';\nimport AdditionalTabsLoading from './AdditionalTabsLoading';\n\nimport './AdditionalTabs.scss';\n\ntype Props = {\n    tabs?: Array<AdditionalSidebarTab>,\n};\n\ntype State = {\n    isLoading: boolean,\n};\n\nclass AdditionalTabs extends PureComponent<Props, State> {\n    numLoadedTabs: number = 0;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = { isLoading: true };\n    }\n\n    /**\n     * Handles an individual icon image load\n     *\n     * @return {void}\n     */\n    onImageLoad = () => {\n        const { tabs } = this.props;\n\n        if (!tabs) {\n            return;\n        }\n\n        const hasMoreTab = tabs.find(tab => tab.id < 0 && !tab.iconUrl);\n        const numTabs = tabs.length - (hasMoreTab ? 1 : 0);\n\n        this.numLoadedTabs += 1;\n\n        if (this.numLoadedTabs === numTabs) {\n            this.setState({\n                isLoading: false,\n            });\n        }\n    };\n\n    render() {\n        const { tabs } = this.props;\n        const { isLoading } = this.state;\n\n        return (\n            <div className=\"bdl-AdditionalTabs\">\n                {isLoading && <AdditionalTabsLoading />}\n                {tabs &&\n                    tabs.map(tabData => (\n                        <AdditionalTab\n                            key={tabData.id}\n                            onImageLoad={this.onImageLoad}\n                            isLoading={isLoading}\n                            {...tabData}\n                        />\n                    ))}\n            </div>\n        );\n    }\n}\n\nexport default AdditionalTabs;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Preview sidebar additional tabs loading component\n * @author Box\n */\n\nimport * as React from 'react';\nimport AdditionalTabPlaceholder from './AdditionalTabPlaceholder';\nimport MoreTabPlaceholder from './MoreTabPlaceholder';\nimport './AdditionalTabsLoading.scss';\n\n// Loading layout for the sidebar's additional tabs\nconst LOADING_TABS = [\n    AdditionalTabPlaceholder,\n    AdditionalTabPlaceholder,\n    AdditionalTabPlaceholder,\n    AdditionalTabPlaceholder,\n    AdditionalTabPlaceholder,\n    MoreTabPlaceholder,\n];\n\nconst AdditionalTabsLoading = (): Array<React.Element<any>> => {\n    return LOADING_TABS.map((LoadingComponent, idx) => <LoadingComponent isLoading key={idx} />);\n};\n\nexport default AdditionalTabsLoading;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Preview sidebar more tabs loading component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { bdlGray10 } from '../../../styles/variables';\nimport IconEllipsis from '../../../icons/general/IconEllipsis';\n\nconst MoreTabPlaceholder = () => {\n    return (\n        <div className=\"bdl-AdditionalTabPlaceholder\">\n            <IconEllipsis color={bdlGray10} className=\"bdl-AdditionalTabPlaceholder-moreIcon\" />\n        </div>\n    );\n};\n\nexport default MoreTabPlaceholder;\n","// @flow\nexport { default } from './AdditionalTabs';\n","/**\n * @flow\n * @file i18n messages\n * @author Box\n */\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    blockedByShieldAccessPolicy: {\n        id: 'be.additionalTab.blockedByShieldAccessPolicy',\n        defaultMessage: 'Use of this app has been disabled by the applied access policy',\n        description: 'Text to display when app is disabled by applied access policy',\n    },\n});\n\nexport default messages;\n","// @flow\nexport { default } from './ContentSidebar';\nexport type { ContentSidebarProps } from './ContentSidebar';\n","/**\n * @flow\n * @file Skills utils\n * @author Box\n */\n\nimport getProp from 'lodash/get';\n\n/**\n * Returns true if its a valid skills card.\n *\n * @param {SkillCard} card - box skill card\n * @return {boolean} if its valid skills card\n */\nconst isValidSkillsCard = (file: BoxItem, card: SkillCard): boolean => {\n    const fileVersion = getProp(file, 'file_version.id');\n    const skillCardFileVersion = card.file_version ? card.file_version.id : fileVersion;\n    return fileVersion === skillCardFileVersion && (!!card.status || Array.isArray(card.entries));\n};\n\n/**\n * Returns true if there are valid skills to show.\n *\n * @param {BoxItem} file - box file\n * @return {boolean} if there are valid skills to show\n */\nconst hasSkills = (file: BoxItem): boolean => {\n    const cards = getProp(file, 'metadata.global.boxSkillsCards.cards', []);\n    return Array.isArray(cards) && cards.length > 0 && cards.some(card => isValidSkillsCard(file, card));\n};\n\nexport { hasSkills, isValidSkillsCard };\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconChatRound = ({ className = '', color = '#999', height = 24, title, width = 24 }: Props) => (\n    <AccessibleSVG\n        className={`icon-chat-round ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 24 24\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M14 3h-4a8 8 0 0 0-5 14.26V21a1 1 0 0 0 .08.37 1 1 0 0 0 1.31.53L12 19h2a8 8 0 0 0 0-16zm-6 9a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm4 0a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm4 0a1 1 0 1 1 1-1 1 1 0 0 1-1 1z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconChatRound;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconDocInfo = ({ className = '', color = '#999', height = 24, title, width = 24 }: Props) => (\n    <AccessibleSVG\n        className={`icon-doc-info ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 24 24\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M19.41 7.41l-4.82-4.82A2 2 0 0 0 13.17 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8.83a2 2 0 0 0-.59-1.42zM13 16a1 1 0 0 1-2 0v-4a1 1 0 0 1 2 0zm-1-6a1 1 0 1 1 1-1 1 1 0 0 1-1 1z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconDocInfo;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconEllipsis = ({ className = '', color = '#000000', height = 20, title, width = 20 }: Props) => (\n    <AccessibleSVG\n        className={`icon-ellipsis ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 10 2\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M1 2c.6 0 1-.4 1-1s-.4-1-1-1-1 .4-1 1 .4 1 1 1zm8 0c.6 0 1-.4 1-1s-.4-1-1-1-1 .4-1\n                    1 .4 1 1 1zM5 2c.6 0 1-.4 1-1s-.4-1-1-1-1 .4-1 1 .4 1 1 1z\"\n            fill={color}\n            fillRule=\"evenodd\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconEllipsis;\n","// @flow\nimport * as React from 'react';\n\nimport { bdlGray50 } from '../../styles/variables';\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconHide = ({ className = '', color = bdlGray50, height = 16, title, width = 16 }: Props) => (\n    <AccessibleSVG className={`icon-hide ${className}`} title={title} width={width} height={height} viewBox=\"0 0 16 16\">\n        <path\n            d=\"M7.646 7.646L4.354 4.354a.5.5 0 0 1 0-.708l1.292-1.292a.5.5 0 0 1 .708 0l5.292 5.292a.5.5 0 0 1 0 .708l-5.292 5.292a.5.5 0 0 1-.708 0l-1.292-1.292a.5.5 0 0 1 0-.708l3.292-3.292a.5.5 0 0 0 0-.708z\"\n            fill={color}\n            fillRule=\"nonzero\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconHide;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconMagicWand = ({ className = '', color = '#999', height = 24, title, width = 24 }: Props) => (\n    <AccessibleSVG\n        className={`icon-magic-wand ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 24 24\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M19.91 5.84a2.85 2.85 0 0 0-4 0L3.83 17.89a2.83 2.83 0 0 0 4 4L19.91 9.83a2.84 2.84 0 0 0 0-3.99zm-1.6 2.44l-2.92 3-.86-.86 3-3a.51.51 0 0 1 .43-.18.61.61 0 0 1 .43.19l.08.1a.64.64 0 0 1-.16.75zM11.11 3.51a2.67 2.67 0 0 1 .91.86 5.39 5.39 0 0 1 .38.76l.06.14a7.6 7.6 0 0 1 .37-.76 2.71 2.71 0 0 1 .78-.84 4 4 0 0 1 .73-.4l.24-.11c-.25-.11-.5-.23-.74-.36a2.51 2.51 0 0 1-.94-.89 5.63 5.63 0 0 1-.4-.82v-.05a5.93 5.93 0 0 1-.34.72 2.73 2.73 0 0 1-.88.94 6.45 6.45 0 0 1-.74.38l-.16.06a4.3 4.3 0 0 1 .73.37zM8.48 7.61a1.9 1.9 0 0 1 .66.63 4.73 4.73 0 0 1 .28.55v.09a4.64 4.64 0 0 1 .26-.55 2.05 2.05 0 0 1 .56-.61 3.2 3.2 0 0 1 .54-.3l.22-.09a2.11 2.11 0 0 1-.52-.26 1.87 1.87 0 0 1-.68-.66 3.14 3.14 0 0 1-.29-.58c-.08.19-.16.35-.25.52a2 2 0 0 1-.68.65 3.89 3.89 0 0 1-.58.28h-.12a5.36 5.36 0 0 1 .6.33z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconMagicWand;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconMetadataThick = ({ className = '', color = '#999', height = 24, title, width = 24 }: Props) => (\n    <AccessibleSVG\n        className={`icon-metadata-thick ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 24 24\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M12,2A10,10,0,1,0,22,12,10,10,0,0,0,12,2Zm4.37,13.43a1,1,0,0,1-.37.07,1,1,0,0,1-.93-.63L13.9,11.94l-1,2a1,1,0,0,1-1.78,0l-1-2L8.93,14.87a1,1,0,1,1-1.86-.74l2-5a1,1,0,0,1,1.82-.08L12,11.26l1.11-2.21A1,1,0,0,1,14,8.5a1,1,0,0,1,.89.63l2,5A1,1,0,0,1,16.37,15.43Z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconMetadataThick;\n","// @flow\nimport * as React from 'react';\n\nimport { bdlGray50 } from '../../styles/variables';\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconShow = ({ className = '', color = bdlGray50, height = 16, title, width = 16 }: Props) => (\n    <AccessibleSVG className={`icon-show ${className}`} title={title} width={width} height={height} viewBox=\"0 0 16 16\">\n        <path\n            d=\"M7.354 7.646l3.292-3.292a.5.5 0 0 0 0-.708L9.354 2.354a.5.5 0 0 0-.708 0L3.354 7.646a.5.5 0 0 0 0 .708l5.292 5.292a.5.5 0 0 0 .708 0l1.292-1.292a.5.5 0 0 0 0-.708L7.354 8.354a.5.5 0 0 1 0-.708z\"\n            fill={color}\n            fillRule=\"nonzero\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconShow;\n"],"sourceRoot":""}