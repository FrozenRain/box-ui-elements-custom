{"version":3,"sources":["webpack:///./src/common/messages.js","webpack:///./src/common/variables.js","webpack:///./src/components/datalist-item/DatalistItem.js","webpack:///./src/components/datalist-item/DatalistItem.scss","webpack:///./src/components/datalist-item/index.js","webpack:///./src/components/date-picker/DatePicker.js","webpack:///./src/components/date-picker/DatePicker.scss","webpack:///./src/components/flyout/Flyout.js","webpack:///./src/components/flyout/Flyout.scss","webpack:///./src/components/flyout/Overlay.js","webpack:///./src/components/flyout/index.js","webpack:///./src/components/focus-trap/FocusTrap.js","webpack:///./src/components/focus-trap/index.js","webpack:///./src/components/form-elements/form/Form.js","webpack:///./src/components/label/HiddenLabel.js","webpack:///./src/components/label/InfoIconWithTooltip.js","webpack:///./src/components/label/Label.js","webpack:///./src/components/label/Label.scss","webpack:///./src/components/label/LabelPrimitive.js","webpack:///./src/components/label/StandardLabel.js","webpack:///./src/components/label/index.js","webpack:///./src/components/link/Link.js","webpack:///./src/components/link/LinkBase.js","webpack:///./src/components/scroll-wrapper/ScrollWrapper.js","webpack:///./src/components/scroll-wrapper/ScrollWrapper.scss","webpack:///./src/components/scroll-wrapper/index.js","webpack:///./src/components/selector-dropdown/SelectorDropdown.js","webpack:///./src/components/selector-dropdown/SelectorDropdown.scss","webpack:///./src/components/selector-dropdown/index.js","webpack:///./src/icons/general/IconAlert.js","webpack:///./src/icons/general/IconCalendar.js","webpack:///./src/icons/general/IconClear.js","webpack:///./src/icons/general/IconInfo.js","webpack:///./src/icons/general/IconVerified.js"],"names":["messages","defineMessages","cancel","close","copy","copied","done","okay","save","send","optional","pillSelectorPlaceholder","messageSelectorPlaceholder","invalidInputError","minLengthError","maxLengthError","invalidEmailError","invalidURLError","invalidUserError","requiredFieldError","BOX_BLUE","SEESEE","RESIN_TAG_TARGET","DatalistItem","React","constructor","props","setActiveItemID","id","uniqueId","componentDidMount","isActive","componentDidUpdate","prevProps","render","children","className","rest","classes","classNames","itemProps","omit","previousMonth","nextMonth","iconAlertText","dateClearButton","chooseDate","TOGGLE_DELAY_MS","ISO_STRING_DATE_FORMAT","UTC_TIME_DATE_FORMAT","UNIX_TIME_DATE_FORMAT","UTC_ISO_STRING_DATE_FORMAT","ENTER_KEY","ESCAPE_KEY","TAB_KEY","stub","convertUTCToLocal","date","dateString","toUTCString","dateStringWithoutTimeZone","slice","Date","getFormattedDate","format","utcDate","toISOString","convertDateToUnixMidnightTime","getTime","DatePicker","onChange","formattedDate","formatValue","dateInputEl","focus","event","isTextInputAllowed","datePicker","isVisible","stopPropagation","key","preventDefault","hide","onBlur","nextActiveElement","relatedTarget","document","activeElement","datePickerButtonEl","shouldStayClosed","setTimeout","inputDate","value","getDate","onSelectHandler","focusDatePicker","displayFormat","intl","formatDate","dateFormat","setDate","maxDate","minDate","yearRange","formatMessage","defaultValue","year","getFullYear","i18n","months","range","map","month","weekdays","weekday","weekdaysShort","Pikaday","blurFieldOnSelect","setDefaultDate","defaultDate","field","position","showDaysInNextAndPreviousMonths","onSelect","toString","formatDisplay","updateDateInputValue","UNSAFE_componentWillReceiveProps","nextProps","nextValue","nextMinDate","nextMaxDate","setMinDate","gotoDate","setMaxDate","componentWillUnmount","destroy","description","error","errorTooltipPosition","hideLabel","hideOptionalLabel","inputProps","isClearable","isDisabled","isRequired","label","name","onFocus","placeholder","resinTarget","resinTargetAttr","valueAttr","onChangeAttr","ref","handleInputBlur","handleInputKeyDown","clearDate","handleButtonClick","injectIntl","BOTTOM_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","MIDDLE_LEFT","MIDDLE_RIGHT","TOP_CENTER","TOP_LEFT","TOP_RIGHT","positions","attachment","targetAttachment","hasClickableAncestor","rootNode","targetNode","currentNode","Node","parentNode","nodeName","toUpperCase","hasClassAncestor","targetEl","el","HTMLElement","classList","contains","Flyout","overlayNode","getElementById","overlayID","closeOnClick","closeOnClickPredicate","target","handleOverlayClose","state","closeOverlay","openOverlay","isButtonClicked","detail","setState","openOnHover","openOnHoverDelayTimeout","clearTimeout","hoverDelay","onOpen","onClose","buttonEl","overlayButtonID","focusButton","portaledClasses","closeOnClickOutside","closeOnWindowBlur","buttonNode","isInsideToggleButton","isInsideOverlay","isInside","some","isVisibleByDefault","prevState","addEventListener","handleDocumentClickOrWindowBlur","window","removeEventListener","constrainToScrollParent","constrainToWindow","offset","shouldDefaultFocus","elements","toArray","tetherPosition","length","Error","overlayButton","overlayContent","overlayButtonProps","role","onClick","onMouseEnter","handleButtonHover","onMouseLeave","handleButtonHoverLeave","overlayProps","handleOverlayClick","constraints","push","to","tetherProps","classPrefix","enabled","element","Overlay","handleOverlayKeyDown","tabIndex","FocusTrap","tabbableEls","tabbable","trapEl","focusFirstElement","previousFocusEl","getRef","shouldOutlineFocus","handleElKeyDown","focusLastElement","handleTrapElKeyDown","getFormValidityState","form","call","reduce","validityObj","inputEl","validity","valid","validityState","customError","customErrorCode","validationMessage","Form","Component","currentTarget","formData","serialize","hash","empty","isValid","checkValidity","onInvalidSubmit","onValidSubmit","registeredInputs","formValidityState","Object","keys","forEach","setValidityStateHandler","nextState","getChildContext","registerInput","bind","unregisterInput","prevFormValidityState","onSubmit","PropTypes","node","func","object","shape","HIDDEN_CLASS_NAME","HiddenLabel","labelContent","InfoIconWithTooltip","iconProps","tooltipText","OptionalFormattedMessage","commonMessages","Label","text","tooltip","infoTooltip","infoIconProps","showOptionalText","LabelPrimitive","StandardLabel","Link","LinkBase","href","linkRef","rel","component","refProp","linkRel","LinkComponent","ScrollWrapper","shouldShowTopScrollShadow","shouldShowBottomScrollShadow","newState","getScrollShadowState","scrollRef","throttledOnContentScroll","observer","observe","attributes","childlist","subtree","scrollTop","scrollHeight","clientHeight","throttle","onContentScroll","MutationObserver","disconnect","scrollRefFn","shadowSize","noop","stopDefaultEvent","SelectorDropdown","index","activeItemIndex","scrollBoundarySelector","itemEl","scrollOptions","block","boundary","querySelector","activeItemID","scrollIntoView","prevChildren","childrenCount","count","prevChildrenCount","childrenKeys","child","prevChildrenKeys","childKey","openDropdown","container","selectorDropdownRef","current","closeDropdown","isAlwaysOpen","onEnter","isDropdownOpen","nextIndex","setActiveItem","prevIndex","selectItem","resetActiveItem","shouldOpen","shouldSetActiveItemOnOpen","handleDocumentClick","listboxID","haveChildrenChanged","dividerIndex","overlayTitle","title","selector","shouldScroll","isOpen","list","item","onMouseDown","hasDivider","handleFocus","handleKeyDown","handleInput","OVERLAY_WRAPPER_CLASS","IconAlert","color","height","width","IconCalendar","IconClear","IconInfo","IconVerified","bdlGreenLight","opacity"],"mappings":"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","file":"activity-sidebar~metadata-sidebar.no.react.js","sourcesContent":["// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    cancel: {\n        defaultMessage: 'Cancel',\n        description: 'Cancel button text',\n        id: 'boxui.core.cancel',\n    },\n    close: {\n        defaultMessage: 'Close',\n        description: 'Close button text',\n        id: 'boxui.core.close',\n    },\n    copy: {\n        defaultMessage: 'Copy',\n        description: 'Copy button text',\n        id: 'boxui.core.copy',\n    },\n    copied: {\n        defaultMessage: 'Copied',\n        description: 'Copy button text after user clicks on it',\n        id: 'boxui.core.copied',\n    },\n    done: {\n        defaultMessage: 'Done',\n        description: 'Done button text',\n        id: 'boxui.core.done',\n    },\n    okay: {\n        defaultMessage: 'Okay',\n        description: 'Okay button text',\n        id: 'boxui.core.okay',\n    },\n    save: {\n        defaultMessage: 'Save',\n        description: 'Save button text',\n        id: 'boxui.core.save',\n    },\n    send: {\n        defaultMessage: 'Send',\n        description: 'Send button text',\n        id: 'boxui.core.send',\n    },\n    optional: {\n        defaultMessage: 'optional',\n        description: 'Optional text for labels',\n        id: 'boxui.core.optional',\n    },\n    pillSelectorPlaceholder: {\n        defaultMessage: 'Add names or email addresses',\n        description: 'Placeholder text for the pill selector',\n        id: 'boxui.share.pillSelectorPlaceholder',\n    },\n    messageSelectorPlaceholder: {\n        defaultMessage: 'Add a message',\n        description: 'Placeholder text for message section',\n        id: 'boxui.share.messageSelectorPlaceholder',\n    },\n    invalidInputError: {\n        defaultMessage: 'Invalid Input',\n        description: 'Generic error message for a field is invalid',\n        id: 'boxui.validation.genericError',\n    },\n    minLengthError: {\n        defaultMessage: 'Input must be at least {min} characters',\n        description: 'Error message for when an input value is too short. {min} is the minimum length',\n        id: 'boxui.validation.tooShortError',\n    },\n    maxLengthError: {\n        defaultMessage: 'Input cannot exceed {max} characters',\n        description: 'Error message for when an input value is too long. {max} is the maximum length',\n        id: 'boxui.validation.tooLongError',\n    },\n    invalidEmailError: {\n        defaultMessage: 'Invalid Email Address',\n        description: 'Error message for when an invalid email is entered',\n        id: 'boxui.validation.emailError',\n    },\n    invalidURLError: {\n        defaultMessage: 'Invalid URL',\n        description: 'Error message for when an invalid URL is entered',\n        id: 'boxui.validation.URLError',\n    },\n    invalidUserError: {\n        defaultMessage: 'Invalid User',\n        description: 'Error message for when an invalid user is entered',\n        id: 'boxui.validation.invalidUserError',\n    },\n    requiredFieldError: {\n        defaultMessage: 'Required Field',\n        description: 'Error message for when a required field is missing',\n        id: 'boxui.validation.requiredError',\n    },\n});\n\nexport default messages;\n","// @flow\nconst BOX_BLUE = '#0061d5';\nconst SEESEE = '#ccc';\nconst RESIN_TAG_TARGET = 'data-resin-target';\n\nexport { BOX_BLUE, SEESEE, RESIN_TAG_TARGET };\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport uniqueId from 'lodash/uniqueId';\n\nimport './DatalistItem.scss';\n\ntype Props = {\n    /** Content to render in the list item */\n    children: React.Node,\n    /** CSS class for the list item */\n    className?: string,\n    /** Set by a parent datalist component to indicate when the item is highlighted (but not necessarily selected) */\n    isActive?: boolean,\n    /** Set by a parent datalist component to receive the updated active item ID */\n    setActiveItemID?: Function,\n};\n\nclass DatalistItem extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n\n        this.id = uniqueId('datalistitem');\n    }\n\n    componentDidMount() {\n        if (this.props.isActive) {\n            this.setActiveItemID();\n        }\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        if (this.props.isActive && !prevProps.isActive) {\n            this.setActiveItemID();\n        }\n    }\n\n    setActiveItemID = () => {\n        const { setActiveItemID } = this.props;\n        if (setActiveItemID) {\n            setActiveItemID(this.id);\n        }\n    };\n\n    id: string;\n\n    render() {\n        const { children, className, isActive, ...rest } = this.props;\n        const classes = classNames('datalist-item', { 'is-active': isActive }, className);\n        const itemProps = omit(rest, ['closeDropdown', 'setActiveItemID']);\n\n        // required aria props are added dynamically\n        /* eslint-disable jsx-a11y/role-has-required-aria-props */\n        return (\n            <li {...itemProps} className={classes} id={this.id} role=\"option\">\n                {children}\n            </li>\n        );\n        /* eslint-enable jsx-a11y/role-has-required-aria-props */\n    }\n}\n\nexport default DatalistItem;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './DatalistItem';\n","// @flow\nimport * as React from 'react';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport Pikaday from 'pikaday';\nimport range from 'lodash/range';\n\nimport { RESIN_TAG_TARGET } from '../../common/variables';\nimport IconAlert from '../../icons/general/IconAlert';\nimport IconCalendar from '../../icons/general/IconCalendar';\nimport IconClear from '../../icons/general/IconClear';\n\nimport Label from '../label';\nimport PlainButton from '../plain-button';\nimport Tooltip from '../tooltip';\n\nimport { convertDateToUnixMidnightTime } from '../../utils/datetime';\n\nimport './DatePicker.scss';\n\nconst messages = defineMessages({\n    previousMonth: {\n        defaultMessage: 'Previous Month',\n        description: 'Previous month button for a date picker calendar',\n        id: 'boxui.base.previousMonth',\n    },\n    nextMonth: {\n        defaultMessage: 'Next Month',\n        description: 'Next month button for a date picker calendar',\n        id: 'boxui.base.nextMonth',\n    },\n    iconAlertText: {\n        defaultMessage: 'Invalid Date',\n        description: 'Date entered is invalid',\n        id: 'boxui.datePicker.iconAlertText',\n    },\n    dateClearButton: {\n        defaultMessage: 'Clear Date',\n        description: 'Button for clearing date picker',\n        id: 'boxui.datePicker.dateClearButton',\n    },\n    chooseDate: {\n        defaultMessage: 'Choose Date',\n        description: 'Button for opening date picker',\n        id: 'boxui.datePicker.chooseDate',\n    },\n});\n\nconst TOGGLE_DELAY_MS = 300;\nconst ISO_STRING_DATE_FORMAT = 'isoString';\nconst UTC_TIME_DATE_FORMAT = 'utcTime';\nconst UNIX_TIME_DATE_FORMAT = 'unixTime';\nconst UTC_ISO_STRING_DATE_FORMAT = 'utcISOString';\nconst ENTER_KEY = 'Enter';\nconst ESCAPE_KEY = 'Escape';\nconst TAB_KEY = 'Tab';\n\nconst stub = () => {};\n\n/**\n * Converts date from being relative to GMT, to being relative to browser\n * timezone. E.g., Thu Jun 29 2017 00:00:00 GMT =>\n * Thu Jun 29 2017 00:00:00 GMT-0700 (PDT)\n * @param {Date} date UTC date\n * @returns {Date} date Local date\n */\nfunction convertUTCToLocal(date: Date) {\n    const dateString = date.toUTCString();\n    // Remove ` GMT` from the timestamp string\n    const dateStringWithoutTimeZone = dateString.slice(0, -4);\n    return new Date(dateStringWithoutTimeZone);\n}\n\nfunction getFormattedDate(date, format) {\n    if (!date) {\n        return '';\n    }\n\n    let utcDate;\n\n    switch (format) {\n        case ISO_STRING_DATE_FORMAT:\n            return date.toISOString();\n        case UTC_TIME_DATE_FORMAT:\n            return convertDateToUnixMidnightTime(date);\n        case UTC_ISO_STRING_DATE_FORMAT:\n            utcDate = new Date(convertDateToUnixMidnightTime(date));\n            return utcDate.toISOString();\n        default:\n            return date.getTime();\n    }\n}\n\ntype Props = {\n    /** Add a css class to the component */\n    className?: string,\n    /** The format of the date value for form submit */\n    dateFormat?: string,\n    /** Some optional description */\n    description?: React.Node,\n    /** The format of the date displayed in the input field */\n    displayFormat?: Object,\n    /** Error message */\n    error?: React.Node,\n    /** Position of error message tooltip */\n    errorTooltipPosition?:\n        | 'bottom-left'\n        | 'bottom-center'\n        | 'bottom-right'\n        | 'middle-left'\n        | 'middle-right'\n        | 'top-center'\n        | 'top-left'\n        | 'top-right',\n    /** Whether to show or hide the field's label */\n    hideLabel?: boolean,\n    /** Whether show or hide the 'Optional' label */\n    hideOptionalLabel?: boolean,\n    /** Props that will be applied on the input element */\n    inputProps?: Object,\n    intl: Object,\n    /** Is input clearable */\n    isClearable?: boolean,\n    /** Is input disabled */\n    isDisabled?: boolean,\n    /** Is input required */\n    isRequired?: boolean,\n    /** Is user allowed to manually input a value (WARNING: this doesn't work with internationalization) */\n    isTextInputAllowed?: boolean,\n    /** Label displayed for the text input */\n    label: React.Node,\n    /** The maximum date allowed to be selected */\n    maxDate?: Date,\n    /** The minimum date allowed to be selected */\n    minDate?: Date,\n    /** Name of the text input */\n    name?: string,\n    /** Called when input lose focus */\n    onBlur?: Function,\n    /** Called when input is changed, passed the selected Date */\n    onChange?: Function,\n    /** Called when input receives focus */\n    onFocus?: Function,\n    /** Placeholder for the text input */\n    placeholder?: string,\n    /** Resin tag */\n    resinTarget?: string,\n    /** Date to set the input */\n    value?: Date,\n    yearRange?: number | Array<number>,\n};\n\nclass DatePicker extends React.Component<Props> {\n    static defaultProps = {\n        className: '',\n        dateFormat: UNIX_TIME_DATE_FORMAT,\n        displayFormat: {},\n        error: '',\n        errorTooltipPosition: 'bottom-left',\n        inputProps: {},\n        isClearable: true,\n        isTextInputAllowed: false,\n        yearRange: 10,\n    };\n\n    componentDidMount() {\n        const { dateFormat, intl, maxDate, minDate, value, yearRange, isTextInputAllowed } = this.props;\n        const { formatDate, formatMessage } = intl;\n        const { nextMonth, previousMonth } = messages;\n        let defaultValue = value;\n        // When date format is utcTime, initial date needs to be converted from being relative to GMT to being\n        // relative to browser timezone\n        if (dateFormat === UTC_TIME_DATE_FORMAT && typeof value !== 'undefined') {\n            defaultValue = convertUTCToLocal(value);\n        }\n        // Make sure the DST detection algorithm in browsers is up-to-date\n        const year = new Date().getFullYear();\n\n        const i18n = {\n            previousMonth: formatMessage(previousMonth),\n            nextMonth: formatMessage(nextMonth),\n            months: range(12).map(month => formatDate(new Date(year, month, 15), { month: 'long' })),\n            // weekdays must start with Sunday, so array of dates below is May 1st-8th, 2016\n            weekdays: range(1, 8).map(date => formatDate(new Date(2016, 4, date), { weekday: 'long' })),\n            weekdaysShort: range(1, 8).map(date => formatDate(new Date(2016, 4, date), { weekday: 'narrow' })),\n        };\n\n        this.datePicker = new Pikaday({\n            blurFieldOnSelect: false, // Available in pikaday > 1.5.1\n            setDefaultDate: true,\n            defaultDate: defaultValue,\n            field: this.dateInputEl,\n            maxDate,\n            minDate,\n            position: 'bottom left',\n            i18n,\n            showDaysInNextAndPreviousMonths: true,\n            onSelect: this.onSelectHandler,\n            yearRange,\n            toString: this.formatDisplay,\n        });\n\n        if (isTextInputAllowed) {\n            this.updateDateInputValue(this.formatDisplay(defaultValue));\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps: Props) {\n        const { value: nextValue, minDate: nextMinDate, maxDate: nextMaxDate } = nextProps;\n        const { value, minDate, maxDate, isTextInputAllowed } = this.props;\n\n        // only set date when props change\n        if (\n            (nextValue && !value) ||\n            (!nextValue && value) ||\n            (nextValue && value && nextValue.getTime() !== value.getTime())\n        ) {\n            this.datePicker.setDate(nextValue);\n        }\n        // If text input is allowed the dateInputEl will act as an uncontrolled input and\n        // we need to set formatted value manually.\n        if (isTextInputAllowed) {\n            this.updateDateInputValue(this.formatDisplay(nextValue));\n        }\n        if (\n            (nextMinDate && !minDate) ||\n            (!nextMinDate && minDate) ||\n            (nextMinDate && minDate && nextMinDate.getTime() !== minDate.getTime())\n        ) {\n            this.datePicker.setMinDate(nextMinDate);\n\n            if (this.datePicker.getDate() < nextMinDate) {\n                this.datePicker.gotoDate(nextMinDate);\n            }\n        }\n        if (\n            (nextMaxDate && !maxDate) ||\n            (!nextMaxDate && maxDate) ||\n            (nextMaxDate && maxDate && nextMaxDate.getTime() !== maxDate.getTime())\n        ) {\n            this.datePicker.setMaxDate(nextMaxDate);\n\n            if (this.datePicker.getDate() > nextMaxDate) {\n                this.datePicker.gotoDate(nextMaxDate);\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        this.datePicker.destroy();\n    }\n\n    onSelectHandler = (date: ?Date) => {\n        const { onChange } = this.props;\n        if (onChange) {\n            const formattedDate = this.formatValue(date);\n            onChange(date, formattedDate);\n        }\n    };\n\n    updateDateInputValue(value: string) {\n        if (this.dateInputEl) {\n            this.dateInputEl.value = value;\n        }\n    }\n\n    dateInputEl: ?HTMLInputElement;\n\n    datePicker: Pikaday;\n\n    datePickerButtonEl: ?HTMLButtonElement;\n\n    // Used to prevent bad sequences of hide/show when toggling the datepicker button\n    shouldStayClosed = false;\n\n    focusDatePicker = () => {\n        // By default, this will open the datepicker too\n        if (this.dateInputEl) {\n            this.dateInputEl.focus();\n        }\n    };\n\n    handleInputKeyDown = (event: SyntheticKeyboardEvent<HTMLInputElement>) => {\n        const { isTextInputAllowed } = this.props;\n\n        if (this.datePicker.isVisible()) {\n            event.stopPropagation();\n        }\n\n        // Stops up/down arrow & spacebar from moving page scroll position since pikaday does not preventDefault correctly\n        if (!isTextInputAllowed && event.key !== TAB_KEY) {\n            event.preventDefault();\n        }\n\n        if (isTextInputAllowed && event.key === ENTER_KEY) {\n            event.preventDefault();\n        }\n\n        if (event.key === ENTER_KEY || event.key === ESCAPE_KEY || event.key === ' ') {\n            // Since pikaday auto-selects when you move the select box, enter/space don't do anything but close the date picker\n            if (this.datePicker.isVisible()) {\n                this.datePicker.hide();\n            }\n        }\n    };\n\n    handleInputBlur = (event: SyntheticFocusEvent<HTMLInputElement>) => {\n        const { onBlur, isTextInputAllowed } = this.props;\n\n        const nextActiveElement = event.relatedTarget || document.activeElement;\n\n        // This is mostly here to cancel out the pikaday hide() on blur\n        if (this.datePicker.isVisible() && nextActiveElement && nextActiveElement === this.datePickerButtonEl) {\n            this.shouldStayClosed = true;\n            setTimeout(() => {\n                this.shouldStayClosed = false;\n            }, TOGGLE_DELAY_MS);\n        }\n\n        if (onBlur) {\n            onBlur(event);\n        }\n\n        // Since we Fire parent onChange event if isTextInputAllowed\n        // fire it on blur if the user typed a correct date format\n        let inputDate: ?Date = null;\n\n        if (this.dateInputEl) {\n            inputDate = new Date(this.dateInputEl.value);\n        }\n\n        if (isTextInputAllowed && inputDate && inputDate.getDate()) {\n            this.onSelectHandler(inputDate);\n        }\n    };\n\n    handleButtonClick = (event: SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n\n        if (!this.shouldStayClosed) {\n            this.focusDatePicker();\n        }\n    };\n\n    formatDisplay = (date?: Date): string => {\n        const { displayFormat, intl } = this.props;\n        return date ? intl.formatDate(date, displayFormat) : '';\n    };\n\n    formatValue = (date: ?Date) => {\n        const { dateFormat } = this.props;\n        return getFormattedDate(date, dateFormat);\n    };\n\n    clearDate = (event: SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault(); // so datepicker doesn't open after clearing\n        this.datePicker.setDate(null);\n        this.onSelectHandler(null);\n    };\n\n    render() {\n        const {\n            className,\n            description,\n            error,\n            errorTooltipPosition,\n            hideLabel,\n            hideOptionalLabel,\n            inputProps,\n            intl,\n            isClearable,\n            isDisabled,\n            isRequired,\n            isTextInputAllowed,\n            label,\n            name,\n            onFocus,\n            placeholder,\n            resinTarget,\n            value,\n        } = this.props;\n\n        const { formatMessage } = intl;\n        const classes = classNames(className, 'date-picker-wrapper', {\n            'show-clear-btn': !!value,\n            'show-error': !!error,\n        });\n\n        const resinTargetAttr = resinTarget ? { [RESIN_TAG_TARGET]: resinTarget } : {};\n\n        const valueAttr = isTextInputAllowed\n            ? { defaultValue: this.formatDisplay(value) }\n            : { value: this.formatDisplay(value) };\n\n        const onChangeAttr = isTextInputAllowed\n            ? {}\n            : {\n                  onChange: stub,\n              }; /* fixes proptype error about readonly field (not adding readonly so constraint validation works) */\n\n        return (\n            <div className={classes}>\n                <span className=\"date-picker-icon-holder\">\n                    <Label hideLabel={hideLabel} showOptionalText={!hideOptionalLabel && !isRequired} text={label}>\n                        {!!description && <i className=\"date-picker-description\">{description}</i>}\n                        <Tooltip\n                            className=\"date-picker-error-tooltip\"\n                            isShown={!!error}\n                            position={errorTooltipPosition}\n                            text={error || ''}\n                            theme=\"error\"\n                        >\n                            <input\n                                ref={ref => {\n                                    this.dateInputEl = ref;\n                                }}\n                                className=\"date-picker-input\"\n                                disabled={isDisabled}\n                                onBlur={this.handleInputBlur}\n                                placeholder={placeholder || formatMessage(messages.chooseDate)}\n                                required={isRequired}\n                                type=\"text\"\n                                {...onChangeAttr}\n                                onFocus={onFocus}\n                                onKeyDown={this.handleInputKeyDown}\n                                {...resinTargetAttr}\n                                {...inputProps}\n                                {...valueAttr}\n                            />\n                        </Tooltip>\n                    </Label>\n                    {isClearable && !!value && !isDisabled ? (\n                        <PlainButton\n                            aria-label={formatMessage(messages.dateClearButton)}\n                            className=\"date-picker-clear-btn\"\n                            onClick={this.clearDate}\n                            type=\"button\"\n                        >\n                            <IconClear height={12} width={12} />\n                        </PlainButton>\n                    ) : null}\n                    {error ? (\n                        <IconAlert\n                            className=\"date-picker-icon-alert\"\n                            height={13}\n                            title={<FormattedMessage {...messages.iconAlertText} />}\n                            width={13}\n                        />\n                    ) : null}\n                    <PlainButton\n                        aria-label={formatMessage(messages.chooseDate)}\n                        className=\"date-picker-open-btn\"\n                        disabled={isDisabled}\n                        getDOMRef={ref => {\n                            this.datePickerButtonEl = ref;\n                        }}\n                        onClick={this.handleButtonClick}\n                        type=\"button\"\n                    >\n                        <IconCalendar height={17} width={16} />\n                    </PlainButton>\n                    <input\n                        className=\"date-picker-unix-time-input\"\n                        name={name}\n                        readOnly\n                        type=\"hidden\"\n                        value={this.formatValue(value)}\n                    />\n                </span>\n            </div>\n        );\n    }\n}\n\nexport { DatePicker as DatePickerBase };\nexport default injectIntl(DatePicker);\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport TetherComponent from 'react-tether';\nimport uniqueId from 'lodash/uniqueId';\n\nimport './Flyout.scss';\n\nconst BOTTOM_CENTER = 'bottom-center';\nconst BOTTOM_LEFT = 'bottom-left';\nconst BOTTOM_RIGHT = 'bottom-right';\nconst MIDDLE_LEFT = 'middle-left';\nconst MIDDLE_RIGHT = 'middle-right';\nconst TOP_CENTER = 'top-center';\nconst TOP_LEFT = 'top-left';\nconst TOP_RIGHT = 'top-right';\n\nconst positions = {\n    [BOTTOM_CENTER]: {\n        attachment: 'top center',\n        targetAttachment: 'bottom center',\n    },\n    [BOTTOM_LEFT]: {\n        attachment: 'top right',\n        targetAttachment: 'bottom right',\n    },\n    [BOTTOM_RIGHT]: {\n        attachment: 'top left',\n        targetAttachment: 'bottom left',\n    },\n    [MIDDLE_LEFT]: {\n        attachment: 'middle right',\n        targetAttachment: 'middle left',\n    },\n    [MIDDLE_RIGHT]: {\n        attachment: 'middle left',\n        targetAttachment: 'middle right',\n    },\n    [TOP_CENTER]: {\n        attachment: 'bottom center',\n        targetAttachment: 'top center',\n    },\n    [TOP_LEFT]: {\n        attachment: 'bottom right',\n        targetAttachment: 'top right',\n    },\n    [TOP_RIGHT]: {\n        attachment: 'bottom left',\n        targetAttachment: 'top left',\n    },\n};\n\n/**\n * Checks if there is a clickable ancestor or self\n * @param {Node} rootNode The base node we should stop at\n * @param {Node} targetNode The target node of the event\n * @returns {boolean}\n */\nconst hasClickableAncestor = (rootNode, targetNode) => {\n    // Check if the element or any of the ancestors are click-able (stopping at the component boundary)\n    let currentNode = targetNode;\n    while (currentNode && currentNode instanceof Node && currentNode.parentNode && currentNode !== rootNode) {\n        const nodeName = currentNode.nodeName.toUpperCase();\n        if (nodeName === 'A' || nodeName === 'BUTTON') {\n            return true;\n        }\n        currentNode = currentNode.parentNode;\n    }\n    return false;\n};\n\n/**\n * Checks if the target element is inside an element with the given CSS class.\n * @param {HTMLElement} targetEl The target element\n * @param {string} className A CSS class on the element to check for\n */\nconst hasClassAncestor = (targetEl, className) => {\n    let el = targetEl;\n    while (el && el instanceof HTMLElement) {\n        if (el.classList.contains(className)) {\n            return true;\n        }\n        el = el.parentNode;\n    }\n    return false;\n};\n\nexport type FlyoutProps = {\n    children: React.Node,\n    /**\n     * Set className to the overlay wrapper\n     */\n    className?: string,\n    /**\n     * If set to true, closes the overlay on clicking buttons/links inside\n     * of it\n     */\n    closeOnClick?: boolean,\n    /**\n     * If set to true, closes the overlay on clicking outside of it\n     */\n    closeOnClickOutside?: boolean,\n    /**\n     * Function that will interrogate the click event to determine whether or not to close the overlay if closeOnClick is enabled\n     */\n    closeOnClickPredicate?: Function,\n    /**\n     * If set to true, closes the overlay when window loses focus\n     */\n    closeOnWindowBlur?: boolean,\n    /**\n     * Sets tether constrain to scrollParent\n     */\n    constrainToScrollParent?: boolean,\n    /**\n     * Sets tether constrain to window\n     */\n    constrainToWindow?: boolean,\n    /**\n     * Whether overlay should be visible by default\n     */\n    isVisibleByDefault: boolean,\n    /**\n     * Will fire this callback when the flyout should open\n     */\n    offset?: string,\n    /**\n     * Will fire this callback when the flyout should close\n     */\n    onClose?: Function,\n    /**\n     * Adjusts placement of the overlay (SEE http://tether.io/#options)\n     */\n    onOpen?: Function,\n    /**\n     * Whether overlay should open on hover\n     */\n    openOnHover?: boolean,\n    /**\n     * Time in milliseconds that the button should wait before opening and closing the flyout\n     */\n    openOnHoverDelayTimeout?: number,\n    /** An array of CSS classes for portaled elements in the overlay, used to check whether a click is inside the overlay */\n    portaledClasses: Array<string>,\n    /**\n     * Position of the overlay\n     */\n    position:\n        | 'bottom-center'\n        | 'bottom-left'\n        | 'bottom-right'\n        | 'middle-left'\n        | 'middle-right'\n        | 'top-center'\n        | 'top-left'\n        | 'top-right',\n    /**\n     * Prop whether to focus first focusable element or not\n     */\n    shouldDefaultFocus?: boolean,\n};\n\ntype State = {\n    isButtonClicked: boolean,\n    isVisible: boolean,\n};\n\ntype Props = FlyoutProps;\n\nclass Flyout extends React.Component<Props, State> {\n    static defaultProps = {\n        className: '',\n        closeOnClick: true,\n        closeOnClickOutside: true,\n        closeOnWindowBlur: false,\n        constrainToScrollParent: true,\n        constrainToWindow: false,\n        isVisibleByDefault: false,\n        openOnHover: false,\n        openOnHoverDelayTimeout: 300,\n        portaledClasses: [],\n        position: BOTTOM_RIGHT,\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        this.overlayID = uniqueId('overlay');\n        this.overlayButtonID = uniqueId('flyoutbutton');\n        this.state = {\n            isVisible: props.isVisibleByDefault,\n            isButtonClicked: false,\n        };\n    }\n\n    componentDidUpdate(prevProps: Props, prevState: State) {\n        if (!prevState.isVisible && this.state.isVisible) {\n            const { closeOnClickOutside, closeOnWindowBlur } = this.props;\n            // When overlay is being opened\n            if (closeOnClickOutside) {\n                document.addEventListener('click', this.handleDocumentClickOrWindowBlur, true);\n                document.addEventListener('contextmenu', this.handleDocumentClickOrWindowBlur, true);\n            }\n            if (closeOnWindowBlur) {\n                window.addEventListener('blur', this.handleDocumentClickOrWindowBlur, true);\n            }\n        } else if (prevState.isVisible && !this.state.isVisible) {\n            // When overlay is being closed\n            document.removeEventListener('contextmenu', this.handleDocumentClickOrWindowBlur, true);\n            document.removeEventListener('click', this.handleDocumentClickOrWindowBlur, true);\n            window.removeEventListener('blur', this.handleDocumentClickOrWindowBlur, true);\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.state.isVisible) {\n            // Clean-up global click handlers\n            document.removeEventListener('contextmenu', this.handleDocumentClickOrWindowBlur, true);\n            document.removeEventListener('click', this.handleDocumentClickOrWindowBlur, true);\n            window.removeEventListener('blur', this.handleDocumentClickOrWindowBlur, true);\n        }\n\n        if (this.props.openOnHover && this.hoverDelay) {\n            clearTimeout(this.hoverDelay);\n        }\n    }\n\n    overlayButtonID: string;\n\n    overlayID: string;\n\n    handleOverlayClick = (event: SyntheticEvent<>) => {\n        const overlayNode = document.getElementById(this.overlayID);\n        const { closeOnClick, closeOnClickPredicate } = this.props;\n        if (!closeOnClick || !hasClickableAncestor(overlayNode, event.target)) {\n            return;\n        }\n        if (closeOnClickPredicate && !closeOnClickPredicate(event)) {\n            return;\n        }\n\n        this.handleOverlayClose();\n    };\n\n    handleButtonClick = (event: SyntheticUIEvent<>) => {\n        const { isVisible } = this.state;\n        if (isVisible) {\n            this.closeOverlay();\n        } else {\n            this.openOverlay();\n        }\n\n        // If button was clicked, the detail field should hold number of clicks.\n        // If number is zero, the event was synthesized.\n        // https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail\n        const isButtonClicked = event.detail > 0;\n\n        this.setState({ isButtonClicked });\n\n        event.preventDefault();\n    };\n\n    hoverDelay: TimeoutID | void;\n\n    handleButtonHover = () => {\n        const { openOnHover, openOnHoverDelayTimeout } = this.props;\n        if (openOnHover) {\n            clearTimeout(this.hoverDelay);\n\n            this.hoverDelay = setTimeout(() => {\n                this.openOverlay();\n            }, openOnHoverDelayTimeout);\n        }\n    };\n\n    handleButtonHoverLeave = () => {\n        const { openOnHover, openOnHoverDelayTimeout } = this.props;\n        if (openOnHover) {\n            clearTimeout(this.hoverDelay);\n\n            this.hoverDelay = setTimeout(() => {\n                this.closeOverlay();\n            }, openOnHoverDelayTimeout);\n        }\n    };\n\n    openOverlay = () => {\n        this.setState({\n            isVisible: true,\n        });\n\n        const { onOpen } = this.props;\n        if (onOpen) {\n            onOpen();\n        }\n    };\n\n    closeOverlay = () => {\n        this.setState({\n            isVisible: false,\n        });\n\n        const { onClose } = this.props;\n        if (onClose) {\n            onClose();\n        }\n    };\n\n    focusButton = () => {\n        const buttonEl = document.getElementById(this.overlayButtonID);\n        if (buttonEl) {\n            buttonEl.focus();\n        }\n    };\n\n    handleOverlayClose = () => {\n        this.focusButton();\n        this.closeOverlay();\n    };\n\n    handleDocumentClickOrWindowBlur = (event: MouseEvent | FocusEvent) => {\n        const { portaledClasses, closeOnClickOutside, closeOnWindowBlur } = this.props;\n        const { isVisible } = this.state;\n\n        if (!isVisible || !(closeOnClickOutside || closeOnWindowBlur)) {\n            return;\n        }\n\n        const overlayNode = document.getElementById(this.overlayID);\n        const buttonNode = document.getElementById(this.overlayButtonID);\n\n        const isInsideToggleButton =\n            (buttonNode && event.target instanceof Node && buttonNode.contains(event.target)) ||\n            buttonNode === event.target;\n        const isInsideOverlay =\n            (overlayNode && event.target instanceof Node && overlayNode.contains(event.target)) ||\n            overlayNode === event.target;\n        const isInside = isInsideToggleButton || isInsideOverlay;\n\n        if (isInside || portaledClasses.some(className => hasClassAncestor(event.target, className))) {\n            return;\n        }\n\n        // Only close overlay when the click is outside of the flyout or window loses focus\n        this.closeOverlay();\n    };\n\n    render() {\n        const {\n            children,\n            className = '',\n            constrainToScrollParent,\n            constrainToWindow,\n            offset,\n            openOnHover,\n            position,\n            shouldDefaultFocus,\n        } = this.props;\n        const { isButtonClicked, isVisible } = this.state;\n        const elements = React.Children.toArray(children);\n        const tetherPosition = positions[position];\n\n        if (elements.length !== 2) {\n            throw new Error('Flyout must have exactly two children: A button component and a <Overlay>');\n        }\n\n        const overlayButton = elements[0];\n        const overlayContent = elements[1];\n\n        const overlayButtonProps: Object = {\n            id: this.overlayButtonID,\n            key: this.overlayButtonID,\n            role: 'button',\n            onClick: this.handleButtonClick,\n            onMouseEnter: this.handleButtonHover,\n            onMouseLeave: this.handleButtonHoverLeave,\n            'aria-haspopup': 'true',\n            'aria-expanded': isVisible ? 'true' : 'false',\n        };\n\n        if (isVisible) {\n            overlayButtonProps['aria-controls'] = this.overlayID;\n        }\n\n        const overlayProps = {\n            id: this.overlayID,\n            key: this.overlayID,\n            role: 'dialog',\n            onClick: this.handleOverlayClick,\n            onClose: this.handleOverlayClose,\n            onMouseEnter: this.handleButtonHover,\n            onMouseLeave: this.handleButtonHoverLeave,\n            shouldDefaultFocus: shouldDefaultFocus || (!isButtonClicked && !openOnHover),\n            'aria-labelledby': this.overlayButtonID,\n        };\n\n        const constraints = [];\n\n        if (constrainToScrollParent) {\n            constraints.push({\n                to: 'scrollParent',\n                attachment: 'together',\n            });\n        }\n\n        if (constrainToWindow) {\n            constraints.push({\n                to: 'window',\n                attachment: 'together',\n            });\n        }\n\n        const tetherProps: Object = {\n            classPrefix: 'flyout-overlay',\n            attachment: tetherPosition.attachment,\n            targetAttachment: tetherPosition.targetAttachment,\n            enabled: isVisible,\n            classes: {\n                element: `flyout-overlay ${className}`,\n            },\n            constraints,\n        };\n\n        if (offset) {\n            tetherProps.offset = offset;\n        } else {\n            switch (position) {\n                case BOTTOM_CENTER:\n                case BOTTOM_LEFT:\n                case BOTTOM_RIGHT:\n                    tetherProps.offset = '-10px 0';\n                    break;\n                case TOP_CENTER:\n                case TOP_LEFT:\n                case TOP_RIGHT:\n                    tetherProps.offset = '10px 0';\n                    break;\n                case MIDDLE_LEFT:\n                    tetherProps.offset = '0 10px';\n                    break;\n                case MIDDLE_RIGHT:\n                    tetherProps.offset = '0 -10px';\n                    break;\n                default:\n                // no default\n            }\n        }\n\n        return (\n            <TetherComponent {...tetherProps}>\n                {React.cloneElement(overlayButton, overlayButtonProps)}\n                {isVisible ? React.cloneElement(overlayContent, overlayProps) : null}\n            </TetherComponent>\n        );\n    }\n}\n\nexport default Flyout;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport omit from 'lodash/omit';\n\nimport FocusTrap from '../focus-trap';\n\nexport type Props = {\n    /** Overlay contents */\n    children: React.Node,\n    /** Component class names */\n    className?: string,\n    onClick?: Function,\n    onClose?: Function,\n    shouldDefaultFocus?: boolean,\n};\n\nclass Overlay extends React.Component<Props> {\n    closeOverlay = () => {\n        const { onClose } = this.props;\n        if (!onClose) {\n            return;\n        }\n        setTimeout(() => onClose(), 0);\n    };\n\n    handleOverlayKeyDown = (event: SyntheticKeyboardEvent<>) => {\n        if (event.key !== 'Escape') {\n            return;\n        }\n        event.stopPropagation();\n        event.preventDefault();\n        this.closeOverlay();\n    };\n\n    render() {\n        const { children, className, ...rest } = this.props;\n        const overlayProps = omit(rest, ['onClose']);\n        overlayProps.className = className;\n        overlayProps.handleOverlayKeyDown = this.handleOverlayKeyDown;\n        overlayProps.tabIndex = 0;\n\n        return (\n            <FocusTrap {...overlayProps}>\n                <div className=\"overlay\">{children}</div>\n            </FocusTrap>\n        );\n    }\n}\n\nexport default Overlay;\n","// @flow\nexport { default as Flyout } from './Flyout';\nexport { default as Overlay } from './Overlay';\n","// @flow\nimport * as React from 'react';\nimport tabbable from 'tabbable';\nimport classNames from 'classnames';\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n    /** Function to get the ref to the focus trap wrapper element */\n    getRef?: Function,\n    /** Function to handle keyboard input passed in from parent component. e.g. close overlay on Escape */\n    handleOverlayKeyDown?: Function,\n    shouldDefaultFocus?: boolean,\n    shouldOutlineFocus?: boolean,\n};\n\nclass FocusTrap extends React.Component<Props> {\n    componentDidMount() {\n        if (this.props.shouldDefaultFocus) {\n            setTimeout(() => {\n                this.previousFocusEl = document.activeElement;\n                this.focusFirstElement();\n            }, 0);\n        } else {\n            setTimeout(() => {\n                if (this.el) {\n                    this.el.focus();\n                }\n            }, 0);\n        }\n    }\n\n    componentWillUnmount() {\n        setTimeout(() => {\n            if (this.previousFocusEl) {\n                this.previousFocusEl.focus();\n            }\n        }, 0);\n    }\n\n    el: ?HTMLDivElement;\n\n    previousFocusEl: ?HTMLElement;\n\n    trapEl: ?HTMLElement;\n\n    /**\n     * Focus the first tabbable element\n     */\n    focusFirstElement = () => {\n        if (!this.el) {\n            return;\n        }\n\n        const tabbableEls = tabbable(this.el);\n\n        // There are three trap-related elements, including first element.\n        // If there are 3 or fewer tabbable elements, that means there are no\n        // tabbable children, so focus on the trap element instead.\n        if (tabbableEls.length > 3) {\n            tabbableEls[1].focus();\n        } else if (this.trapEl) {\n            this.trapEl.focus();\n        }\n    };\n\n    /**\n     * Focus the last tabbable element\n     */\n    focusLastElement = () => {\n        if (!this.el) {\n            return;\n        }\n\n        const tabbableEls = tabbable(this.el);\n\n        // There are three trap-related elements, including the last two elements.\n        // If there are 3 or fewer tabbable elements, that means there are no\n        // tabbable children, so focus on the trap element instead.\n        if (tabbableEls.length > 3) {\n            tabbableEls[tabbableEls.length - 3].focus();\n        } else if (this.trapEl) {\n            this.trapEl.focus();\n        }\n    };\n\n    handleElKeyDown = (event: SyntheticKeyboardEvent<HTMLElement>) => {\n        const { handleOverlayKeyDown } = this.props;\n        if (this.el === document.activeElement && event.key === 'Tab') {\n            this.focusFirstElement();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n\n        if (handleOverlayKeyDown) {\n            handleOverlayKeyDown(event);\n        }\n    };\n\n    handleTrapElKeyDown = (event: SyntheticKeyboardEvent<HTMLElement>) => {\n        if (event.key !== 'Tab') {\n            return;\n        }\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    render() {\n        const {\n            children,\n            className,\n            getRef,\n            handleOverlayKeyDown,\n            shouldDefaultFocus,\n            shouldOutlineFocus,\n            ...rest\n        } = this.props;\n        return (\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n            <div\n                ref={ref => {\n                    this.el = ref;\n                    if (getRef) {\n                        getRef(ref);\n                    }\n                }}\n                className={classNames(className, {\n                    'should-outline-focus': shouldOutlineFocus,\n                })}\n                onKeyDown={this.handleElKeyDown}\n                {...rest}\n            >\n                {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n                <i aria-hidden onFocus={this.focusLastElement} tabIndex=\"0\" />\n                {children}\n                {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n                <i aria-hidden onFocus={this.focusFirstElement} tabIndex=\"0\" />\n                {/* in case children doesn't contain any focusable elements, focus on trap */}\n                <i\n                    ref={ref => {\n                        this.trapEl = ref;\n                    }}\n                    aria-hidden\n                    onKeyDown={this.handleTrapElKeyDown}\n                    // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n                    tabIndex=\"0\"\n                />\n            </div>\n        );\n    }\n}\n\nexport default FocusTrap;\n","// @flow\nexport { default } from './FocusTrap';\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport serialize from 'form-serialize';\n\nfunction getFormValidityState(form) {\n    // Turn the form.elements HTMLCollection into Array before reducing\n    return [].slice.call(form.elements).reduce((validityObj, inputEl) => {\n        // Only serialize inputs that have a name defined\n        if (inputEl.name && !inputEl.validity.valid) {\n            const validityState = inputEl.validity;\n\n            if (inputEl.validity.customError) {\n                // If the input is displaying a custom error,\n                // we expose the errorCode stored in the validationMessage\n                validityState.customErrorCode = inputEl.validationMessage;\n            }\n\n            validityObj[inputEl.name] = {\n                validityState,\n            };\n            return validityObj;\n        }\n        return validityObj;\n    }, {});\n}\n\nclass Form extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n        /** Called when an input in the form changes */\n        onChange: PropTypes.func,\n        /** Called when a valid submit is made */\n        onValidSubmit: PropTypes.func.isRequired,\n        /** Called when an invalid submit is made */\n        onInvalidSubmit: PropTypes.func,\n        /** An object mapping input names to error messages */\n        formValidityState: PropTypes.object, // eslint-disable-line react/no-unused-prop-types\n    };\n\n    static childContextTypes = {\n        form: PropTypes.shape({\n            registerInput: PropTypes.func.isRequired,\n            unregisterInput: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            registeredInputs: {},\n        };\n    }\n\n    getChildContext() {\n        return {\n            form: {\n                registerInput: this.registerInput.bind(this),\n                unregisterInput: this.unregisterInput.bind(this),\n            },\n        };\n    }\n\n    componentDidUpdate({ formValidityState: prevFormValidityState }) {\n        const { formValidityState } = this.props;\n        const { registeredInputs } = this.state;\n\n        if (formValidityState !== prevFormValidityState) {\n            Object.keys(formValidityState).forEach(key => {\n                if (registeredInputs[key]) {\n                    registeredInputs[key](formValidityState[key]);\n                }\n            });\n        }\n    }\n\n    onChange = ({ currentTarget }) => {\n        if (this.props.onChange) {\n            const formData = serialize(currentTarget, {\n                hash: true,\n                empty: true,\n            });\n            this.props.onChange(formData);\n        }\n    };\n\n    onSubmit = event => {\n        const form = event.target;\n        event.preventDefault();\n        const isValid = form.checkValidity();\n        const { onInvalidSubmit, onValidSubmit } = this.props;\n        const { registeredInputs } = this.state;\n\n        if (isValid) {\n            const formData = serialize(form, { hash: true, empty: true });\n            onValidSubmit(formData);\n        } else {\n            const formValidityState = getFormValidityState(form);\n\n            // Push form validity state to inputs so errors are shown on submit\n            Object.keys(formValidityState).forEach(\n                key => registeredInputs[key] && registeredInputs[key](formValidityState[key].validityState),\n            );\n\n            if (onInvalidSubmit) {\n                onInvalidSubmit(formValidityState);\n            }\n        }\n    };\n\n    registerInput = (name, setValidityStateHandler) => {\n        const { registeredInputs } = this.state;\n\n        if (registeredInputs[name]) {\n            throw new Error(`Input '${name}' is already registered.`);\n        }\n\n        const nextState = this.state;\n        nextState.registeredInputs[name] = setValidityStateHandler;\n        this.setState(nextState);\n    };\n\n    unregisterInput = name => {\n        const nextState = this.state;\n        delete nextState.registeredInputs[name];\n        this.setState(nextState);\n    };\n\n    render() {\n        const { children } = this.props;\n        return (\n            <form noValidate onChange={this.onChange} onSubmit={this.onSubmit}>\n                {children}\n            </form>\n        );\n    }\n}\n\nexport default Form;\n","// @flow\nimport * as React from 'react';\n\nimport LabelPrimitive from './LabelPrimitive';\n\nconst HIDDEN_CLASS_NAME = 'accessibility-hidden';\n\ntype Props = {\n    children: React.Node,\n    labelContent: React.Node,\n};\n\nconst HiddenLabel = ({ children, labelContent }: Props) => (\n    <LabelPrimitive className={HIDDEN_CLASS_NAME} labelContent={labelContent}>\n        {children}\n    </LabelPrimitive>\n);\n\nexport default HiddenLabel;\n","// @flow\nimport * as React from 'react';\n\nimport IconInfo from '../../icons/general/IconInfo';\nimport Tooltip from '../tooltip';\n\ntype Props = {\n    className?: string,\n    iconProps?: Object,\n    tooltipText: React.Node,\n};\n\nconst InfoIconWithTooltip = ({ className = '', iconProps, tooltipText }: Props) => (\n    <span key=\"infoIcon\" className={`${className} tooltip-icon-container`}>\n        <Tooltip position=\"top-center\" text={tooltipText}>\n            <span className=\"info-icon-container\">\n                <IconInfo height={16} width={16} {...iconProps} />\n            </span>\n        </Tooltip>\n    </span>\n);\n\nexport default InfoIconWithTooltip;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport commonMessages from '../../common/messages';\n\nimport InfoIconWithTooltip from './InfoIconWithTooltip';\nimport StandardLabel from './StandardLabel';\nimport HiddenLabel from './HiddenLabel';\n\nimport './Label.scss';\n\nconst OptionalFormattedMessage = () => (\n    <span className=\"label-optional\">\n        (<FormattedMessage {...commonMessages.optional} />)\n    </span>\n);\n\ntype Props = {\n    children: React.Node,\n    /** Whether the text of the label should be accessibly hidden */\n    hideLabel?: boolean,\n    infoIconProps?: Object,\n    /** Tooltip text for the info icon */\n    infoTooltip?: React.Node,\n    /** Whether to show the `(Optional)` text next to the label for an optional field */\n    showOptionalText?: boolean,\n    /** The label text */\n    text: React.Node,\n    /** Tooltip text for the label */\n    tooltip?: React.Node,\n};\n\nconst Label = ({ text, tooltip, infoTooltip, infoIconProps, showOptionalText, hideLabel, children }: Props) => {\n    const labelContent = [\n        <span key=\"labelText\">{text}</span>,\n        showOptionalText ? <OptionalFormattedMessage key=\"optionalMessage\" /> : null,\n    ];\n\n    if (infoTooltip) {\n        labelContent.push(\n            <InfoIconWithTooltip\n                key=\"infoTooltip\"\n                iconProps={{ className: 'tooltip-icon', ...infoIconProps }}\n                tooltipText={infoTooltip}\n            />,\n        );\n    }\n\n    if (hideLabel) {\n        return <HiddenLabel labelContent={labelContent}>{children}</HiddenLabel>;\n    }\n\n    return (\n        <StandardLabel labelContent={labelContent} tooltip={tooltip}>\n            {children}\n        </StandardLabel>\n    );\n};\n\nexport default Label;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n    labelContent: React.Node,\n};\n\nconst LabelPrimitive = ({ children, className, labelContent, ...rest }: Props) => (\n    // eslint-disable-next-line jsx-a11y/label-has-for\n    <label>\n        <span className={classNames('label', className)} {...rest}>\n            {labelContent}\n        </span>\n        {children}\n    </label>\n);\n\nexport default LabelPrimitive;\n","// @flow\nimport * as React from 'react';\n\nimport Tooltip from '../tooltip';\nimport LabelPrimitive from './LabelPrimitive';\n\ntype Props = {\n    children: React.Node,\n    labelContent: React.Node,\n    tooltip?: React.Node,\n};\n\nconst StandardLabel = ({ children, labelContent, tooltip }: Props) => {\n    const label = <LabelPrimitive labelContent={labelContent}>{children}</LabelPrimitive>;\n\n    return tooltip ? (\n        <Tooltip position=\"top-right\" text={tooltip}>\n            {label}\n        </Tooltip>\n    ) : (\n        label\n    );\n};\n\nexport default StandardLabel;\n","// @flow\nexport { default } from './Label';\n","// @flow\nimport * as React from 'react';\n\nimport LinkBase from './LinkBase';\n\ntype Props = {\n    children: React.Node,\n    className: string,\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass Link extends React.Component<Props> {\n    static defaultProps = {\n        className: '',\n    };\n\n    render() {\n        const { className, ...rest } = this.props;\n\n        return <LinkBase className={`link ${className}`} {...rest} />;\n    }\n}\n\nexport default Link;\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n    children: React.Node,\n    component?: React.ElementType,\n    href?: string,\n    linkRef?: Function,\n    refProp?: string,\n    rel?: string,\n    target?: string,\n};\n\nconst LinkBase = ({ children, href = '#', linkRef, target, rel, component, refProp, ...rest }: Props) => {\n    // Automatically append rel=\"noopener\" for external links\n    // (security fix) if no `rel` was passed\n    const linkRel = target === '_blank' && !rel ? 'noopener' : rel;\n\n    const LinkComponent = component || 'a';\n\n    const ref = { [refProp || 'ref']: linkRef };\n\n    return (\n        <LinkComponent href={href} rel={linkRel} target={target} {...ref} {...rest}>\n            {children}\n        </LinkComponent>\n    );\n};\n\nexport default LinkBase;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport throttle from 'lodash/throttle';\n\nimport './ScrollWrapper.scss';\n\ntype Props = {\n    /** Contents for this element */\n    children: React.Node,\n    /** Optional class name(s) to pass thru to the component */\n    className?: string,\n    /** Optional function to get the scrollRef in parent components */\n    scrollRefFn: (?HTMLElement) => void,\n    /** Optional prop to set the shadow size, like background-size ('cover' or 'contain') */\n    shadowSize: 'cover' | 'contain',\n};\n\ntype State = {\n    shouldShowBottomScrollShadow: boolean,\n    shouldShowTopScrollShadow: boolean,\n};\n\nclass ScrollWrapper extends React.Component<Props, State> {\n    static defaultProps = {\n        scrollRefFn: noop,\n        shadowSize: 'cover',\n    };\n\n    state = {\n        shouldShowTopScrollShadow: false,\n        shouldShowBottomScrollShadow: false,\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        this.observer = new MutationObserver(this.throttledOnContentScroll);\n    }\n\n    componentDidMount = () => {\n        const newState = this.getScrollShadowState();\n        this.setState(newState);\n\n        if (this.scrollRef) {\n            this.scrollRef.addEventListener('transitionend', this.throttledOnContentScroll);\n\n            // Apparently, flow only allows for one truthy check per command, so I have to either:\n            // 1) duplicate this check per call, or\n            // 2) nest if checks (_slightly more performant_)\n            if (this.scrollRef) {\n                this.observer.observe(this.scrollRef, {\n                    attributes: true,\n                    childlist: true,\n                    subtree: true,\n                });\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        this.observer.disconnect();\n\n        if (this.scrollRef) {\n            this.scrollRef.removeEventListener('transitionend', this.throttledOnContentScroll);\n        }\n    }\n\n    onContentScroll = (): void => {\n        const newState = this.getScrollShadowState();\n        this.setState(newState);\n    };\n\n    getScrollShadowState = () => {\n        const { scrollTop, scrollHeight, clientHeight } = this.scrollRef || {};\n        const newState = {};\n\n        if (scrollTop > 0 && scrollTop < scrollHeight - clientHeight) {\n            newState.shouldShowTopScrollShadow = true;\n            newState.shouldShowBottomScrollShadow = true;\n        }\n\n        if (scrollTop === 0) {\n            newState.shouldShowTopScrollShadow = false;\n        }\n\n        if (scrollTop < scrollHeight - clientHeight) {\n            newState.shouldShowBottomScrollShadow = true;\n        }\n\n        if (scrollTop === scrollHeight - clientHeight) {\n            newState.shouldShowBottomScrollShadow = false;\n        }\n\n        return newState;\n    };\n\n    observer: MutationObserver;\n\n    scrollRef: ?HTMLDivElement = null;\n\n    // Throttle to 10 fps\n    throttledOnContentScroll = throttle(this.onContentScroll, 100);\n\n    render() {\n        const { children, className = '', scrollRefFn, shadowSize, ...rest } = this.props;\n        const { shouldShowTopScrollShadow, shouldShowBottomScrollShadow } = this.state;\n\n        const classes = classNames(`scroll-container`, className, {\n            'is-showing-top-shadow': shouldShowTopScrollShadow,\n            'is-showing-bottom-shadow': shouldShowBottomScrollShadow,\n        });\n\n        return (\n            <div className={classes} {...rest}>\n                <div\n                    className={classNames('scroll-wrap-container', `style--${shadowSize}`)}\n                    onScroll={this.throttledOnContentScroll}\n                    ref={el => {\n                        this.scrollRef = el;\n                        scrollRefFn(el);\n                    }}\n                >\n                    {children}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ScrollWrapper;\n","// extracted by mini-css-extract-plugin","// @flow\n\nexport { default } from './ScrollWrapper';\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport uniqueId from 'lodash/uniqueId';\n\nimport { scrollIntoView } from '../../utils/dom';\nimport ScrollWrapper from '../scroll-wrapper';\nimport { OVERLAY_WRAPPER_CLASS } from '../../constants';\n\nimport './SelectorDropdown.scss';\n\nfunction stopDefaultEvent(event) {\n    event.preventDefault();\n    event.stopPropagation();\n}\n\ntype Props = {\n    /** Options to render in the dropdown filtered based on the input text */\n    children?: React.Node,\n    /** CSS class for the wrapper div */\n    className?: string,\n    /** Index at which to insert the divider */\n    dividerIndex?: number,\n    /** Options to keep the results always open */\n    isAlwaysOpen?: boolean,\n    /** Function called on keyboard \"Enter\" event only if enter does not trigger selection */\n    onEnter?: (event: SyntheticKeyboardEvent<HTMLDivElement>) => void,\n    /** Function called with the index of the selected option and the event (selected by keyboard or click) */\n    onSelect?: Function,\n    /** Optional title of the overlay */\n    overlayTitle?: string,\n    /** A CSS selector matching the element to use as a boundary when auto-scrolling dropdown elements into view. When not provided, boundary will be determined by scrollIntoView utility function */\n    scrollBoundarySelector?: string,\n    /** Component containing an input text field and takes `inputProps` to spread onto the input element */\n    selector: React.Element<any>,\n    /** Boolean to indicate whether the dropdown should scroll */\n    shouldScroll?: boolean,\n    /** Determines whether or not the first item is highlighted automatically when the dropdown opens */\n    shouldSetActiveItemOnOpen?: boolean,\n    /** Optional title text that will be rendered above the list */\n    title?: React.Node,\n};\n\ntype State = {\n    activeItemID: string | null,\n    activeItemIndex: number,\n    shouldOpen: boolean,\n};\n\nclass SelectorDropdown extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.listboxID = uniqueId('listbox');\n\n        this.state = {\n            activeItemID: null,\n            activeItemIndex: -1,\n            shouldOpen: false,\n        };\n\n        this.selectorDropdownRef = React.createRef();\n    }\n\n    componentDidUpdate({ shouldSetActiveItemOnOpen, children }: Props) {\n        if (this.haveChildrenChanged(children)) {\n            // For UX purposes filtering the items is equivalent\n            // to re-opening the dropdown. In such cases we highlight\n            // the first item when configured to do so\n            if (shouldSetActiveItemOnOpen) {\n                this.setActiveItem(0);\n            } else {\n                this.resetActiveItem();\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        // just in case event listener was added during openDropdown() but the component\n        // gets unmounted without closeDropdown()\n        document.removeEventListener('click', this.handleDocumentClick, true);\n    }\n\n    setActiveItem = (index: number) => {\n        this.setState({ activeItemIndex: index });\n        if (index === -1) {\n            this.setActiveItemID(null);\n        }\n    };\n\n    setActiveItemID = (id: string | null) => {\n        const { scrollBoundarySelector } = this.props;\n        const itemEl = id ? document.getElementById(id) : null;\n\n        const scrollOptions: Object = {\n            block: 'nearest',\n        };\n\n        // Allow null in case we want to clear the default\n        // boundary from scrollIntoView\n        if (typeof scrollBoundarySelector !== 'undefined') {\n            scrollOptions.boundary = document.querySelector(scrollBoundarySelector);\n        }\n\n        this.setState({ activeItemID: id }, () => {\n            scrollIntoView(itemEl, scrollOptions);\n        });\n    };\n\n    listboxID: string;\n\n    selectorDropdownRef: { current: null | HTMLDivElement };\n\n    haveChildrenChanged = (prevChildren?: React.Node) => {\n        const { children } = this.props;\n        const childrenCount = React.Children.count(children);\n        const prevChildrenCount = React.Children.count(prevChildren);\n\n        if (childrenCount !== prevChildrenCount) {\n            return true;\n        }\n\n        if (childrenCount === 0) {\n            return false;\n        }\n\n        const childrenKeys = React.Children.map(children, child => child.key);\n        const prevChildrenKeys = React.Children.map(prevChildren, child => child.key);\n        return childrenKeys.some((childKey, index) => childKey !== prevChildrenKeys[index]);\n    };\n\n    resetActiveItem = () => {\n        this.setState({\n            activeItemID: null,\n            activeItemIndex: -1,\n        });\n    };\n\n    handleFocus = () => {\n        this.openDropdown();\n    };\n\n    handleDocumentClick = (event: MouseEvent) => {\n        const container = this.selectorDropdownRef.current;\n        const isInside =\n            (container && event.target instanceof Node && container.contains(event.target)) ||\n            container === event.target;\n\n        if (!isInside) {\n            this.closeDropdown();\n        }\n    };\n\n    handleInput = () => {\n        this.openDropdown();\n    };\n\n    handleKeyDown = (event: SyntheticKeyboardEvent<HTMLDivElement>) => {\n        const { children, isAlwaysOpen, onEnter } = this.props;\n        const { activeItemIndex } = this.state;\n        const childrenCount = React.Children.count(children);\n\n        switch (event.key) {\n            case 'ArrowDown':\n                if (this.isDropdownOpen()) {\n                    if (childrenCount) {\n                        stopDefaultEvent(event);\n                    }\n                    const nextIndex = activeItemIndex === childrenCount - 1 ? -1 : activeItemIndex + 1;\n                    this.setActiveItem(nextIndex);\n                } else {\n                    this.openDropdown();\n                }\n                break;\n            case 'ArrowUp':\n                if (this.isDropdownOpen()) {\n                    if (childrenCount) {\n                        stopDefaultEvent(event);\n                    }\n                    const prevIndex = activeItemIndex === -1 ? childrenCount - 1 : activeItemIndex - 1;\n                    this.setActiveItem(prevIndex);\n                } else {\n                    this.openDropdown();\n                }\n                break;\n            case 'Enter':\n                if (activeItemIndex !== -1 && this.isDropdownOpen()) {\n                    stopDefaultEvent(event);\n                    this.selectItem(activeItemIndex, event);\n                } else if (onEnter) {\n                    onEnter(event);\n                }\n                break;\n            case 'Tab':\n                if (this.isDropdownOpen()) {\n                    this.closeDropdown();\n                    this.resetActiveItem();\n                }\n                break;\n            case 'Escape':\n                if (!isAlwaysOpen && this.isDropdownOpen()) {\n                    stopDefaultEvent(event);\n                    this.closeDropdown();\n                    this.resetActiveItem();\n                }\n                break;\n            // no default\n        }\n    };\n\n    isDropdownOpen = () => {\n        const { children, isAlwaysOpen } = this.props;\n        const { shouldOpen } = this.state;\n        const childrenCount = React.Children.count(children);\n        return childrenCount > 0 && (!!isAlwaysOpen || shouldOpen);\n    };\n\n    openDropdown = () => {\n        if (!this.state.shouldOpen) {\n            const { shouldSetActiveItemOnOpen } = this.props;\n\n            if (shouldSetActiveItemOnOpen) {\n                this.setActiveItem(0);\n            }\n            this.setState({ shouldOpen: true });\n            document.addEventListener('click', this.handleDocumentClick, true);\n        }\n    };\n\n    closeDropdown = () => {\n        this.setState({ shouldOpen: false });\n        document.removeEventListener('click', this.handleDocumentClick, true);\n    };\n\n    selectItem = (index: number, event: SyntheticEvent<>) => {\n        const { onSelect } = this.props;\n        if (onSelect) {\n            onSelect(index, event);\n        }\n        this.closeDropdown();\n    };\n\n    render() {\n        const { listboxID, selectItem, setActiveItem, setActiveItemID, closeDropdown } = this;\n        const { dividerIndex, overlayTitle, children, className, title, selector, shouldScroll } = this.props;\n        const { activeItemID, activeItemIndex } = this.state;\n        const isOpen = this.isDropdownOpen();\n        const inputProps: Object = {\n            'aria-activedescendant': activeItemID,\n            'aria-autocomplete': 'list',\n            'aria-expanded': isOpen,\n            role: 'combobox',\n        };\n        if (isOpen) {\n            inputProps['aria-owns'] = listboxID;\n        }\n\n        const list = (\n            <ul className=\"overlay\" id={listboxID} role=\"listbox\">\n                {overlayTitle && <h5 className=\"SelectorDropdown-title\">{overlayTitle}</h5>}\n                {React.Children.map(children, (item, index) => {\n                    const itemProps: Object = {\n                        onClick: event => {\n                            selectItem(index, event);\n                        },\n                        /* preventDefault on mousedown so blur doesn't happen before click */\n                        onMouseDown: event => {\n                            event.preventDefault();\n                        },\n                        onMouseEnter: () => {\n                            setActiveItem(index);\n                        },\n                        closeDropdown: () => {\n                            closeDropdown();\n                        },\n                        setActiveItemID,\n                    };\n\n                    if (index === activeItemIndex) {\n                        itemProps.isActive = true;\n                    }\n\n                    const hasDivider = index === dividerIndex;\n\n                    return (\n                        <>\n                            {hasDivider && <hr className=\"SelectorDropdown-divider\" />}\n                            {React.cloneElement(item, itemProps)}\n                        </>\n                    );\n                })}\n            </ul>\n        );\n\n        // change onKeyPress/onPaste back to onInput when React fixes this IE11 bug: https://github.com/facebook/react/issues/7280\n\n        // We're simulating the blur event with the tab key listener and the\n        // click listener as a proxy because IE will trigger a blur when\n        // using the scrollbar in the dropdown which indavertently closes the dropdown.\n        return (\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n            <div\n                className={classNames('SelectorDropdown', className)}\n                onFocus={this.handleFocus}\n                onKeyDown={this.handleKeyDown}\n                onKeyPress={this.handleInput}\n                onPaste={this.handleInput}\n                ref={this.selectorDropdownRef}\n            >\n                {React.cloneElement(selector, { inputProps })}\n                {isOpen && (\n                    <div className={`${OVERLAY_WRAPPER_CLASS} is-visible`}>\n                        {title}\n                        {shouldScroll ? <ScrollWrapper>{list}</ScrollWrapper> : list}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default SelectorDropdown;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './SelectorDropdown';\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconAlert = ({ className = '', color = '#000000', height = 24, title, width = 24 }: Props) => (\n    <AccessibleSVG\n        className={`icon-alert ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 24 24\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z\"\n            fill={color}\n            fillRule=\"evenodd\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconAlert;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconCalendar = ({ className = '', color = '#BABABA', height = 17, title, width = 16 }: Props) => (\n    <AccessibleSVG\n        className={`icon-calendar ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 16 17\"\n        width={width}\n    >\n        <g fill=\"none\" fillRule=\"evenodd\" transform=\"translate(0 1)\">\n            <rect className=\"fill-color\" fill={color} height={height} rx=\"2\" width={width} y=\"2\" />\n            <rect fill=\"#FFF\" height=\"9\" rx=\"1\" width=\"13.75\" x=\"1.25\" y=\"6\" />\n            <path\n                className=\"fill-color\"\n                d=\"M11 7h2.5v2.5H11zM7 11h2.5v2.5H7zM3 11h2.5v2.5H3zM7 7h2.5v2.5H7zM3 7h2.5v2.5H3z\"\n                fill={color}\n            />\n        </g>\n    </AccessibleSVG>\n);\n\nexport default IconCalendar;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconClear = ({ className = '', color = '#AEAEAE', height = 12, title, width = 12 }: Props) => (\n    <AccessibleSVG\n        className={`icon-clear ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 12 13\"\n        width={width}\n    >\n        <g fill=\"none\" fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\">\n            <g className=\"fill-color\" fill={color} transform=\"translate(-1219.000000, -46.000000)\">\n                <g transform=\"translate(855.000000, 35.000000)\">\n                    <g>\n                        <path d=\"M370,16.1907436 L372.023141,14.1676025 C372.246611,13.9441325 372.608928,13.9441325 372.832398,14.1676025 C373.055867,14.3910725 373.055867,14.7533889 372.832398,14.9768589 L370.809256,17 L372.832398,19.0231411 C373.055867,19.2466111 373.055867,19.6089275 372.832398,19.8323975 C372.608928,20.0558675 372.246611,20.0558675 372.023141,19.8323975 L370,17.8092564 L367.976859,19.8323975 C367.753389,20.0558675 367.391072,20.0558675 367.167602,19.8323975 C366.944133,19.6089275 366.944133,19.2466111 367.167602,19.0231411 L369.190744,17 L367.167602,14.9768589 C366.944133,14.7533889 366.944133,14.3910725 367.167602,14.1676025 C367.391072,13.9441325 367.753389,13.9441325 367.976859,14.1676025 L370,16.1907436 Z M370,23 C373.313708,23 376,20.3137085 376,17 C376,13.6862915 373.313708,11 370,11 C366.686292,11 364,13.6862915 364,17 C364,20.3137085 366.686292,23 370,23 Z\" />\n                    </g>\n                </g>\n            </g>\n        </g>\n    </AccessibleSVG>\n);\n\nexport default IconClear;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconInfo = ({ className = '', color = '#000000', height = 24, title, width = 24 }: Props) => (\n    <AccessibleSVG\n        className={`icon-info ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"-603 389 16 16\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M-595 403c5.5 0 8-7.1 3.9-10.6-4.2-3.6-10.8.3-9.8 5.7.5 2.8 3 4.9 5.9 4.9zm.9-6.7v3.7h-1.4v-3.7h1.4zm.1-2.2c0 1-1.7 1.1-1.7 0 .1-1.1 1.7-1.1 1.7 0z\"\n            fill={color}\n            fillRule=\"evenodd\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconInfo;\n","// @flow\nimport * as React from 'react';\nimport { bdlGreenLight } from '../../styles/variables';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    opacity?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconVerified = ({\n    className = '',\n    color = bdlGreenLight,\n    height = 14,\n    opacity = 1,\n    title,\n    width = 14,\n}: Props) => (\n    <AccessibleSVG\n        className={`icon-verified ${className}`}\n        height={height}\n        opacity={opacity}\n        title={title}\n        viewBox=\"0 0 14 14\"\n        width={width}\n    >\n        <path\n            d=\"M7 14c-3.865993 0-7-3.134007-7-7s3.134007-7 7-7 7 3.134007 7 7-3.134007 7-7 7zM5.31288 9.303048l1.44555 1.21296 4.499514-5.36231-1.44555-1.21296-4.499514 5.36231zM3 7.36231L5.31288 9.30305l1.21296-1.44555L4.21296 5.91676 3 7.36231z\"\n            fill={color}\n            fillRule=\"evenodd\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconVerified;\n"],"sourceRoot":""}