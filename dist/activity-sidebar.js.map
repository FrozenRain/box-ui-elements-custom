{"version":3,"sources":["webpack:///./src/components/avatar/Avatar.js","webpack:///./src/components/avatar/Avatar.scss","webpack:///./src/components/avatar/AvatarImage.js","webpack:///./src/components/avatar/AvatarInitials.js","webpack:///./src/components/avatar/index.js","webpack:///./src/components/checkbox/Checkbox.js","webpack:///./src/components/checkbox/Checkbox.scss","webpack:///./src/components/checkbox/CheckboxField.js","webpack:///./src/components/checkbox/CheckboxTooltip.js","webpack:///./src/components/checkbox/index.js","webpack:///./src/components/contact-datalist-item/ContactDatalistItem.js","webpack:///./src/components/contact-datalist-item/ContactDatalistItem.scss","webpack:///./src/components/draft-js-editor/DraftJSEditor.js","webpack:///./src/components/draft-js-editor/DraftJSEditor.scss","webpack:///./src/components/draft-js-editor/index.js","webpack:///./src/components/form-elements/draft-js-mention-selector/DraftJSMentionSelector.js","webpack:///./src/components/form-elements/draft-js-mention-selector/DraftJSMentionSelectorCore.js","webpack:///./src/components/form-elements/draft-js-mention-selector/DraftMentionDecorator.js","webpack:///./src/components/form-elements/draft-js-mention-selector/DraftMentionItem.js","webpack:///./src/components/form-elements/draft-js-mention-selector/MentionSelector.scss","webpack:///./src/components/form-elements/draft-js-mention-selector/createMentionSelectorState.js","webpack:///./src/components/form-elements/draft-js-mention-selector/index.js","webpack:///./src/components/form-elements/draft-js-mention-selector/messages.js","webpack:///./src/components/form-elements/form/FormInput.js","webpack:///./src/components/form-elements/input-messages.js","webpack:///./src/components/link/LinkButton.js","webpack:///./src/components/link/LinkGroup.js","webpack:///./src/components/link/LinkPrimaryButton.js","webpack:///./src/components/link/index.js","webpack:///./src/components/media/Media.js","webpack:///./src/components/media/Media.scss","webpack:///./src/components/media/MediaBody.js","webpack:///./src/components/media/MediaFigure.js","webpack:///./src/components/media/MediaMenu.js","webpack:///./src/components/media/index.js","webpack:///./src/components/modal/Modal.js","webpack:///./src/components/modal/Modal.scss","webpack:///./src/components/modal/ModalDialog.js","webpack:///./src/components/pill-selector-dropdown/PillSelectorDropdown.js","webpack:///./src/components/pill-selector-dropdown/PillSelectorDropdown.scss","webpack:///./src/components/portal/Portal.js","webpack:///./src/components/portal/index.js","webpack:///./src/components/primary-button/index.js","webpack:///./src/components/text-area/TextArea.js","webpack:///./src/components/text-area/TextArea.scss","webpack:///./src/components/text-area/TextAreaField.js","webpack:///./src/components/text-area/index.js","webpack:///./src/elements/content-sidebar/ActivitySidebar.js","webpack:///./src/elements/content-sidebar/ActivitySidebar.scss","webpack:///./src/elements/content-sidebar/AddTaskButton.js","webpack:///./src/elements/content-sidebar/AddTaskMenu.js","webpack:///./src/elements/content-sidebar/AddTaskMenu.scss","webpack:///./src/elements/content-sidebar/TaskModal.js","webpack:///./src/elements/content-sidebar/activity-feed/Avatar.js","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/ActiveState.js","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/ActivityFeed.js","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/ActivityFeed.scss","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/EmptyState.js","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/activityFeedUtils.js","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/index.js","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/messages.js","webpack:///./src/elements/content-sidebar/activity-feed/app-activity/AppActivity.js","webpack:///./src/elements/content-sidebar/activity-feed/app-activity/AppActivity.scss","webpack:///./src/elements/content-sidebar/activity-feed/app-activity/index.js","webpack:///./src/elements/content-sidebar/activity-feed/app-activity/messages.js","webpack:///./src/elements/content-sidebar/activity-feed/comment-form/CommentForm.js","webpack:///./src/elements/content-sidebar/activity-feed/comment-form/CommentForm.scss","webpack:///./src/elements/content-sidebar/activity-feed/comment-form/CommentFormControls.js","webpack:///./src/elements/content-sidebar/activity-feed/comment-form/index.js","webpack:///./src/elements/content-sidebar/activity-feed/comment-form/messages.js","webpack:///./src/elements/content-sidebar/activity-feed/comment/Comment.js","webpack:///./src/elements/content-sidebar/activity-feed/comment/Comment.scss","webpack:///./src/elements/content-sidebar/activity-feed/comment/index.js","webpack:///./src/elements/content-sidebar/activity-feed/comment/messages.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-error/ActivityError.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-error/ActivityError.scss","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-error/index.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-message/ActivityMessage.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-message/ActivityMessage.scss","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-message/ShowOriginalButton.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-message/TranslateButton.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-message/index.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-message/messages.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-timestamp/ActivityTimestamp.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-timestamp/ActivityTimestamp.scss","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-timestamp/index.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-timestamp/messages.js","webpack:///./src/elements/content-sidebar/activity-feed/common/delete-confirmation/DeleteConfirmation.js","webpack:///./src/elements/content-sidebar/activity-feed/common/delete-confirmation/DeleteConfirmation.scss","webpack:///./src/elements/content-sidebar/activity-feed/common/delete-confirmation/index.js","webpack:///./src/elements/content-sidebar/activity-feed/common/user-link/UserLink.js","webpack:///./src/elements/content-sidebar/activity-feed/common/user-link/UserLink.scss","webpack:///./src/elements/content-sidebar/activity-feed/common/user-link/index.js","webpack:///./src/elements/content-sidebar/activity-feed/icons/IconActivityFeedEmptyState.js","webpack:///./src/elements/content-sidebar/activity-feed/icons/index.js","webpack:///./src/elements/content-sidebar/activity-feed/index.js","webpack:///./src/elements/content-sidebar/activity-feed/task-form/TaskError.js","webpack:///./src/elements/content-sidebar/activity-feed/task-form/TaskForm.js","webpack:///./src/elements/content-sidebar/activity-feed/task-form/TaskForm.scss","webpack:///./src/elements/content-sidebar/activity-feed/task-form/index.js","webpack:///./src/elements/content-sidebar/activity-feed/task-form/messages.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/AssigneeDetails.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/AssigneeDetails.scss","webpack:///./src/elements/content-sidebar/activity-feed/task-new/AssigneeList.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/AssigneeList.scss","webpack:///./src/elements/content-sidebar/activity-feed/task-new/AvatarGroupAvatar.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/AvatarGroupAvatar.scss","webpack:///./src/elements/content-sidebar/activity-feed/task-new/Task.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/Task.scss","webpack:///./src/elements/content-sidebar/activity-feed/task-new/TaskActions.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/TaskActions.scss","webpack:///./src/elements/content-sidebar/activity-feed/task-new/TaskCompletionRuleIcon.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/TaskCompletionRuleIcon.scss","webpack:///./src/elements/content-sidebar/activity-feed/task-new/TaskDueDate.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/TaskDueDate.scss","webpack:///./src/elements/content-sidebar/activity-feed/task-new/TaskStatus.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/TaskStatus.scss","webpack:///./src/elements/content-sidebar/activity-feed/task-new/index.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/messages.js","webpack:///./src/elements/content-sidebar/activity-feed/utils/formatTaggedMessage.js","webpack:///./src/elements/content-sidebar/activity-feed/version/CollapsedVersion.js","webpack:///./src/elements/content-sidebar/activity-feed/version/Version.js","webpack:///./src/elements/content-sidebar/activity-feed/version/Version.scss","webpack:///./src/elements/content-sidebar/activity-feed/version/index.js","webpack:///./src/elements/content-sidebar/messages.js","webpack:///./src/elements/content-sidebar/withErrorHandling.js","webpack:///./src/icons/avatars/UnknownUserAvatar.js","webpack:///./src/icons/general/IconAnyTask.js","webpack:///./src/icons/general/IconInfoInverted.js","webpack:///./src/icons/general/IconPencil.js","webpack:///./src/icons/general/IconRejected.js","webpack:///./src/icons/two-toned/IconTaskApproval.js","webpack:///./src/icons/two-toned/IconTaskGeneral.js","webpack:///./src/utils/parseCSV.js"],"names":["SIZES","large","Avatar","avatarUrl","className","name","id","size","hasImageErrored","setHasImageErrored","React","prevAvatarUrl","setPrevAvatarUrl","classes","classNames","avatar","AvatarImage","url","onError","event","getInitials","firstInitial","slice","lastInitial","lastIndexOf","toUpperCase","AvatarInitials","avatarColorSelector","parseInt","backgroundColorIndex","avatarColors","length","Checkbox","description","fieldLabel","hideLabel","isChecked","isDisabled","label","onChange","subsection","tooltip","rest","checkboxLabel","CheckboxField","field","form","value","messages","defineMessages","checkboxTooltipIconInfoText","CheckboxTooltip","ContactDatalistItem","subtitle","DraftJSEditor","editorState","props","onBlur","onReturn","inputProps","render","error","isRequired","onFocus","placeholder","handleBlur","handleChange","a11yProps","role","ariaActiveDescendantID","ariaAutoComplete","ariaExpanded","ariaOwneeID","message","handleReturn","isFocused","mentionStrategy","contentBlock","callback","contentState","findEntityRanges","character","entityKey","getEntity","ret","getType","DraftJSMentionSelector","constructor","validateOnBlur","containerEl","relatedTarget","Node","contains","checkValidity","nextEditorState","internalEditorState","state","setState","isTouched","getErrorFromValidityState","handleValidityStateUpdateHandler","mentionDecorator","CompositeDecorator","strategy","component","DraftMentionItem","contacts","EditorState","createEmpty","getDerivedStateFromProps","nextProps","componentDidUpdate","prevProps","prevState","prevInternalEditorState","prevEditorStateFromProps","prevEditorState","currentEditorState","newState","getDerivedStateFromEditorState","checkValidityIfAllowed","previousEditorState","isPreviousEditorStateEmpty","isEditorStateEmpty","isCurrentEditorStateEmpty","isNewEditorState","isEditorStateDirty","text","getCurrentContent","getPlainText","trim","lastChangeType","getLastChangeType","externalEditorState","maxLength","minLength","mentionTriggers","onMention","selectorRow","startMentionMessage","handleFocus","noop","DefaultSelectorRow","item","email","DefaultStartMentionMessage","startMention","MentionStartState","activeMention","mentionString","index","addMention","handleMention","getActiveMentionForEditorState","reduce","prev","current","mentionPattern","RegExp","prevContacts","currentContacts","selectionState","getSelection","startKey","getStartKey","activeBlock","getBlockForKey","cursorPosition","getStartOffset","result","start","end","activeRangeText","getText","substr","mentionMatch","match","blockID","mentionTrigger","mention","preInsertionSelectionState","merge","anchorOffset","focusOffset","textToInsert","contentStateWithEntity","createEntity","getLastCreatedEntityKey","contentStateWithLink","Modifier","replaceText","spaceOffset","selectionStateForAddingSpace","contentStateWithLinkAndExtraSpace","insertText","editorStateWithLink","push","showMentionStartState","handleContactSelected","shouldDisplayMentionLookup","map","contact","key","DraftMentionDecorator","children","getData","getMentionFromText","mentionRegex","matchArray","exec","fullMatch","triggerSymbol","data","content","createMentionSelectorState","ContentState","createFromText","getFirstBlock","getBlockAfter","getKey","mentionEntityKey","mentionRange","SelectionState","createWithContent","FormInput","Component","componentDidMount","onValidityStateUpdate","context","registerInput","componentWillUnmount","unregisterInput","PropTypes","node","func","string","shape","badInput","code","commonMessages","invalidInputError","patternMismatch","tooShort","minLengthError","min","tooLong","maxLengthError","max","typeMismatchEmail","invalidEmailError","typeMismatchUrl","invalidURLError","valueMissing","requiredFieldError","LinkButton","LinkGroup","title","i","LinkPrimaryButton","Media","as","Wrapper","classnames","defaultProps","Body","MediaBody","Menu","MediaMenu","Figure","MediaFigure","dropdownProps","menuProps","bdlGray50","Modal","isOpen","onRequestClose","stopPropagation","onBackdropClick","setTimeout","focusElementSelector","focusElementSelectorTrimmed","focusElement","focusFirstUsefulElement","dialog","tabbableEls","tabbable","focus","elementSelector","el","querySelector","Error","onModalOpen","isLoading","shouldNotUsePortal","style","bodyOverrideStyle","modalProps","omit","WrapperComponent","Portal","onKeyDown","backdrop","modalEl","ALERT_TYPE","DIALOG_TYPE","closeModalText","ModalDialog","uniqueId","renderCloseButton","closeButtonProps","intl","formatMessage","onCloseButtonClick","renderContent","type","elements","toArray","modalID","modalRef","isAlertType","divProps","injectIntl","PillSelectorDropdown","inputValue","isInCompositionMode","allowInvalidPills","parseItems","validator","pills","parseCSV","filter","pill","normalizedPills","displayText","allowCustomPills","onPillCreate","onSelect","selectedOptions","shouldClearUnmatchedInput","validateForError","parsePills","resetInputValue","addPillsFromInput","target","onInput","preventDefault","clipboardData","selectorOptions","selectedOption","get","handleInput","disabled","dividerIndex","dropdownScrollBoundarySelector","onRemove","onSuggestedPillAdd","overlayTitle","suggestedPillsData","suggestedPillsFilter","suggestedPillsTitle","shouldSetActiveItemOnOpen","handleEnter","handleSelect","handleCompositionEnd","handleCompositionStart","handlePaste","PureComponent","container","layer","document","createElement","setAttribute","appendChild","removeChild","elementProps","createPortal","body","TextArea","hideOptionalLabel","isResizable","textareaRef","hasError","errorMessageID","ariaAttrs","resize","displayName","TextAreaField","innerRef","errors","touched","getProp","activityFeedInlineError","inlineError","errorOccured","activityFeedItemApiError","MARK_NAME_JS_READY","ORIGIN_ACTIVITY_SIDEBAR","EVENT_JS_READY","mark","ActivitySidebar","fetchFeedItems","e","contextInfo","errorCallback","assignees","taskType","dueAt","completionRule","onSuccess","currentUser","file","api","getBadUserError","feedErrorCallback","successCallback","feedSuccessCallback","getFeedAPI","createTaskNew","task","onTaskDelete","deleteTaskNew","taskId","onTaskUpdate","updateTaskNew","taskAssignmentId","status","updateTaskCollaborator","permissions","onCommentDelete","deleteComment","comment","hasMention","onCommentUpdate","updateComment","onCommentCreate","createComment","deleteAppActivity","feedItems","activityFeedError","undefined","console","currentUserError","collaborators","entries","approverSelectorContacts","mentionSelectorContacts","debounce","getCollaborators","bind","getApproverContactsSuccessCallback","DEFAULT_COLLAB_DEBOUNCE","getMentionContactsSuccessCallback","maskError","errorHeader","currentUserErrorHeaderMessage","errorSubHeader","defaultErrorMaskSubHeaderMessage","userId","getUsersAPI","getAvatarUrlWithAccessToken","getApproverWithQuery","getAvatarUrl","createTask","onTaskModalClose","taskFormProps","TASK_COMPLETION_RULE_ALL","approvers","logger","onReadyMetric","endMarkName","fetchCurrentUser","user","shouldDestroy","getBadItemError","getUser","fetchCurrentUserSuccessCallback","fetchCurrentUserErrorCallback","shouldRefreshCache","features","shouldShowAppActivity","isFeatureEnabled","fetchFeedItemsSuccessCallback","fetchFeedItemsErrorCallback","searchStr","getFileCollaboratorsAPI","getFileCollaborators","filter_term","refresh","elementId","onVersionHistoryClick","getUserProfileUrl","activeFeedEntryId","activeFeedEntryType","renderAddTaskButton","SIDEBAR_VIEW_ACTIVITY","sidebarActivityTitle","deleteTask","updateTask","updateTaskAssignment","getMentionWithQuery","onTaskAssignmentUpdate","onTaskCreate","flow","withLogger","withErrorBoundary","withAPIContext","withFeatureConsumer","AddTaskButton","isTaskFormOpen","TASK_TYPE_APPROVAL","history","replace","open","handleClickMenuItem","handleSubmitError","handleModalClose","withRouter","AddTaskMenu","tasksAddTask","onMenuItemClick","TASK_TYPE_GENERAL","taskAddTaskGeneral","taskAddTaskGeneralDescription","taskAddTaskApproval","taskAddTaskApprovalDescription","getMessageForModalTitle","mode","TASK_EDIT_MODE_CREATE","tasksCreateGeneralTaskFormTitle","tasksEditGeneralTaskFormTitle","tasksCreateApprovalTaskFormTitle","tasksEditApprovalTaskFormTitle","focusTargetSelector","TaskModal","editMode","onSubmitError","onSubmitSuccess","onModalClose","avatar_url","avatarPromise","Promise","resolve","then","getAvatarUrlHandler","ActiveState","activeFeedItemRef","items","onAppActivityDelete","onCommentEdit","onTaskEdit","onVersionInfo","translations","activeEntry","find","refValue","can_delete","can_edit","versions","withErrorHandling","ActivityFeed","isInputOpen","ItemTypes","fileVersion","feedContainer","scrollTop","scrollHeight","nativeEvent","stopImmediatePropagation","resetFeedScroll","commentFormSubmitHandler","versionInfoHandler","prevFeedItems","currFeedItems","prevIsInputOpen","currIsInputOpen","hasLoaded","hasMoreItems","didLoadFeedItems","hasInputOpened","scrollToActiveFeedItemOrErrorMessage","scrollIntoView","hasCommentPermission","showCommentForm","isEmpty","Array","isArray","errorMessageByEntryType","commentMissingError","taskMissingError","inlineFeedItemErrorMessage","isInlineFeedItemErrorVisible","ref","collapseFeedState","openVersionHistoryPopup","feedInlineErrorTitle","commentFormCancelHandler","commentFormFocusHandler","EmptyState","showCommentMessage","noActivity","noActivityCommentPrompt","feedState","collapsedFeedState","feedItem","previousFeedItem","pop","concat","selectors","getVersionAction","VERSION_UPLOAD_ACTION","modified_by","tmpModifiedBy","version_start","version_number","version_end","prevModifiedBy","PLACEHOLDER_USER","tmpCurModifiedBy","created_at","trashed_at","parsedVersionNumber","modifiedBy","Math","mapActivityNodes","dataset","href","tagName","textContent","resinTarget","resinAction","AppActivity","DOMParser","isConfirmingDelete","onDelete","rendered_text","renderedText","doc","parser","parseFromString","childNodes","from","activity_template","templateId","app","icon_url","createdAt","created_by","createdBy","isPending","canDelete","createdAtTimestamp","Date","getTime","isMenuVisible","appActivityAltIcon","appActivityName","to","attachment","handleDeleteClick","bdlGray80","appActivityDeleteMenuItem","appActivityDeletePrompt","handleDeleteCancel","handleDeleteConfirm","parseActivity","CommentForm","commentEditorState","tagged_message","onSubmit","entityId","getFormattedCommentText","blockMap","getBlockMap","resultStringArr","forEach","block","blockMapStringArr","getEntityAt","entity","stringToAdd","substring","join","prevIsOpen","onCancel","isEditing","inputContainerClassNames","onFormValidSubmitHandler","onMentionSelectorChangeHandler","commentWrite","atMentionTip","CommentInputControls","ACTIVITY_TARGETS","APPROVAL_FORM_CANCEL","commentCancel","APPROVAL_FORM_POST","commentPost","approvalAddAssignee","approvalAddTask","approvalAddTaskTooltip","approvalAssignees","approvalDueDate","approvalSelectDate","Comment","onEdit","translatedTaggedMessage","createdByUser","canEdit","COMMENT_OPTIONS","COMMENT_OPTIONS_EDIT","handleEditClick","commentEditMenuItem","COMMENT_OPTIONS_DELETE","commentDeleteMenuItem","commentDeletePrompt","PROFILE","handleUpdate","commentPostedFullDateTime","ActivityError","action","onAction","ActivityMessage","isTranslation","onTranslate","translationFailed","prevTaggedMessage","prevTranslationFailed","getButton","button","handleShowOriginal","handleTranslate","translationEnabled","commentToDisplay","formatTaggedMessage","ShowOriginalButton","activityMessageShowOriginal","TranslateButton","activityMessageTranslate","ActivityTimestamp","date","fullDateTime","time","DeleteConfirmation","onDeleteCancel","KEYS","escape","onDeleteConfirm","INLINE_DELETE_CANCEL","cancel","INLINE_DELETE_CONFIRM","delete","UserLink","profileUrl","getProfileUrlHandler","IconActivityFeedEmptyState","width","height","TaskError","isEditMode","TASK_EDIT_MODE_EDIT","isForbiddenErrorOnEdit","errorTitle","taskEditWarningTitle","taskCreateErrorTitle","errorMessage","taskUpdateErrorMessage","apiMessages","taskCreateErrorMessage","taskGeneralAssigneeRemovalWarningMessage","taskApprovalAssigneeRemovalWarningMessage","convertAssigneesToSelectorItems","newSelectorItem","TaskForm","getInitialFormState","only","approverTextInput","assigneeFieldMissingError","assigneeFieldInvalidError","invalidUserError","messageFieldError","formValidityState","taskAssignees","taskName","taskDueDate","isValid","Object","values","every","val","fieldName","validateForm","clearForm","dueDate","addedAssignees","getAddedAssignees","removedAssignees","getRemovedAssignees","assignee","currentApprovers","approverIds","approver","currentApprover","indexOf","currentApproverIds","editTask","dueDateString","toISOString","completion_rule","due_at","handleSubmitSuccess","dateValue","setHours","checked","TASK_COMPLETION_RULE_ANY","can_update","option","splice","persist","currentTarget","isCreateEditMode","renderApprovers","approverOptions","pillSelectorOverlayClasses","scrollable","submitButtonMessage","tasksAddTaskFormSubmitLabel","tasksEditTaskFormSubmitLabel","shouldShowCompletionRule","isCompletionRuleCheckboxDisabled","isCompletionRuleCheckboxChecked","handleInvalidSubmit","handleValidSubmit","getErrorByFieldname","tasksAddTaskFormSelectAssigneesLabel","handleApproverSelectorInput","handleApproverSelectorRemove","handleApproverSelectorSelect","commentFormMessages","taskAnyCheckboxLabel","taskAnyInfoTooltip","handleCompletionRuleChange","tasksAddTaskFormMessageLabel","handleChangeMessage","INTERACTION_TARGET","TASK_DATE_PICKER","tasksAddTaskFormDueDateLabel","handleDueDateChange","handleCancelClick","addResinInfo","tasksAddTaskFormCancelLabel","statusMessages","TASK_NEW_APPROVED","tasksFeedStatusApproved","TASK_NEW_REJECTED","tasksFeedStatusRejected","TASK_NEW_COMPLETED","tasksFeedStatusCompleted","TASK_NEW_NOT_STARTED","Datestamp","AvatarDetails","completedAt","statusMessage","priorCollaborator","dateTime","DEFAULT_ASSIGNEES_SHOWN","TASKS_PAGE_SIZE","AssigneeList","initialAssigneeCount","users","onCollapse","onExpand","next_marker","entryCount","numVisibleAssignees","visibleUsers","completed_at","hiddenAssigneeCount","maxAdditionalAssignees","hasMoreAssigneesThanPageSize","additionalAssigneeMessage","taskShowMoreAssigneesOverflow","taskShowMoreAssignees","additionalAssigneeCount","taskShowLessAssignees","StatusIcon","AvatarGroupAvatar","camelCase","taskAssignmentCompleted","getMessageForTask","isCurrentUser","tasksFeedHeadlineApprovalCurrentUser","tasksFeedHeadlineGeneralCurrentUser","tasksFeedHeadlineApproval","tasksFeedHeadlineGeneral","Task","loadCollabError","assignedToFull","assigned_to","modalError","isAssigneeListOpen","getAllTaskCollaborators","task_links","taskCollaboratorLoadErrorMessage","fileId","getTaskCollaboratorsAPI","getTaskCollaborators","assignmentId","taskStatus","onAssignmentUpdate","task_type","currentUserAssignment","shouldShowActions","TASK_NEW_IN_PROGRESS","TaskTypeIcon","IconTaskApproval","IconTaskGeneral","TASK_OPTIONS","TASK_OPTIONS_EDIT","taskEditMenuItem","TASK_OPTIONS_DELETE","taskDeleteMenuItem","taskDeletePrompt","handleAssigneeListCollapse","handleAssigneeListExpand","handleTaskAction","getFeatureConfig","feedbackUrl","handleEditSubmitError","handleEditModalClose","TaskActions","onTaskApproval","onTaskReject","onTaskComplete","TASK_APPROVE","tasksFeedApproveAction","TASK_REJECT","tasksFeedRejectAction","TASK_COMPLETE","tasksFeedCompleteAction","TaskCompletionRuleIcon","taskAnyAffordanceTooltip","TaskDueDate","isOverdue","now","fullDueDate","taskDueDateLabel","statusMessageKeyMap","tasksFeedApprovedLabel","tasksFeedCompletedLabel","tasksFeedRejectedLabel","tasksFeedInProgressLabel","Status","tasksFeedStatusLabel","msg","tasksFeedMoreAssigneesLabel","tasksFeedAssigneeListTitle","splitRegex","itemID","shouldReturnString","contentItems","split","contentIndex","contentKey","trigger","MENTION","urlMatch","getMessageForAction","collaboratorIDs","keys","numberOfCollaborators","versionRange","collaborator","versionUploadCollapsed","versionMultipleUsersUploaded","CollapsedVersion","onInfo","getVersionInfo","VERSION_CARD","ACTION_MAP","VERSION_DELETE_ACTION","versionDeleted","VERSION_PROMOTE_ACTION","versionPromoted","VERSION_RESTORE_ACTION","versionRestored","versionUploaded","Version","version_promoted","getVersionUser","WrappedComponent","errorCode","ICON_CLASS","UnknownUserAvatar","idPrefix","IconAnyTask","color","bdlGray62","IconInfoInverted","IconPencil","IconRejected","bdlBoxBlue","white","components","c","charAt"],"mappings":"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","file":"activity-sidebar.js","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport AvatarImage from './AvatarImage';\nimport AvatarInitials from './AvatarInitials';\nimport UnknownUserAvatar from '../../icons/avatars/UnknownUserAvatar';\n\nimport './Avatar.scss';\n\nconst SIZES = { large: true };\n\ntype Props = {\n    /**\n     * Url to avatar image.  If passed in, component will render the avatar image instead of the initials\n     *\n     * Required if \"name\" is not specified.\n     */\n    avatarUrl?: ?string,\n    /** classname to add to the container element. */\n    className?: string,\n    /** Users id */\n    id?: ?string | number,\n    /**\n     * Users full name.\n     *\n     * Required if \"avatarUrl\" is not specified.\n     */\n    name?: ?string,\n    /* avatar size (enum) */\n    size?: $Keys<typeof SIZES>,\n};\n\nfunction Avatar({ avatarUrl, className, name, id, size = '' }: Props) {\n    const [hasImageErrored, setHasImageErrored] = React.useState<boolean>(false);\n    const [prevAvatarUrl, setPrevAvatarUrl] = React.useState<$PropertyType<Props, 'avatarUrl'>>(null);\n\n    const classes = classNames(['avatar', className, { [`avatar--${size}`]: SIZES[size] }]);\n\n    // Reset hasImageErrored state when avatarUrl changes\n    if (avatarUrl !== prevAvatarUrl) {\n        setHasImageErrored(false);\n        setPrevAvatarUrl(avatarUrl);\n    }\n\n    let avatar;\n    if (avatarUrl && !hasImageErrored) {\n        avatar = (\n            <AvatarImage\n                onError={() => {\n                    setHasImageErrored(true);\n                }}\n                url={avatarUrl}\n            />\n        );\n    } else if (name) {\n        avatar = <AvatarInitials id={id} name={name} />;\n    } else {\n        avatar = <UnknownUserAvatar className=\"avatar-icon\" />;\n    }\n\n    return (\n        <span className={classes} role=\"presentation\">\n            {avatar}\n        </span>\n    );\n}\n\nexport default Avatar;\n","// extracted by mini-css-extract-plugin","// @flow\nimport React from 'react';\n\ntype Props = {\n    className?: string,\n    onError?: Function,\n    url: string,\n};\n\nconst AvatarImage = ({ className = '', url, onError }: Props) => (\n    <img\n        alt=\"\"\n        className={`avatar-image ${className}`}\n        onError={event => {\n            if (typeof onError === 'function') {\n                onError(event);\n            }\n        }}\n        src={url}\n    />\n);\n\nexport default AvatarImage;\n","// @flow\nimport React from 'react';\nimport { avatarColors } from '../../styles/variables';\n\nconst getInitials = name => {\n    const firstInitial = name.slice(0, 1);\n    const lastInitial = name.slice(name.lastIndexOf(' ') + 1, name.lastIndexOf(' ') + 2);\n    return (firstInitial + lastInitial).toUpperCase();\n};\n\ntype Props = {\n    className?: string,\n    id?: ?string | number,\n    name: string,\n};\n\nconst AvatarInitials = ({ className = '', id, name }: Props) => {\n    const avatarColorSelector = parseInt(id, 10) || 0;\n    const backgroundColorIndex = avatarColorSelector % avatarColors.length;\n\n    return (\n        <span className={`avatar-initials ${className}`} data-bg-idx={backgroundColorIndex}>\n            {getInitials(name)}\n        </span>\n    );\n};\n\nexport default AvatarInitials;\n","// @flow\nexport { default as AvatarImage } from './AvatarImage';\nexport { default as AvatarInitials } from './AvatarInitials';\nexport { default } from './Avatar';\n","// @flow\nimport * as React from 'react';\n\nimport CheckboxTooltip from './CheckboxTooltip';\n\nimport './Checkbox.scss';\n\ntype Props = {\n    className?: string,\n    /** Description to the checkbox */\n    description?: React.Node,\n    /** Label for the field shown on top of the checkbox */\n    fieldLabel?: React.Node,\n    /** Hides the checkbox label when true */\n    hideLabel?: boolean,\n    /** Unique `id` for the input */\n    id?: string,\n    /** Checkbox checked state */\n    isChecked?: boolean, // @TODO: eventually call this `checked`\n    /** Checkbox disabled state */\n    isDisabled?: boolean, // @TODO: eventually call this `disabled`\n    /** Label displayed for the input */\n    label: React.Node,\n    /** Name of the input */\n    name: string,\n    /** blur callback function called with event as the argument */\n    onBlur?: (e: SyntheticInputEvent<HTMLInputElement>) => any,\n    /** change callback function called with event as the argument */\n    onChange?: (e: SyntheticInputEvent<HTMLInputElement>) => any,\n    /** Subsection below the checkbox */\n    subsection?: React.Node,\n    /** Info tooltip text next to the checkbox label */\n    tooltip?: string,\n    /** optional value for the checkbox */\n    value?: any,\n};\n\nconst Checkbox = ({\n    className = '',\n    description,\n    fieldLabel,\n    hideLabel,\n    id,\n    isChecked,\n    isDisabled,\n    label,\n    name,\n    onChange,\n    subsection,\n    tooltip,\n    ...rest // @TODO: eventually remove `rest` in favor of explicit props\n}: Props) => {\n    const checkboxLabel = (\n        // eslint-disable-next-line jsx-a11y/label-has-for\n        <label className=\"checkbox-label\">\n            <input\n                checked={isChecked}\n                disabled={isDisabled}\n                id={id}\n                name={name}\n                onChange={onChange}\n                type=\"checkbox\"\n                {...rest}\n            />\n            {/* This span is used for the before/after checkbox styles, mouse clicks will target this element */}\n            <span className=\"checkbox-pointer-target\" />\n            <span className={hideLabel ? 'accessibility-hidden' : ''}>{label}</span>\n        </label>\n    );\n\n    return (\n        <div className={`checkbox-container ${className} ${isDisabled ? 'is-disabled' : ''}`}>\n            {fieldLabel && <div className=\"label\">{fieldLabel}</div>}\n            {tooltip ? <CheckboxTooltip label={checkboxLabel} tooltip={tooltip} /> : checkboxLabel}\n            {description ? <div className=\"checkbox-description\">{description}</div> : null}\n            {subsection ? <div className=\"checkbox-subsection\">{subsection}</div> : null}\n        </div>\n    );\n};\n\nexport type CheckboxProps = Props;\nexport default Checkbox;\n","// extracted by mini-css-extract-plugin","// @flow\n\nimport * as React from 'react';\nimport type { FieldProps } from 'formik';\n\nimport CheckboxPrimitive from './Checkbox';\nimport type { CheckboxProps } from './Checkbox';\n\ntype Props = CheckboxProps & FieldProps;\n\nconst CheckboxField = ({ field, form, ...rest }: Props) => {\n    const { value } = field;\n    return <CheckboxPrimitive {...field} {...rest} isChecked={!!value} />;\n};\n\nexport default CheckboxField;\n","// @flow\nimport * as React from 'react';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport IconInfo from '../../icons/general/IconInfo';\nimport Tooltip from '../tooltip';\n\nconst messages = defineMessages({\n    checkboxTooltipIconInfoText: {\n        defaultMessage: 'Info',\n        description: 'Icon to display more information on the checkbox',\n        id: 'boxui.checkboxTooltip.iconInfoText',\n    },\n});\n\ntype Props = {\n    label: React.Node,\n    tooltip: string,\n};\n\nconst CheckboxTooltip = ({ label, tooltip }: Props) => (\n    <div className=\"checkbox-tooltip-wrapper\">\n        {label}\n        <Tooltip text={tooltip}>\n            <div className=\"info-tooltip\">\n                <IconInfo\n                    height={16}\n                    title={<FormattedMessage {...messages.checkboxTooltipIconInfoText} />}\n                    width={16}\n                />\n            </div>\n        </Tooltip>\n    </div>\n);\n\nexport default CheckboxTooltip;\n","// @flow\nexport { default } from './Checkbox';\nexport { default as CheckboxField } from './CheckboxField';\n","// @flow\nimport * as React from 'react';\n\nimport DatalistItem from '../datalist-item';\n\nimport './ContactDatalistItem.scss';\n\ntype Props = {\n    name: ?string,\n    subtitle?: React.Node,\n};\n\nconst ContactDatalistItem = ({ name, subtitle, ...rest }: Props) => (\n    <DatalistItem {...rest}>\n        <div className=\"contact-text contact-name\">{name}</div>\n        {subtitle && <div className=\"contact-text contact-sub-name\">{subtitle}</div>}\n    </DatalistItem>\n);\n\nexport default ContactDatalistItem;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nimport { Editor } from 'draft-js';\nimport type { EditorState } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\n\nimport Label from '../label';\nimport Tooltip from '../tooltip';\n\nimport './DraftJSEditor.scss';\n\ntype Props = {\n    editorState: EditorState,\n    error?: ?Object,\n    hideLabel?: boolean,\n    inputProps: Object,\n    isDisabled?: boolean,\n    isRequired?: boolean,\n    label: React.Node,\n    onBlur: Function,\n    onChange: Function,\n    onFocus: Function,\n    onReturn?: Function,\n    placeholder?: string,\n};\n\nclass DraftJSEditor extends React.Component<Props> {\n    static defaultProps = {\n        inputProps: {},\n        isRequired: false,\n        isFocused: false,\n    };\n\n    /**\n     * Calls onChange handler passed in\n     * @param {EditorState} editorState The new/updated editor state\n     * @returns {void}\n     */\n    handleChange = (editorState: EditorState) => {\n        const { onChange } = this.props;\n\n        onChange(editorState);\n    };\n\n    handleBlur = (editorState: EditorState) => {\n        const { onBlur } = this.props;\n\n        onBlur(editorState);\n    };\n\n    /**\n     * Event handler which being passed to 'handleReturn' prop of DraftJSEditor\n     * This gives consumer the ability to handle return key event before DraftJSEditor handles it.\n     * @param {SyntheticKeyboardEvent} event\n     * @returns {string}\n     */\n    handleReturn = (event: SyntheticKeyboardEvent<>) => {\n        const { onReturn, inputProps } = this.props;\n\n        if (onReturn && !inputProps['aria-activedescendant']) {\n            // Return 'handled' tells DraftJS Editor to not handle return key event,\n            // return 'not-handled' tells DraftJS Editor to continue handle the return key event.\n            // We encapsulate this DraftJS Editor specific contract here, and use true/fase\n            // to indicate whether to let DraftJS Editor handle return event or not in the upper level.\n            return onReturn(event) ? 'handled' : 'not-handled';\n        }\n\n        return 'not-handled';\n    };\n\n    render() {\n        const {\n            editorState,\n            error,\n            hideLabel,\n            inputProps,\n            isDisabled,\n            isRequired,\n            label,\n            onFocus,\n            placeholder,\n        } = this.props;\n\n        const { handleBlur, handleChange } = this;\n\n        const classes = classNames({\n            'draft-js-editor': true,\n            'is-disabled': isDisabled,\n            'show-error': !!error,\n        });\n\n        let a11yProps = {};\n        if (inputProps.role) {\n            a11yProps = {\n                ariaActiveDescendantID: inputProps['aria-activedescendant'],\n                ariaAutoComplete: inputProps['aria-autocomplete'],\n                ariaExpanded: inputProps['aria-expanded'],\n                ariaOwneeID: inputProps['aria-owns'],\n                role: inputProps.role,\n            };\n        }\n\n        return (\n            <div className={classes}>\n                <Label hideLabel={hideLabel} showOptionalText={!isRequired} text={label}>\n                    <Tooltip isShown={!!error} position=\"bottom-left\" text={error ? error.message : ''} theme=\"error\">\n                        {/* need div so tooltip can set aria-describedby */}\n                        <div>\n                            <Editor\n                                {...a11yProps}\n                                editorState={editorState}\n                                handleReturn={this.handleReturn}\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                onFocus={onFocus}\n                                placeholder={placeholder}\n                                readOnly={isDisabled}\n                                stripPastedStyles\n                            />\n                        </div>\n                    </Tooltip>\n                </Label>\n            </div>\n        );\n    }\n}\n\nexport default DraftJSEditor;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './DraftJSEditor';\n","// @flow\nimport * as React from 'react';\nimport { CompositeDecorator, EditorState } from 'draft-js';\nimport noop from 'lodash/noop';\n\nimport DraftJSMentionSelectorCore from './DraftJSMentionSelectorCore';\nimport DraftMentionItem from './DraftMentionItem';\nimport FormInput from '../form/FormInput';\nimport * as messages from '../input-messages';\n\n/**\n * Scans a Draft ContentBlock for entity ranges, so they can be annotated\n * @see docs at {@link https://draftjs.org/docs/advanced-topics-decorators.html#compositedecorator}\n * @param {ContentBlock} contentBlock\n * @param {function} callback\n * @param {ContentState} contentState\n */\nconst mentionStrategy = (contentBlock, callback, contentState) => {\n    contentBlock.findEntityRanges(character => {\n        const entityKey = character.getEntity();\n\n        const ret = entityKey !== null && contentState.getEntity(entityKey).getType() === 'MENTION';\n        return ret;\n    }, callback);\n};\n\ntype Props = {\n    className?: string,\n    contacts: SelectorItems,\n    editorState?: EditorState,\n    hideLabel?: boolean,\n    isDisabled?: boolean,\n    isRequired?: boolean,\n    label: React.Node,\n    maxLength?: number,\n    mentionTriggers?: Array<string>,\n    minLength?: number,\n    name: string,\n    onChange: Function,\n    onFocus?: Function,\n    onMention?: Function,\n    onReturn?: Function,\n    placeholder?: string,\n    selectorRow?: React.Element<any>,\n    startMentionMessage?: React.Node,\n    validateOnBlur?: boolean,\n};\n\ntype State = {\n    contacts: SelectorItems,\n    error: ?Object,\n    internalEditorState: ?EditorState,\n    isTouched: boolean,\n};\n\nclass DraftJSMentionSelector extends React.Component<Props, State> {\n    static defaultProps = {\n        isRequired: false,\n        onChange: noop,\n        validateOnBlur: true,\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        const mentionDecorator = new CompositeDecorator([\n            {\n                strategy: mentionStrategy,\n                component: DraftMentionItem,\n            },\n        ]);\n\n        // @NOTE (smotraghi 2017-05-30):\n        // This component might be either own its EditorState (in which case it lives in `this.state.internalEditorState`)\n        // or be a controlled component whose EditorState is passed in via the `editorState` prop.\n        // If `props.editorState` is set, `internalEditorState` is `null`,\n        // otherwise we initialize it here\n        this.state = {\n            contacts: [],\n            isTouched: false,\n            internalEditorState: props.editorState ? null : EditorState.createEmpty(mentionDecorator),\n            error: null,\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps: Props) {\n        const { contacts } = nextProps;\n        return contacts ? { contacts } : null;\n    }\n\n    componentDidUpdate(prevProps: Props, prevState: State) {\n        const { internalEditorState: prevInternalEditorState } = prevState;\n        const { internalEditorState } = this.state;\n\n        const { editorState: prevEditorStateFromProps } = prevProps;\n        const { editorState } = this.props;\n\n        // Determine whether we're working with the internal editor state or\n        // external editor state passed in from props\n        const prevEditorState = prevInternalEditorState || prevEditorStateFromProps;\n        const currentEditorState = internalEditorState || editorState;\n\n        // Only handle isTouched state transitions and check validity if the\n        // editorState references are different. This is to avoid getting stuck\n        // in an infinite loop of checking validity because checkValidity always\n        // calls setState({ error })\n        if (prevEditorState && currentEditorState && prevEditorState !== currentEditorState) {\n            const newState = this.getDerivedStateFromEditorState(currentEditorState, prevEditorState);\n            if (newState) {\n                this.setState(newState, this.checkValidityIfAllowed);\n            } else {\n                this.checkValidityIfAllowed();\n            }\n        }\n    }\n\n    getDerivedStateFromEditorState(currentEditorState: EditorState, previousEditorState: EditorState) {\n        const isPreviousEditorStateEmpty = this.isEditorStateEmpty(previousEditorState);\n        const isCurrentEditorStateEmpty = this.isEditorStateEmpty(currentEditorState);\n        const isNewEditorState = isCurrentEditorStateEmpty && !isPreviousEditorStateEmpty;\n        const isEditorStateDirty = isPreviousEditorStateEmpty && !isCurrentEditorStateEmpty;\n\n        let newState = null;\n        // Detect case where controlled EditorState is created anew and empty.\n        // If next editorState is empty and the current editorState is not empty\n        // that means it is a new empty state and this component should not be marked dirty\n        if (isNewEditorState) {\n            newState = { isTouched: false, error: null };\n        } else if (isEditorStateDirty) {\n            // Detect case where controlled EditorState has been made dirty\n            // If the current editorState is empty and the next editorState is not\n            // empty then this is the first interaction so mark this component dirty\n            newState = { isTouched: true };\n        }\n\n        return newState;\n    }\n\n    checkValidityIfAllowed() {\n        const { validateOnBlur }: Props = this.props;\n\n        if (!validateOnBlur) {\n            this.checkValidity();\n        }\n    }\n\n    isEditorStateEmpty(editorState: EditorState): boolean {\n        const text = editorState\n            .getCurrentContent()\n            .getPlainText()\n            .trim();\n        const lastChangeType = editorState.getLastChangeType();\n\n        return text.length === 0 && lastChangeType === null;\n    }\n\n    /**\n     * @returns {string}\n     */\n    getErrorFromValidityState() {\n        const { editorState: externalEditorState, isRequired, maxLength, minLength } = this.props;\n        const { internalEditorState } = this.state;\n\n        // manually check for content length if isRequired is true\n        const editorState: EditorState = internalEditorState || externalEditorState;\n        const { length } = editorState\n            .getCurrentContent()\n            .getPlainText()\n            .trim();\n\n        if (isRequired && !length) {\n            return messages.valueMissing();\n        }\n\n        if (typeof minLength !== 'undefined' && length < minLength) {\n            return messages.tooShort(minLength);\n        }\n\n        if (typeof maxLength !== 'undefined' && length > maxLength) {\n            return messages.tooLong(maxLength);\n        }\n\n        return null;\n    }\n\n    containerEl: ?HTMLDivElement;\n\n    /**\n     * Event handler called on blur. Triggers validation\n     * @param {SyntheticFocusEvent} event The event object\n     * @returns {void}\n     */\n    handleBlur = (event: SyntheticFocusEvent<>) => {\n        if (\n            this.props.validateOnBlur &&\n            this.containerEl &&\n            event.relatedTarget instanceof Node &&\n            !this.containerEl.contains(event.relatedTarget)\n        ) {\n            this.checkValidity();\n        }\n    };\n\n    handleFocus = (event: SyntheticEvent<>) => {\n        const { onFocus } = this.props;\n\n        if (onFocus) {\n            onFocus(event);\n        }\n    };\n\n    /**\n     * Updates editorState, rechecks validity\n     * @param {EditorState} nextEditorState The new editor state to set in the state\n     * @returns {void}\n     */\n    handleChange = (nextEditorState: EditorState) => {\n        const { internalEditorState }: State = this.state;\n        const { onChange }: Props = this.props;\n\n        onChange(nextEditorState);\n\n        if (internalEditorState) {\n            this.setState({ internalEditorState: nextEditorState });\n        }\n    };\n\n    handleValidityStateUpdateHandler = () => {\n        const { isTouched } = this.state;\n\n        if (!isTouched) {\n            return;\n        }\n\n        const error = this.getErrorFromValidityState();\n\n        this.setState({ error });\n    };\n\n    checkValidity = () => {\n        this.handleValidityStateUpdateHandler();\n    };\n\n    render() {\n        const {\n            className = '',\n            editorState: externalEditorState,\n            hideLabel,\n            isDisabled,\n            isRequired,\n            label,\n            mentionTriggers,\n            name,\n            onMention,\n            placeholder,\n            selectorRow,\n            startMentionMessage,\n            onReturn,\n        } = this.props;\n        const { contacts, internalEditorState, error } = this.state;\n        const { handleBlur, handleChange, handleFocus } = this;\n        const editorState: EditorState = internalEditorState || externalEditorState;\n\n        return (\n            <div\n                ref={containerEl => {\n                    this.containerEl = containerEl;\n                }}\n                className={className}\n            >\n                <FormInput name={name} onValidityStateUpdate={this.handleValidityStateUpdateHandler}>\n                    <DraftJSMentionSelectorCore\n                        contacts={contacts}\n                        editorState={editorState}\n                        error={error}\n                        hideLabel={hideLabel}\n                        isDisabled={isDisabled}\n                        isRequired={isRequired}\n                        label={label}\n                        mentionTriggers={mentionTriggers}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        onFocus={handleFocus}\n                        onMention={onMention}\n                        onReturn={onReturn}\n                        placeholder={placeholder}\n                        selectorRow={selectorRow}\n                        startMentionMessage={startMentionMessage}\n                    />\n                </FormInput>\n            </div>\n        );\n    }\n}\n\nexport default DraftJSMentionSelector;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport { EditorState, Modifier } from 'draft-js';\n\nimport DatalistItem from '../../datalist-item';\nimport DraftJSEditor from '../../draft-js-editor';\nimport SelectorDropdown from '../../selector-dropdown';\n\nimport messages from './messages';\n\nimport './MentionSelector.scss';\n\ntype DefaultSelectorRowProps = {\n    item?: {\n        email?: string,\n        name?: string,\n    },\n};\n\nconst DefaultSelectorRow = ({ item = {}, ...rest }: DefaultSelectorRowProps) => (\n    <DatalistItem {...rest}>\n        {item.name} <span className=\"dropdown-secondary-text\">{item.email}</span>\n    </DatalistItem>\n);\n\nconst DefaultStartMentionMessage = () => <FormattedMessage {...messages.startMention} />;\n\ntype MentionStartStateProps = {\n    message?: React.Node,\n};\n\nconst MentionStartState = ({ message }: MentionStartStateProps) => <div className=\"mention-start-state\">{message}</div>;\n\ntype Props = {\n    className?: string,\n    contacts: SelectorItems,\n    editorState: EditorState,\n    error?: ?Object,\n    hideLabel?: boolean,\n    isDisabled?: boolean,\n    isRequired?: boolean,\n    label: React.Node,\n    mentionTriggers: Array<string>,\n    onBlur?: Function,\n    onChange?: Function,\n    onFocus?: Function,\n    onMention?: Function,\n    onReturn?: Function,\n    placeholder?: string,\n    selectorRow: React.Element<any>,\n    startMentionMessage?: React.Node,\n};\n\ntype State = {\n    activeMention: Object | null,\n    isFocused: boolean,\n    mentionPattern: RegExp,\n};\n\nclass DraftJSMentionSelector extends React.Component<Props, State> {\n    static defaultProps = {\n        className: '',\n        contacts: [],\n        isDisabled: false,\n        isRequired: false,\n        mentionTriggers: ['@', '＠', '﹫'],\n        selectorRow: <DefaultSelectorRow />,\n        startMentionMessage: <DefaultStartMentionMessage />,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        const mentionTriggers = props.mentionTriggers.reduce((prev, current) => `${prev}\\\\${current}`, '');\n\n        this.state = {\n            activeMention: null,\n            isFocused: false,\n            mentionPattern: new RegExp(`([${mentionTriggers}])([^${mentionTriggers}]*)$`),\n        };\n    }\n\n    /**\n     * Lifecycle method that gets called immediately after an update\n     * @param {object} lastProps Props the component is receiving\n     * @returns {void}\n     */\n    componentDidUpdate(prevProps: Props) {\n        const { contacts: prevContacts } = prevProps;\n        const { contacts: currentContacts } = this.props;\n        const { activeMention } = this.state;\n\n        if (activeMention !== null && !currentContacts.length && prevContacts !== currentContacts) {\n            // if empty set of contacts get passed in, set active mention to null\n            this.setState({\n                activeMention: null,\n            });\n        }\n    }\n\n    /**\n     * Extracts the active mention from the editor state\n     *\n     * @param {EditorState} editorState\n     * @returns {object}\n     */\n    getActiveMentionForEditorState(editorState: EditorState) {\n        const { mentionPattern } = this.state;\n\n        const contentState = editorState.getCurrentContent();\n        const selectionState = editorState.getSelection();\n\n        const startKey = selectionState.getStartKey();\n        const activeBlock = contentState.getBlockForKey(startKey);\n\n        const cursorPosition = selectionState.getStartOffset();\n\n        let result = null;\n\n        // Break the active block into entity ranges.\n        activeBlock.findEntityRanges(\n            character => character.getEntity() === null,\n            (start, end) => {\n                // Find the active range (is the cursor inside this range?)\n                if (start <= cursorPosition && cursorPosition <= end) {\n                    // Determine if the active range contains a mention.\n                    const activeRangeText = activeBlock.getText().substr(start, cursorPosition - start);\n                    const mentionMatch = activeRangeText.match(mentionPattern);\n\n                    if (mentionMatch) {\n                        result = {\n                            blockID: startKey,\n                            mentionString: mentionMatch[2],\n                            mentionTrigger: mentionMatch[1],\n                            start: start + mentionMatch.index,\n                            end: cursorPosition,\n                        };\n                    }\n                }\n\n                return null;\n            },\n        );\n\n        return result;\n    }\n\n    /**\n     * Called on each keypress when a mention is being composed\n     * @returns {void}\n     */\n    handleMention = () => {\n        const { onMention } = this.props;\n        const { activeMention } = this.state;\n\n        if (onMention) {\n            onMention(activeMention ? activeMention.mentionString : '');\n        }\n    };\n\n    /**\n     * Method that gets called when a mention contact is selected\n     * @param {number} index The selected index\n     * @returns {void}\n     */\n    handleContactSelected = (index: number) => {\n        const { contacts } = this.props;\n        this.addMention(contacts[index]);\n        this.setState(\n            {\n                activeMention: null,\n                isFocused: true,\n            },\n            () => {\n                this.handleMention();\n            },\n        );\n    };\n\n    handleBlur = (event: SyntheticEvent<>) => {\n        const { onBlur } = this.props;\n\n        this.setState({\n            isFocused: false,\n        });\n\n        if (onBlur) {\n            onBlur(event);\n        }\n    };\n\n    handleFocus = (event: SyntheticEvent<>) => {\n        const { onFocus } = this.props;\n\n        this.setState({\n            isFocused: true,\n        });\n\n        if (onFocus) {\n            onFocus(event);\n        }\n    };\n\n    /**\n     * Event handler called when DraftJSEditor emits onChange\n     * Checks current text to see if any mentions were made\n     * @param {EditorState} editorState The new editor state\n     * @returns {void}\n     */\n    handleChange = (nextEditorState: EditorState) => {\n        const { onChange } = this.props;\n\n        const activeMention = this.getActiveMentionForEditorState(nextEditorState);\n\n        this.setState(\n            {\n                activeMention,\n            },\n            () => {\n                if (onChange) {\n                    onChange(nextEditorState);\n                }\n\n                if (activeMention && activeMention.mentionString) {\n                    this.handleMention();\n                }\n            },\n        );\n    };\n\n    /**\n     * Inserts a selected mention into the editor\n     * @param {object} mention The selected mention to insert\n     */\n    addMention(mention: Object) {\n        const { activeMention } = this.state;\n        const { editorState } = this.props;\n        const { start, end } = activeMention || {};\n\n        const { id, name } = mention;\n\n        const contentState = editorState.getCurrentContent();\n        const selectionState = editorState.getSelection();\n\n        const preInsertionSelectionState = selectionState.merge({\n            anchorOffset: start,\n            focusOffset: end,\n        });\n\n        const textToInsert = `@${name}`;\n\n        const contentStateWithEntity = contentState.createEntity('MENTION', 'IMMUTABLE', { id });\n\n        const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n\n        const contentStateWithLink = Modifier.replaceText(\n            contentState,\n            preInsertionSelectionState,\n            textToInsert,\n            null,\n            entityKey,\n        );\n\n        const spaceOffset = preInsertionSelectionState.getStartOffset() + textToInsert.length;\n        const selectionStateForAddingSpace = preInsertionSelectionState.merge({\n            anchorOffset: spaceOffset,\n            focusOffset: spaceOffset,\n        });\n\n        const contentStateWithLinkAndExtraSpace = Modifier.insertText(\n            contentStateWithLink,\n            selectionStateForAddingSpace,\n            ' ',\n        );\n\n        const editorStateWithLink = EditorState.push(\n            editorState,\n            contentStateWithLinkAndExtraSpace,\n            'change-block-type',\n        );\n\n        this.setState(\n            {\n                activeMention: null,\n            },\n            () => {\n                this.handleChange(editorStateWithLink);\n            },\n        );\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    shouldDisplayMentionLookup = () => {\n        const { contacts } = this.props;\n        const { activeMention } = this.state;\n\n        return !!(activeMention && activeMention.mentionString && contacts.length);\n    };\n\n    render() {\n        const {\n            className,\n            contacts,\n            editorState,\n            error,\n            hideLabel,\n            isDisabled,\n            isRequired,\n            label,\n            onReturn,\n            placeholder,\n            selectorRow,\n            startMentionMessage,\n            onMention,\n        } = this.props;\n        const { activeMention, isFocused } = this.state;\n\n        const classes = classNames('mention-selector-wrapper', className);\n\n        const showMentionStartState = !!(onMention && activeMention && !activeMention.mentionString && isFocused);\n\n        return (\n            <div className={classes}>\n                <SelectorDropdown\n                    onSelect={this.handleContactSelected}\n                    selector={\n                        <DraftJSEditor\n                            editorState={editorState}\n                            error={error}\n                            hideLabel={hideLabel}\n                            isDisabled={isDisabled}\n                            isFocused={isFocused}\n                            isRequired={isRequired}\n                            label={label}\n                            onBlur={this.handleBlur}\n                            onFocus={this.handleFocus}\n                            onChange={this.handleChange}\n                            onReturn={onReturn}\n                            placeholder={placeholder}\n                        />\n                    }\n                >\n                    {this.shouldDisplayMentionLookup()\n                        ? contacts.map(contact =>\n                              React.cloneElement(selectorRow, {\n                                  ...selectorRow.props,\n                                  ...contact,\n                                  key: contact.id,\n                              }),\n                          )\n                        : []}\n                </SelectorDropdown>\n                {showMentionStartState ? <MentionStartState message={startMentionMessage} /> : null}\n            </div>\n        );\n    }\n}\n\nexport default DraftJSMentionSelector;\n","// @flow\nimport { CompositeDecorator } from 'draft-js';\n\nimport DraftMentionItem from './DraftMentionItem';\n\nconst mentionStrategy = (contentBlock, callback, contentState) => {\n    contentBlock.findEntityRanges(character => {\n        const entityKey = character.getEntity();\n\n        const ret = entityKey !== null && contentState.getEntity(entityKey).getType() === 'MENTION';\n        return ret;\n    }, callback);\n};\n\nconst DraftMentionDecorator = new CompositeDecorator([\n    {\n        strategy: mentionStrategy,\n        component: DraftMentionItem,\n    },\n]);\n\nexport default DraftMentionDecorator;\n","// @flow\nimport * as React from 'react';\nimport { ContentState } from 'draft-js';\n\ntype Props = {\n    children: React.Node, // React.ChildrenArray<React.Element<any>> unsupported by babel-plugin-flow-react-proptypes\n    contentState: ContentState,\n    decoratedText: string,\n    entityKey?: string,\n};\n\nconst DraftMentionItem = ({ contentState, entityKey, children }: Props) => {\n    let id = '';\n    if (entityKey) {\n        id = contentState.getEntity(entityKey).getData().id;\n    }\n\n    return <a href={`/profile/${id}`}>{children}</a>;\n};\n\nexport default DraftMentionItem;\n","// extracted by mini-css-extract-plugin","// @flow\nimport { ContentState, EditorState, Modifier, SelectionState } from 'draft-js';\nimport DraftMentionDecorator from './DraftMentionDecorator';\n\n// returns data for first mention in a string\nconst getMentionFromText = (text: string) => {\n    // RegEx.exec() is stateful, so we create a new regex instance each time\n    const mentionRegex = /([@＠﹫])\\[([0-9]+):([^\\]]+)]/gi;\n    const matchArray = mentionRegex.exec(text);\n    if (!matchArray) {\n        return null;\n    }\n    const [fullMatch, triggerSymbol, id, name] = matchArray;\n    const start = matchArray.index;\n    const end = start + fullMatch.length;\n    const data = { id, name, content: `${triggerSymbol}${name}` };\n    return { start, end, data };\n};\n\n// creates draftjs state with mentions parsed into entities\nconst createMentionSelectorState = (message: string = '') => {\n    let contentState = ContentState.createFromText(message);\n    let contentBlock = contentState.getFirstBlock();\n\n    while (contentBlock != null) {\n        const text = contentBlock.getText();\n        const mention = text ? getMentionFromText(text) : null;\n        if (mention == null) {\n            contentBlock = contentState.getBlockAfter(contentBlock.getKey());\n        } else {\n            const { data, start, end } = mention;\n            contentState.createEntity('MENTION', 'IMMUTABLE', data);\n            const mentionEntityKey = contentState.getLastCreatedEntityKey();\n            const mentionRange = SelectionState.createEmpty(contentBlock.getKey()).merge({\n                anchorOffset: start,\n                focusOffset: end,\n            });\n            contentState = Modifier.replaceText(contentState, mentionRange, data.content, null, mentionEntityKey);\n            contentBlock = contentState.getBlockForKey(contentBlock.getKey());\n        }\n    }\n    return EditorState.createWithContent(contentState, DraftMentionDecorator);\n};\n\nexport default createMentionSelectorState;\n","// @flow\nexport { default } from './DraftJSMentionSelector';\nexport { default as createMentionSelectorState } from './createMentionSelectorState';\nexport { default as DraftMentionDecorator } from './DraftMentionDecorator';\n","// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    startMention: {\n        defaultMessage: 'Mention someone to notify them',\n        description: 'Message to display when a user triggers a mention',\n        id: 'boxui.draftjs.mentionSelector.startMention',\n    },\n});\n\nexport default messages;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nclass FormInput extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        /** callback called when Form pushed down a new validityState, useful for displaying server validation errors */\n        onValidityStateUpdate: PropTypes.func.isRequired,\n        /** Input name */\n        name: PropTypes.string.isRequired,\n    };\n\n    static contextTypes = {\n        form: PropTypes.shape({\n            registerInput: PropTypes.func.isRequired,\n            unregisterInput: PropTypes.func.isRequired,\n        }),\n    };\n\n    componentDidMount() {\n        const { name, onValidityStateUpdate } = this.props;\n\n        if (this.context.form) {\n            this.context.form.registerInput(name, onValidityStateUpdate);\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.context.form) {\n            this.context.form.unregisterInput(this.props.name);\n        }\n    }\n\n    render() {\n        return <div>{this.props.children}</div>;\n    }\n}\n\nexport default FormInput;\n","// @flow\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport commonMessages from '../../common/messages';\n\nconst badInput = () => ({\n    code: 'badInput',\n    message: <FormattedMessage {...commonMessages.invalidInputError} />,\n});\n\nconst patternMismatch = () => ({\n    code: 'patternMismatch',\n    message: <FormattedMessage {...commonMessages.invalidInputError} />,\n});\n\nconst tooShort = (minLength: number) => ({\n    code: 'tooShort',\n    message: <FormattedMessage {...commonMessages.minLengthError} values={{ min: minLength }} />,\n});\n\nconst tooLong = (maxLength: number) => ({\n    code: 'tooLong',\n    message: <FormattedMessage {...commonMessages.maxLengthError} values={{ max: maxLength }} />,\n});\n\nconst typeMismatchEmail = () => ({\n    code: 'typeMismatch',\n    message: <FormattedMessage {...commonMessages.invalidEmailError} />,\n});\n\nconst typeMismatchUrl = () => ({\n    code: 'typeMismatch',\n    message: <FormattedMessage {...commonMessages.invalidURLError} />,\n});\n\nconst valueMissing = () => ({\n    code: 'valueMissing',\n    message: <FormattedMessage {...commonMessages.requiredFieldError} />,\n});\n\nexport { badInput, patternMismatch, tooShort, tooLong, typeMismatchEmail, typeMismatchUrl, valueMissing };\n","// @flow\nimport * as React from 'react';\n\nimport LinkBase from './LinkBase';\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n};\n\nconst LinkButton = ({ className = '', ...rest }: Props) => <LinkBase className={`btn ${className}`} {...rest} />;\n\nexport default LinkButton;\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n    children: React.Node,\n    className: string,\n    title?: React.Node,\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass LinkGroup extends React.Component<Props> {\n    static defaultProps = {\n        title: '',\n        className: '',\n    };\n\n    render() {\n        const { title, children, className } = this.props;\n\n        return (\n            <div className={`link-group ${className}`}>\n                {title ? <div className=\"link-group-title\">{title}</div> : null}\n                <ul>{React.Children.map(children, (item, i) => (item ? <li key={i}>{item} </li> : null))}</ul>\n            </div>\n        );\n    }\n}\n\nexport default LinkGroup;\n","// @flow\nimport * as React from 'react';\n\nimport LinkButton from './LinkButton';\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n};\n\nconst LinkPrimaryButton = ({ className = '', ...rest }: Props) => (\n    <LinkButton className={`btn-primary ${className}`} {...rest} />\n);\n\nexport default LinkPrimaryButton;\n","// @flow\nexport { default as LinkGroup } from './LinkGroup';\nexport { default as Link } from './Link';\nexport { default as LinkButton } from './LinkButton';\nexport { default as LinkPrimaryButton } from './LinkPrimaryButton';\n","// @flow\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport MediaFigure from './MediaFigure';\nimport MediaBody from './MediaBody';\nimport MediaMenu from './MediaMenu';\nimport './Media.scss';\n\ntype Props = {\n    /** Component to use as outermost element, e.g., 'li' */\n    as: React.ElementType,\n    /** Child elements */\n    children: React.ChildrenArray<\n        React.Element<typeof MediaFigure | typeof MediaBody | typeof MediaMenu> | false | null,\n    >,\n    /** Additional class names */\n    className?: string,\n};\n\nconst Media = ({ as: Wrapper, children, className, ...rest }: Props) => (\n    <Wrapper className={classnames('bdl-Media', className)} {...rest}>\n        {children}\n    </Wrapper>\n);\n\n// Use this instead of default value because of param destructuring bug in Flow\n// that affects union types\n// https://github.com/facebook/flow/issues/5461\nMedia.defaultProps = {\n    as: 'div',\n};\n\nMedia.Body = MediaBody;\nMedia.Menu = MediaMenu;\nMedia.Figure = MediaFigure;\n\nexport default Media;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport './Media.scss';\n\ntype Props = {\n    /** Child elements */\n    children: React.Node,\n    /** Additional class names */\n    className?: string,\n};\n\nconst MediaBody = ({ className, children, ...rest }: Props) => (\n    <div className={classnames('bdl-Media-body', className)} {...rest}>\n        {children}\n    </div>\n);\n\nexport default MediaBody;\n","// @flow\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport './Media.scss';\n\ntype Props = {\n    /** Component to use as outermost element, e.g., 'div' */\n    as: React.ElementType,\n    /** Child elements */\n    children: React.Node,\n    /** Additional class names */\n    className?: string,\n};\n\nconst MediaFigure = ({ as: Wrapper, className, children, ...rest }: Props) => (\n    <Wrapper className={classnames('bdl-Media-figure', className)} {...rest}>\n        {children}\n    </Wrapper>\n);\n\n// Use this instead of default value because of param destructuring bug in Flow\n// that affects union types\n// https://github.com/facebook/flow/issues/5461\nMediaFigure.defaultProps = {\n    as: 'figure',\n};\n\nexport default MediaFigure;\n","// @flow\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport IconEllipsis from '../../icons/general/IconEllipsis';\nimport PlainButton from '../plain-button';\nimport DropdownMenu from '../dropdown-menu';\nimport { Menu } from '../menu';\nimport { bdlGray50 } from '../../styles/variables';\nimport './Media.scss';\n\ntype Props = {\n    /** Child elements */\n    children: React.Node,\n    /** Additional class names for the menu button */\n    className?: string,\n    /** Additional props for the DropdownMenu */\n    dropdownProps?: {},\n    /** is the dropdown menu button disabled */\n    isDisabled: boolean,\n    /** Additional props for the Menu */\n    menuProps?: {},\n};\n\nconst MediaMenu = ({ className, children, isDisabled, dropdownProps, menuProps, ...rest }: Props) => (\n    <DropdownMenu constrainToScrollParent isRightAligned {...dropdownProps}>\n        <PlainButton\n            isDisabled={isDisabled}\n            className={classnames('bdl-Media-menu', className)}\n            type=\"button\"\n            {...rest}\n        >\n            <IconEllipsis color={bdlGray50} height={16} width={16} />\n        </PlainButton>\n        <Menu {...menuProps}>{children}</Menu>\n    </DropdownMenu>\n);\n\nMediaMenu.defaultProps = {\n    dropdownProps: {},\n    isDisabled: false,\n    menuProps: {},\n};\n\nexport default MediaMenu;\n","// @flow\nexport { default } from './Media';\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport tabbable from 'tabbable';\nimport omit from 'lodash/omit';\n\nimport FocusTrap from '../focus-trap';\nimport LoadingIndicator from '../loading-indicator';\nimport Portal from '../portal';\nimport ModalDialog from './ModalDialog';\n\nimport './Modal.scss';\n\ntype Props = {\n    children: React.Node,\n    /** Additional CSS classname of the `.modal` element */\n    className?: string,\n    focusElementSelector?: string,\n    isLoading?: boolean,\n    isOpen?: boolean,\n    onBackdropClick?: Function,\n    /** `(event) => {}`. `event` can be of type `SyntheticKeyboardEvent|SyntheticMouseEvent`. */\n    onRequestClose?: Function,\n    /** modal usually use Portal as Portal stays if parent is removed, but it cannot retain DOM tree's resin props */\n    shouldNotUsePortal?: boolean,\n    style: {\n        backdrop?: Object,\n        dialog?: Object,\n    },\n    title?: React.Node,\n};\n\nclass Modal extends React.Component<Props> {\n    static defaultProps = {\n        style: {\n            backdrop: {},\n            dialog: {},\n        },\n    };\n\n    componentDidMount() {\n        const { isOpen } = this.props;\n\n        if (isOpen) {\n            this.onModalOpen();\n        }\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        const { isLoading, isOpen } = this.props;\n\n        // Set focus if modal is transitioning from closed -> open and/or loading -> not loading\n        if ((!prevProps.isOpen || prevProps.isLoading) && isOpen && !isLoading) {\n            this.onModalOpen();\n        }\n    }\n\n    /**\n     * Call props.onRequestClose when escape is pressed\n     * @param {SyntheticKeyboardEvent} event\n     */\n    onKeyDown = (event: SyntheticKeyboardEvent<>) => {\n        const { isOpen, onRequestClose } = this.props;\n        if (isOpen && onRequestClose && event.key === 'Escape') {\n            event.stopPropagation();\n            onRequestClose(event);\n        }\n    };\n\n    /**\n     * Call props.onRequestClose when backdrop is clicked\n     * @param {SyntheticMouseEvent} event\n     */\n    onBackdropClick = (event: SyntheticMouseEvent<HTMLDivElement>) => {\n        const { onRequestClose, onBackdropClick } = this.props;\n\n        if (onBackdropClick) {\n            onBackdropClick(event);\n        } else if (onRequestClose) {\n            onRequestClose(event);\n        }\n    };\n\n    /**\n     * Focuses on the correct element in the popup when it opens\n     */\n    onModalOpen = () => {\n        setTimeout(() => {\n            const { focusElementSelector } = this.props;\n            const focusElementSelectorTrimmed = focusElementSelector && focusElementSelector.trim();\n            if (focusElementSelectorTrimmed) {\n                this.focusElement(focusElementSelectorTrimmed);\n            } else {\n                this.focusFirstUsefulElement();\n            }\n        }, 0);\n    };\n\n    dialog: ?HTMLElement;\n\n    /**\n     * Focus the first useful element in the modal (i.e. not the close button, unless it's the only thing)\n     */\n    focusFirstUsefulElement = () => {\n        if (!this.dialog) {\n            return;\n        }\n        const tabbableEls = tabbable(this.dialog);\n        if (tabbableEls.length > 1) {\n            tabbableEls[1].focus();\n        } else if (tabbableEls.length > 0) {\n            tabbableEls[0].focus();\n        }\n    };\n\n    /**\n     * Focus the element that matches the selector in the modal\n     * @throws {Error} When the elementSelector does not match any element\n     */\n    focusElement = (elementSelector: string) => {\n        if (!this.dialog) {\n            return;\n        }\n        const el = this.dialog.querySelector(elementSelector);\n        if (el) {\n            el.focus();\n        } else {\n            throw new Error(`Could not find element matching selector ${elementSelector} to focus on.`);\n        }\n    };\n\n    render() {\n        const { className, isLoading, isOpen, onRequestClose, shouldNotUsePortal, style, ...rest } = this.props;\n\n        if (!isOpen) {\n            return null;\n        }\n\n        const bodyOverrideStyle = `\n            body {\n                overflow:hidden;\n            }\n        `;\n\n        // used `omit` here to prevent certain key/value pairs from going into the spread on `ModalDialog`\n        const modalProps = omit(rest, ['onBackdropClick', 'focusElementSelector']);\n\n        const WrapperComponent = shouldNotUsePortal ? 'div' : Portal;\n        // Render a style tag to prevent body from scrolling as long as the Modal is open\n        return (\n            <WrapperComponent className={classNames('modal', className)} onKeyDown={this.onKeyDown} tabIndex=\"-1\">\n                {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events */}\n                <div className=\"modal-backdrop\" onClick={this.onBackdropClick} style={style.backdrop} />\n                <FocusTrap className=\"modal-dialog-container\">\n                    {isLoading ? (\n                        <LoadingIndicator size=\"large\" />\n                    ) : (\n                        <ModalDialog\n                            modalRef={modalEl => {\n                                // This callback gets passed through as a regular prop since\n                                // ModalDialog is wrapped in a HOC\n                                this.dialog = modalEl;\n                            }}\n                            onRequestClose={onRequestClose}\n                            style={style.dialog}\n                            {...modalProps}\n                        />\n                    )}\n                </FocusTrap>\n                <style type=\"text/css\">{bodyOverrideStyle}</style>\n            </WrapperComponent>\n        );\n    }\n}\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport uniqueId from 'lodash/uniqueId';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport IconClose from '../../icons/general/IconClose';\n\nconst ALERT_TYPE = 'alert';\nconst DIALOG_TYPE = 'dialog';\n\nconst messages = defineMessages({\n    closeModalText: {\n        defaultMessage: 'Close Modal',\n        description: 'Button to close modal',\n        id: 'boxui.modalDialog.closeModalText',\n    },\n});\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n    closeButtonProps: Object,\n    intl: Object,\n    modalRef?: Function,\n    onRequestClose?: Function,\n    title?: React.Node,\n    type?: 'alert' | 'dialog',\n};\n\nclass ModalDialog extends React.Component<Props> {\n    static defaultProps = {\n        type: DIALOG_TYPE,\n        closeButtonProps: {},\n    };\n\n    /**\n     * Handles clicking on the close button\n     * @param {SyntheticMouseEvent} event\n     * @return {void}\n     */\n    onCloseButtonClick = (event: SyntheticMouseEvent<HTMLButtonElement>) => {\n        const { onRequestClose } = this.props;\n        if (onRequestClose) {\n            onRequestClose(event);\n        }\n    };\n\n    modalID: string = uniqueId('modal');\n\n    /**\n     * Renders a button if onRequestClose is passed in\n     * @return {ReactElement|null} - Returns the button, or null if the button shouldn't be rendered\n     */\n    renderCloseButton() {\n        const { closeButtonProps, onRequestClose, intl } = this.props;\n        const { formatMessage } = intl;\n        if (!onRequestClose) {\n            return null;\n        }\n\n        return (\n            // eslint-disable-next-line react/button-has-type\n            <button\n                {...closeButtonProps}\n                aria-label={formatMessage(messages.closeModalText)}\n                className=\"modal-close-button\"\n                onClick={this.onCloseButtonClick}\n            >\n                <IconClose color=\"#909090\" height={18} width={18} />\n            </button>\n        );\n    }\n\n    renderContent() {\n        const { children, type } = this.props;\n\n        if (type !== ALERT_TYPE) {\n            return <div className=\"modal-content\">{children}</div>;\n        }\n\n        const elements = React.Children.toArray(children);\n        if (elements.length !== 2) {\n            throw new Error('Alert modal must have exactly two children: A message and <ModalActions>');\n        }\n\n        return (\n            <div className=\"modal-content\">\n                <p id={`${this.modalID}-desc`}>{elements[0]}</p>\n                {elements[1]}\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            className,\n            modalRef,\n            title,\n            type,\n            ...rest // Useful for resin tagging, and other misc tags such as a11y\n        } = this.props;\n        const isAlertType = type === ALERT_TYPE;\n        const divProps = omit(rest, ['children', 'closeButtonProps', 'onRequestClose', 'intl']);\n\n        divProps.role = isAlertType ? 'alertdialog' : 'dialog';\n        divProps['aria-labelledby'] = `${this.modalID}-label`;\n        if (isAlertType) {\n            divProps['aria-describedby'] = `${this.modalID}-desc`;\n        }\n\n        return (\n            <div ref={modalRef} className={classNames('modal-dialog', className)} {...divProps}>\n                <div className=\"modal-header\">\n                    <h2 className=\"modal-title\" id={`${this.modalID}-label`}>\n                        {title}\n                    </h2>\n                </div>\n                {this.renderCloseButton()}\n                {this.renderContent()}\n            </div>\n        );\n    }\n}\n\nexport { ModalDialog as ModalDialogBase };\nexport default injectIntl(ModalDialog);\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { List } from 'immutable';\nimport noop from 'lodash/noop';\n\nimport parseCSV from '../../utils/parseCSV';\nimport Label from '../label';\nimport SelectorDropdown from '../selector-dropdown';\n\nimport PillSelector from './PillSelector';\nimport type { contactType as Contact } from '../../features/unified-share-modal/flowTypes';\nimport type { SelectOptionProp } from '../select-field/props';\nimport type { Option, OptionValue, SelectedOptions, SuggestedPillsFilter } from './flowTypes';\n\nimport './PillSelectorDropdown.scss';\n\ntype Props = {\n    /** If true, user can add pills not included in selector options */\n    allowCustomPills: boolean,\n    /** If true, pills with errors are parsed as pills also */\n    allowInvalidPills: boolean,\n    /** `DatalistItem` components for dropdown options to select */\n    children: React.Node,\n    /** CSS class for the component */\n    className?: string,\n    /** If true, the input control is disabled so no more input can be made */\n    disabled: boolean,\n    /** Index at which to insert a divider */\n    dividerIndex?: number,\n    /** A CSS selector matching the element to use as a boundary when auto-scrolling dropdown elements into view. When not provided, boundary will be determined by scrollIntoView utility function */\n    dropdownScrollBoundarySelector?: string,\n    /** Error message */\n    error?: React.Node,\n    /** Passed in by `SelectorDropdown` for accessibility */\n    inputProps: Object,\n    /** Input label */\n    label: React.Node,\n    /** Called when pill selector input is blurred */\n    onBlur: (event: SyntheticInputEvent<HTMLInputElement>) => void,\n    /** Should update selectorOptions based on the given input value */\n    onInput: Function,\n    /** Called when creating pills */\n    onPillCreate: (pills: Array<SelectOptionProp | Contact>) => void,\n    /** Should update selectedOptions given the option and index to remove */\n    onRemove: Function,\n    /** Should update selectedOptions given an array of pills and the event */\n    onSelect: Function,\n    /** Function adds a collaborator from suggested collabs to form */\n    onSuggestedPillAdd?: Function,\n    /** Optional title of the overlay */\n    overlayTitle?: string,\n    /** function to parse user input into an array of items to be validated and then added to pill selector. If this function is not passed, a default CSV parser is used. */\n    parseItems?: Function,\n    /** A placeholder to show in the input when there are no pills */\n    placeholder: string,\n    /** Array or Immutable list with data for the selected options shown as pills */\n    selectedOptions: SelectedOptions,\n    /** Array or Immutable list with data for the dropdown options to select */\n    selectorOptions: Array<Object> | List<Object>,\n    /** Determines whether or not input text is cleared automatically when it does not result in new pills being added */\n    shouldClearUnmatchedInput?: boolean,\n    /** Determines whether or not the first item is highlighted automatically when the dropdown opens */\n    shouldSetActiveItemOnOpen?: boolean,\n    /** Array of suggested collaborators */\n    suggestedPillsData?: Array<Object>,\n    /** String decribes the datapoint to filter by so that items in the form are not shown in suggestions. */\n    suggestedPillsFilter?: SuggestedPillsFilter,\n    /** String describes the suggested pills */\n    suggestedPillsTitle?: string,\n    /** Validate the given input value, and update `error` prop if necessary */\n    validateForError?: Function,\n    /** Called to check if pill item data is valid. The `item` is passed in. */\n    validator: (option: Option | OptionValue) => boolean,\n};\n\ntype State = {\n    inputValue: string,\n    isInCompositionMode: boolean,\n};\n\nclass PillSelectorDropdown extends React.Component<Props, State> {\n    static defaultProps = {\n        allowCustomPills: false,\n        allowInvalidPills: false,\n        disabled: false,\n        error: '',\n        inputProps: {},\n        label: '',\n        onBlur: noop,\n        onPillCreate: noop,\n        placeholder: '',\n        selectedOptions: [],\n        selectorOptions: [],\n        shouldClearUnmatchedInput: false,\n        shouldSetActiveItemOnOpen: false,\n        validator: () => true,\n    };\n\n    state = { inputValue: '', isInCompositionMode: false };\n\n    parsePills = (inputValue: string) => {\n        const { allowInvalidPills, parseItems, validator } = this.props;\n        let pills = parseItems ? parseItems(inputValue) : parseCSV(inputValue);\n\n        if (!pills) {\n            return [];\n        }\n\n        if (!allowInvalidPills) {\n            pills = pills.filter(pill => validator(pill));\n        }\n\n        const normalizedPills = pills.map(pill =>\n            typeof pill === 'string'\n                ? {\n                      displayText: pill,\n                      text: pill, // deprecated, left for backwards compatibility\n                      value: pill,\n                  }\n                : pill,\n        );\n        return normalizedPills;\n    };\n\n    addPillsFromInput = (inputValue: string) => {\n        const {\n            allowCustomPills,\n            onPillCreate,\n            onSelect,\n            selectedOptions,\n            shouldClearUnmatchedInput,\n            validateForError,\n        } = this.props;\n\n        // Do nothing if custom pills are not allowed\n        if (!allowCustomPills) {\n            return;\n        }\n\n        // Parse pills from input\n        const pills = this.parsePills(inputValue);\n\n        // \"Select\" the pills\n        if (pills.length > 0) {\n            onSelect(pills);\n            onPillCreate(pills);\n\n            this.resetInputValue();\n        } else {\n            if (validateForError && (inputValue !== '' || selectedOptions.length === 0)) {\n                /**\n                 * If no pills were added, but an inputValue exists or\n                 * there are no pills selected, check for errors\n                 */\n                validateForError(inputValue);\n            }\n            if (shouldClearUnmatchedInput) {\n                this.resetInputValue();\n            }\n        }\n    };\n\n    handleBlur = (event: SyntheticInputEvent<HTMLInputElement>) => {\n        const { onBlur } = this.props;\n        const { inputValue } = this.state;\n        this.addPillsFromInput(inputValue);\n        onBlur(event);\n    };\n\n    handleInput = (event: SyntheticInputEvent<HTMLInputElement> | { target: HTMLInputElement | Object }) => {\n        const { target } = event;\n        const { value } = target;\n        this.setState({ inputValue: value });\n        this.props.onInput(value, event);\n    };\n\n    handleEnter = (event: SyntheticEvent<>) => {\n        const { isInCompositionMode, inputValue } = this.state;\n        if (!isInCompositionMode) {\n            event.preventDefault();\n            this.addPillsFromInput(inputValue);\n        }\n    };\n\n    handlePaste = (event: SyntheticClipboardEvent<HTMLInputElement>) => {\n        event.preventDefault();\n\n        const inputValue: string = event.clipboardData.getData('text');\n        this.setState({ inputValue });\n        this.props.onInput(inputValue, event);\n        this.addPillsFromInput(inputValue);\n    };\n\n    handleSelect = (index: number, event: SyntheticEvent<>) => {\n        const { onPillCreate, onSelect, selectorOptions } = this.props;\n        const selectedOption =\n            // $FlowFixMe\n            typeof selectorOptions.get === 'function' ? selectorOptions.get(index) : selectorOptions[index];\n\n        onSelect([selectedOption], event);\n        onPillCreate([selectedOption]);\n\n        this.handleInput({ target: { value: '' } });\n    };\n\n    handleCompositionStart = () => {\n        this.setState({ isInCompositionMode: true });\n    };\n\n    handleCompositionEnd = () => {\n        this.setState({ isInCompositionMode: false });\n    };\n\n    resetInputValue = () => {\n        const { onInput } = this.props;\n\n        this.setState({ inputValue: '' });\n        onInput('');\n    };\n\n    render() {\n        const {\n            allowInvalidPills,\n            children,\n            className,\n            disabled,\n            dividerIndex,\n            dropdownScrollBoundarySelector,\n            error,\n            inputProps,\n            label,\n            onRemove,\n            onSuggestedPillAdd,\n            overlayTitle,\n            placeholder,\n            selectedOptions,\n            suggestedPillsData,\n            suggestedPillsFilter,\n            suggestedPillsTitle,\n            shouldSetActiveItemOnOpen,\n            validator,\n        } = this.props;\n\n        return (\n            <Label text={label}>\n                <SelectorDropdown\n                    className={classNames('pill-selector-wrapper', className)}\n                    dividerIndex={dividerIndex}\n                    onEnter={this.handleEnter}\n                    onSelect={this.handleSelect}\n                    overlayTitle={overlayTitle}\n                    scrollBoundarySelector={dropdownScrollBoundarySelector}\n                    shouldSetActiveItemOnOpen={shouldSetActiveItemOnOpen}\n                    selector={\n                        <PillSelector\n                            onChange={noop} // fix console error\n                            onCompositionEnd={this.handleCompositionEnd}\n                            onCompositionStart={this.handleCompositionStart}\n                            {...inputProps}\n                            allowInvalidPills={allowInvalidPills}\n                            disabled={disabled}\n                            error={error}\n                            onBlur={this.handleBlur}\n                            onInput={this.handleInput}\n                            onPaste={this.handlePaste}\n                            onRemove={onRemove}\n                            onSuggestedPillAdd={onSuggestedPillAdd}\n                            placeholder={placeholder}\n                            selectedOptions={selectedOptions}\n                            suggestedPillsData={suggestedPillsData}\n                            suggestedPillsFilter={suggestedPillsFilter}\n                            suggestedPillsTitle={suggestedPillsTitle}\n                            validator={validator}\n                            value={this.state.inputValue}\n                        />\n                    }\n                >\n                    {children}\n                </SelectorDropdown>\n            </Label>\n        );\n    }\n}\n\nexport default PillSelectorDropdown;\n","// extracted by mini-css-extract-plugin","// @flow\nimport React from 'react';\nimport { createPortal } from 'react-dom';\n\ntype Props = {\n    container: ?HTMLElement,\n};\n\nclass Portal extends React.PureComponent<Props> {\n    static defaultProps = {\n        container: document.body,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.container = this.props.container;\n        this.layer = document.createElement('div');\n        this.layer.setAttribute('data-portal', '');\n        if (this.container && this.layer) {\n            this.container.appendChild(this.layer);\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.container && this.layer) {\n            this.container.removeChild(this.layer);\n        }\n        this.layer = null;\n    }\n\n    layer: ?HTMLDivElement;\n\n    container: ?HTMLElement;\n\n    render() {\n        const { container, ...elementProps }: Props = this.props;\n        if (!this.layer) {\n            return null;\n        }\n\n        return createPortal(<div {...elementProps} />, this.layer);\n    }\n}\n\nexport default Portal;\n","// @flow\nexport { default } from './Portal';\n","// @flow\nexport { default } from './PrimaryButton';\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport uniqueId from 'lodash/uniqueId';\n\nimport Label from '../label';\nimport Tooltip from '../tooltip';\n\nimport './TextArea.scss';\n\ntype Props = {\n    className?: string,\n    error?: React.Node,\n    /** Hides the label */\n    hideLabel?: boolean,\n    /** Hides (optional) text from the label */\n    hideOptionalLabel?: boolean,\n    /** Makes the text area value required */\n    isRequired?: boolean,\n    /** Is text area resizable */\n    isResizable?: boolean,\n    /** Label displayed for the text area */\n    label: React.Node,\n    textareaRef?: Function, // @TODO: eventually rename to innerRef for consistancy across all form elements\n};\n\nconst TextArea = ({\n    className = '',\n    error,\n    hideLabel,\n    hideOptionalLabel,\n    isRequired,\n    isResizable,\n    label,\n    textareaRef,\n    ...rest\n}: Props) => {\n    const hasError = !!error;\n    const classes = classNames(className, 'text-area-container', {\n        'show-error': hasError,\n    });\n\n    const errorMessageID = React.useRef(uniqueId('errorMessage')).current;\n    const ariaAttrs = {\n        'aria-invalid': hasError,\n        'aria-required': isRequired,\n        'aria-errormessage': errorMessageID,\n    };\n\n    return (\n        <div className={classes}>\n            <Label hideLabel={hideLabel} showOptionalText={!hideOptionalLabel && !isRequired} text={label}>\n                <Tooltip isShown={hasError} position=\"bottom-left\" text={error || ''} theme=\"error\">\n                    <textarea\n                        ref={textareaRef}\n                        required={isRequired}\n                        style={{ resize: isResizable ? '' : 'none' }}\n                        {...ariaAttrs}\n                        {...rest}\n                    />\n                </Tooltip>\n                <span id={errorMessageID} className=\"accessibility-hidden\" role=\"alert\">\n                    {error}\n                </span>\n            </Label>\n        </div>\n    );\n};\n\nTextArea.displayName = 'TextArea';\n\nexport type TextAreaProps = Props;\nexport default TextArea;\n","// extracted by mini-css-extract-plugin","// @flow\n\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport type { FieldProps } from 'formik';\n\nimport TextAreaPrimitive from './TextArea';\nimport type { TextAreaProps } from './TextArea';\n\ntype Props = TextAreaProps & FieldProps & { innerRef?: (instance: any) => void };\n\nconst TextAreaField = ({ field, form, innerRef, isRequired, ...rest }: Props) => {\n    const { name } = field;\n    const { errors, touched } = form;\n    const isTouched = getProp(touched, name);\n    const error = isTouched ? getProp(errors, name) : null;\n    return (\n        <TextAreaPrimitive {...field} {...rest} textareaRef={innerRef} error={error} hideOptionalLabel={isRequired} />\n    );\n};\n\nexport default TextAreaField;\n","// @flow\nexport { default } from './TextArea';\nexport { default as TextAreaField } from './TextAreaField';\n","/**\n * @flow\n * @file Activity feed sidebar component\n * @author Box\n */\n\nimport * as React from 'react';\nimport debounce from 'lodash/debounce';\nimport flow from 'lodash/flow';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport ActivityFeed from './activity-feed';\nimport AddTaskButton from './AddTaskButton';\nimport API from '../../api';\nimport messages from '../common/messages';\nimport SidebarContent from './SidebarContent';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { getBadUserError, getBadItemError } from '../../utils/error';\nimport { mark } from '../../utils/performance';\nimport { withAPIContext } from '../common/api-context';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withFeatureConsumer, isFeatureEnabled } from '../common/feature-checking';\nimport { withLogger } from '../common/logger';\nimport {\n    DEFAULT_COLLAB_DEBOUNCE,\n    ORIGIN_ACTIVITY_SIDEBAR,\n    SIDEBAR_VIEW_ACTIVITY,\n    TASK_COMPLETION_RULE_ALL,\n} from '../../constants';\nimport type { TaskCompletionRule, TaskType, TaskNew, TaskUpdatePayload } from '../../common/types/tasks';\nimport type { FocusableFeedItemType } from '../../common/types/feed';\nimport './ActivitySidebar.scss';\n\ntype ExternalProps = {\n    activeFeedEntryId?: string,\n    activeFeedEntryType?: FocusableFeedItemType,\n    currentUser?: User,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    onCommentCreate: Function,\n    onCommentDelete: (comment: Comment) => any,\n    onCommentUpdate: () => any,\n    onTaskAssignmentUpdate: Function,\n    onTaskCreate: Function,\n    onTaskDelete: (id: string) => any,\n    onTaskUpdate: () => any,\n} & ErrorContextProps;\n\ntype PropsWithoutContext = {\n    elementId: string,\n    file: BoxItem,\n    isDisabled: boolean,\n    onVersionHistoryClick?: Function,\n    translations?: Translations,\n} & ExternalProps &\n    WithLoggerProps;\n\ntype Props = {\n    api: API,\n    features: FeatureConfig,\n} & PropsWithoutContext;\n\ntype State = {\n    activityFeedError?: Errors,\n    approverSelectorContacts: SelectorItems,\n    currentUser?: User,\n    currentUserError?: Errors,\n    feedItems?: FeedItems,\n    mentionSelectorContacts?: SelectorItems,\n};\n\nexport const activityFeedInlineError: Errors = {\n    inlineError: {\n        title: messages.errorOccured,\n        content: messages.activityFeedItemApiError,\n    },\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_ACTIVITY_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass ActivitySidebar extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        isDisabled: false,\n        onCommentCreate: noop,\n        onCommentDelete: noop,\n        onCommentUpdate: noop,\n        onTaskAssignmentUpdate: noop,\n        onTaskCreate: noop,\n        onTaskDelete: noop,\n        onTaskUpdate: noop,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        // eslint-disable-next-line react/prop-types\n        const { logger } = this.props;\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { currentUser } = this.props;\n        this.fetchFeedItems(true);\n        this.fetchCurrentUser(currentUser);\n    }\n\n    /**\n     * Fetches a Users info\n     *\n     * @private\n     * @param {User} [user] - Box User. If missing, gets user that the current token was generated for.\n     * @return {void}\n     */\n    fetchCurrentUser(user?: User, shouldDestroy?: boolean = false): void {\n        const { api, file } = this.props;\n\n        if (!file) {\n            throw getBadItemError();\n        }\n\n        if (typeof user === 'undefined') {\n            api.getUsersAPI(shouldDestroy).getUser(\n                file.id,\n                this.fetchCurrentUserSuccessCallback,\n                this.fetchCurrentUserErrorCallback,\n            );\n        } else {\n            this.setState({ currentUser: user, currentUserError: undefined });\n        }\n    }\n\n    /**\n     * Success callback for fetching feed items\n     */\n    feedSuccessCallback = (): void => {\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Error callback for fetching feed items\n     *\n     * @param {Error} e - the error which occured\n     * @param {Error} code - the code for the error\n     * @param {Object} contextInfo - the context info for the error\n     */\n    feedErrorCallback = (e: ElementsXhrError, code: string, contextInfo?: Object) => {\n        this.errorCallback(e, code, contextInfo);\n        this.fetchFeedItems();\n    };\n\n    createTask = (\n        message: string,\n        assignees: SelectorItems,\n        taskType: TaskType,\n        dueAt: ?string,\n        completionRule: TaskCompletionRule,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ): void => {\n        const { currentUser } = this.state;\n        const { file, api } = this.props;\n\n        if (!currentUser) {\n            throw getBadUserError();\n        }\n        const errorCallback = (e, code, contextInfo) => {\n            if (onError) {\n                onError(e, code, contextInfo);\n            }\n            this.feedErrorCallback(e, code, contextInfo);\n        };\n        const successCallback = () => {\n            if (onSuccess) {\n                onSuccess();\n            }\n            this.feedSuccessCallback();\n        };\n\n        api.getFeedAPI(false).createTaskNew(\n            file,\n            currentUser,\n            message,\n            assignees,\n            taskType,\n            dueAt,\n            completionRule,\n            successCallback,\n            errorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    deleteTask = (task: TaskNew): void => {\n        const { file, api, onTaskDelete } = this.props;\n        api.getFeedAPI(false).deleteTaskNew(\n            file,\n            task,\n            (taskId: string) => {\n                this.feedSuccessCallback();\n                onTaskDelete(taskId);\n            },\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    updateTask = (task: TaskUpdatePayload, onSuccess: ?Function, onError: ?Function): void => {\n        const { file, api, onTaskUpdate } = this.props;\n        const errorCallback = (e, code) => {\n            if (onError) {\n                onError(e, code);\n            }\n            this.feedErrorCallback(e, code);\n        };\n        const successCallback = () => {\n            this.feedSuccessCallback();\n\n            if (onSuccess) {\n                onSuccess();\n            }\n\n            onTaskUpdate();\n        };\n\n        api.getFeedAPI(false).updateTaskNew(file, task, successCallback, errorCallback);\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    updateTaskAssignment = (taskId: string, taskAssignmentId: string, status: TaskAssignmentStatus): void => {\n        const { file, api } = this.props;\n\n        api.getFeedAPI(false).updateTaskCollaborator(\n            file,\n            taskId,\n            taskAssignmentId,\n            status,\n            this.feedSuccessCallback,\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Deletes a comment via the API.\n     *\n     * @param {Object} args - A subset of the comment\n     * @return void\n     */\n    deleteComment = ({ id, permissions }: { id: string, permissions: BoxItemPermission }): void => {\n        const { file, api, onCommentDelete } = this.props;\n\n        api.getFeedAPI(false).deleteComment(\n            file,\n            id,\n            permissions,\n            (comment: Comment) => {\n                this.feedSuccessCallback();\n                onCommentDelete(comment);\n            },\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    updateComment = (\n        id: string,\n        text: string,\n        hasMention: boolean,\n        permissions: BoxItemPermission,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ): void => {\n        const { file, api, onCommentUpdate } = this.props;\n\n        const errorCallback = (e, code) => {\n            if (onError) {\n                onError(e, code);\n            }\n            this.feedErrorCallback(e, code);\n        };\n\n        const successCallback = () => {\n            this.feedSuccessCallback();\n            if (onSuccess) {\n                onSuccess();\n            }\n            onCommentUpdate();\n        };\n\n        api.getFeedAPI(false).updateComment(file, id, text, hasMention, permissions, successCallback, errorCallback);\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Posts a new comment to the API\n     *\n     * @param {string} text - The comment's text\n     * @param {boolean} hasMention - The comment's text\n     * @return {void}\n     */\n    createComment = (text: string, hasMention: boolean): void => {\n        const { file, api, onCommentCreate } = this.props;\n        const { currentUser } = this.state;\n\n        if (!currentUser) {\n            throw getBadUserError();\n        }\n\n        api.getFeedAPI(false).createComment(\n            file,\n            currentUser,\n            text,\n            hasMention,\n            (comment: Comment) => {\n                onCommentCreate(comment);\n                this.feedSuccessCallback();\n            },\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Deletes an app activity item via the API.\n     *\n     * @param {Object} args - A subset of the app activity\n     * @return void\n     */\n    deleteAppActivity = ({ id }: { id: string }): void => {\n        const { file, api } = this.props;\n\n        api.getFeedAPI(false).deleteAppActivity(file, id, this.feedSuccessCallback, this.feedErrorCallback);\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Fetches the feed items for the sidebar\n     *\n     * @param {boolean} shouldDestroy true if the api factory should be destroyed\n     */\n    fetchFeedItems(shouldRefreshCache: boolean = false, shouldDestroy: boolean = false) {\n        const { file, api, features } = this.props;\n        const shouldShowAppActivity = isFeatureEnabled(features, 'activityFeed.appActivity.enabled');\n        api.getFeedAPI(shouldDestroy).feedItems(\n            file,\n            shouldRefreshCache,\n            this.fetchFeedItemsSuccessCallback,\n            this.fetchFeedItemsErrorCallback,\n            this.errorCallback,\n            { shouldShowAppActivity },\n        );\n    }\n\n    /**\n     * Handles a successful feed API fetch\n     *\n     * @private\n     * @param {Array} feedItems - the feed items\n     * @return {void}\n     */\n    fetchFeedItemsSuccessCallback = (feedItems: FeedItems): void => {\n        this.setState({ feedItems, activityFeedError: undefined });\n    };\n\n    /**\n     * Handles a failed feed item fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @return {void}\n     */\n    fetchFeedItemsErrorCallback = (feedItems: FeedItems): void => {\n        this.setState({\n            feedItems,\n            activityFeedError: activityFeedInlineError,\n        });\n    };\n\n    /**\n     * Network error callback\n     *\n     * @private\n     * @param {Error} error - Error object\n     * @param {Error} code - the code for the error\n     * @param {Object} contextInfo - the context info for the error\n     * @return {void}\n     */\n    errorCallback = (error: ElementsXhrError, code: string, contextInfo: Object = {}): void => {\n        /* eslint-disable no-console */\n        console.error(error);\n        /* eslint-enable no-console */\n\n        // eslint-disable-next-line react/prop-types\n        this.props.onError(error, code, contextInfo);\n    };\n\n    /**\n     * User fetch success callback\n     *\n     * @private\n     * @param {Object} currentUser - User info object\n     * @return {void}\n     */\n    fetchCurrentUserSuccessCallback = (currentUser: User): void => {\n        this.setState({ currentUser, currentUserError: undefined });\n    };\n\n    /**\n     * File approver contacts fetch success callback\n     *\n     * @private\n     * @param {BoxItemCollection} collaborators - Collaborators response data\n     * @return {void}\n     */\n    getApproverContactsSuccessCallback = (collaborators: Collaborators): void => {\n        const { entries } = collaborators;\n        this.setState({ approverSelectorContacts: entries });\n    };\n\n    /**\n     * File @mention contacts fetch success callback\n     *\n     * @private\n     * @param {BoxItemCollection} collaborators - Collaborators response data\n     * @return {void}\n     */\n    getMentionContactsSuccessCallback = (collaborators: Collaborators): void => {\n        const { entries } = collaborators;\n        this.setState({ mentionSelectorContacts: entries });\n    };\n\n    /**\n     * File @mention contacts fetch success callback\n     *\n     * @private\n     * @param {string} searchStr - Search string to filter file collaborators by\n     * @return {void}\n     */\n    getApproverWithQuery = debounce(\n        this.getCollaborators.bind(this, this.getApproverContactsSuccessCallback, this.errorCallback),\n        DEFAULT_COLLAB_DEBOUNCE,\n    );\n\n    /**\n     * Fetches file @mention's\n     *\n     * @private\n     * @param {string} searchStr - Search string to filter file collaborators by\n     * @return {void}\n     */\n    getMentionWithQuery = debounce(\n        this.getCollaborators.bind(this, this.getMentionContactsSuccessCallback, this.errorCallback),\n        DEFAULT_COLLAB_DEBOUNCE,\n    );\n\n    /**\n     * Fetches file collaborators\n     *\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @param {string} searchStr - the search string\n     * @return {void}\n     */\n    getCollaborators(successCallback: Function, errorCallback: ElementsErrorCallback, searchStr: string): void {\n        // Do not fetch without filter\n        const { file, api } = this.props;\n        if (!searchStr || searchStr.trim() === '') {\n            return;\n        }\n\n        api.getFileCollaboratorsAPI(true).getFileCollaborators(file.id, successCallback, errorCallback, {\n            filter_term: searchStr,\n        });\n    }\n\n    /**\n     * Handles a failed file user info fetch\n     *\n     * @private\n     * @param {ElementsXhrError} e - API error\n     * @return {void}\n     */\n    fetchCurrentUserErrorCallback = (e: ElementsXhrError, code: string) => {\n        this.setState({\n            currentUser: undefined,\n            currentUserError: {\n                maskError: {\n                    errorHeader: messages.currentUserErrorHeaderMessage,\n                    errorSubHeader: messages.defaultErrorMaskSubHeaderMessage,\n                },\n            },\n        });\n\n        this.errorCallback(e, code, {\n            error: e,\n        });\n    };\n\n    /**\n     * Gets the user avatar URL\n     *\n     * @param {string} userId the user id\n     * @param {string} fileId the file id\n     * @return the user avatar URL string for a given user with access token attached\n     */\n    getAvatarUrl = async (userId: string): Promise<?string> => {\n        const { file, api } = this.props;\n\n        return api.getUsersAPI(false).getAvatarUrlWithAccessToken(userId, file.id);\n    };\n\n    onTaskModalClose = () => {\n        this.setState({\n            approverSelectorContacts: [],\n        });\n    };\n\n    refresh(): void {\n        this.fetchFeedItems(true);\n    }\n\n    renderAddTaskButton = () => {\n        const { isDisabled } = this.props;\n        const { approverSelectorContacts } = this.state;\n        const { getApproverWithQuery, getAvatarUrl, createTask, onTaskModalClose } = this;\n        const taskFormProps = {\n            approverSelectorContacts,\n            completionRule: TASK_COMPLETION_RULE_ALL,\n            createTask,\n            getApproverWithQuery,\n            getAvatarUrl,\n            id: '',\n            message: '',\n            approvers: [],\n        };\n        return (\n            <AddTaskButton isDisabled={isDisabled} onTaskModalClose={onTaskModalClose} taskFormProps={taskFormProps} />\n        );\n    };\n\n    render() {\n        const {\n            elementId,\n            file,\n            isDisabled = false,\n            onVersionHistoryClick,\n            getUserProfileUrl,\n            activeFeedEntryId,\n            activeFeedEntryType,\n        } = this.props;\n        const {\n            currentUser,\n            approverSelectorContacts,\n            mentionSelectorContacts,\n            feedItems,\n            activityFeedError,\n            currentUserError,\n        } = this.state;\n\n        return (\n            <SidebarContent\n                actions={this.renderAddTaskButton()}\n                className=\"bcs-activity\"\n                elementId={elementId}\n                sidebarView={SIDEBAR_VIEW_ACTIVITY}\n                title={<FormattedMessage {...messages.sidebarActivityTitle} />}\n            >\n                <ActivityFeed\n                    file={file}\n                    activityFeedError={activityFeedError}\n                    approverSelectorContacts={approverSelectorContacts}\n                    mentionSelectorContacts={mentionSelectorContacts}\n                    currentUser={currentUser}\n                    isDisabled={isDisabled}\n                    onAppActivityDelete={this.deleteAppActivity}\n                    onCommentCreate={this.createComment}\n                    onCommentDelete={this.deleteComment}\n                    onCommentUpdate={this.updateComment}\n                    onTaskCreate={this.createTask}\n                    onTaskDelete={this.deleteTask}\n                    onTaskUpdate={this.updateTask}\n                    onTaskModalClose={this.onTaskModalClose}\n                    onTaskAssignmentUpdate={this.updateTaskAssignment}\n                    getApproverWithQuery={this.getApproverWithQuery}\n                    getMentionWithQuery={this.getMentionWithQuery}\n                    onVersionHistoryClick={onVersionHistoryClick}\n                    getAvatarUrl={this.getAvatarUrl}\n                    getUserProfileUrl={getUserProfileUrl}\n                    feedItems={feedItems}\n                    currentUserError={currentUserError}\n                    activeFeedEntryId={activeFeedEntryId}\n                    activeFeedEntryType={activeFeedEntryType}\n                />\n            </SidebarContent>\n        );\n    }\n}\n\nexport type ActivitySidebarProps = ExternalProps;\nexport { ActivitySidebar as ActivitySidebarComponent };\nexport default flow([\n    withLogger(ORIGIN_ACTIVITY_SIDEBAR),\n    withErrorBoundary(ORIGIN_ACTIVITY_SIDEBAR),\n    withAPIContext,\n    withFeatureConsumer,\n])(ActivitySidebar);\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport { withRouter, type RouterHistory } from 'react-router-dom';\nimport AddTaskMenu from './AddTaskMenu';\nimport TaskModal from './TaskModal';\nimport { TASK_TYPE_APPROVAL } from '../../constants';\nimport type { TaskFormProps } from './activity-feed/task-form/TaskForm';\nimport type { TaskType } from '../../common/types/tasks';\n\ntype Props = {|\n    history: RouterHistory,\n    isDisabled: boolean,\n    onTaskModalClose: () => void,\n    taskFormProps: TaskFormProps,\n|};\n\ntype State = {\n    error: ?ElementsXhrError,\n    isTaskFormOpen: boolean,\n    taskType: TaskType,\n};\n\nclass AddTaskButton extends React.Component<Props, State> {\n    state = {\n        error: null,\n        isTaskFormOpen: false,\n        taskType: TASK_TYPE_APPROVAL,\n    };\n\n    static defaultProps = {\n        isDisabled: false,\n    };\n\n    /*\n    1. Pushing the open state into history keeps the sidebar open upon resize and refresh\n    2. Preventing the sidebar from closing keeps the task modal open upon edit and resize\n    */\n    handleClickMenuItem = (taskType: TaskType) => {\n        this.props.history.replace({ state: { open: true } });\n        this.setState({ isTaskFormOpen: true, taskType });\n    };\n\n    handleModalClose = () => {\n        const { onTaskModalClose } = this.props;\n        this.setState({ isTaskFormOpen: false, error: null });\n        onTaskModalClose();\n    };\n\n    handleSubmitError = (e: ElementsXhrError) => this.setState({ error: e });\n\n    render() {\n        const { isDisabled, taskFormProps } = this.props;\n        const { isTaskFormOpen, taskType, error } = this.state;\n\n        return (\n            <>\n                <AddTaskMenu isDisabled={isDisabled} onMenuItemClick={this.handleClickMenuItem} />\n                <TaskModal\n                    error={error}\n                    onSubmitError={this.handleSubmitError}\n                    onSubmitSuccess={this.handleModalClose}\n                    onModalClose={this.handleModalClose}\n                    isTaskFormOpen={isTaskFormOpen}\n                    taskFormProps={taskFormProps}\n                    taskType={taskType}\n                />\n            </>\n        );\n    }\n}\n\nexport { AddTaskButton as AddTaskButtonComponent };\nexport default withRouter(AddTaskButton);\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button from '../../components/button';\nimport DropdownMenu from '../../components/dropdown-menu';\nimport MenuToggle from '../../components/dropdown-menu/MenuToggle';\nimport { Menu, MenuItem } from '../../components/menu';\nimport IconTaskApproval from '../../icons/two-toned/IconTaskApproval';\nimport IconTaskGeneral from '../../icons/two-toned/IconTaskGeneral';\nimport messages from './messages';\nimport { TASK_TYPE_APPROVAL, TASK_TYPE_GENERAL } from '../../constants';\nimport type { TaskType } from '../../common/types/tasks';\n\nimport './AddTaskMenu.scss';\n\ntype Props = {\n    isDisabled: boolean,\n    onMenuItemClick: (taskType: TaskType) => void,\n};\n\nconst AddTaskMenu = (props: Props) => (\n    <DropdownMenu constrainToScrollParent isRightAligned>\n        <Button isDisabled={props.isDisabled} type=\"button\">\n            <MenuToggle>\n                <FormattedMessage {...messages.tasksAddTask} />\n            </MenuToggle>\n        </Button>\n        <Menu className=\"bcs-AddTaskMenu\">\n            <MenuItem className=\"bcs-AddTaskMenu-menuItem\" onClick={() => props.onMenuItemClick(TASK_TYPE_GENERAL)}>\n                <div className=\"bcs-AddTaskMenu-icon\">\n                    <IconTaskGeneral width={30} height={30} />\n                </div>\n                <div>\n                    <div className=\"bcs-AddTaskMenu-title\">\n                        <FormattedMessage {...messages.taskAddTaskGeneral} />\n                    </div>\n                    <div className=\"bcs-AddTaskMenu-description\">\n                        <FormattedMessage {...messages.taskAddTaskGeneralDescription} />\n                    </div>\n                </div>\n            </MenuItem>\n            <MenuItem className=\"bcs-AddTaskMenu-menuItem\" onClick={() => props.onMenuItemClick(TASK_TYPE_APPROVAL)}>\n                <div className=\"bcs-AddTaskMenu-icon\">\n                    <IconTaskApproval width={30} height={30} />\n                </div>\n                <div>\n                    <div className=\"bcs-AddTaskMenu-title\">\n                        <FormattedMessage {...messages.taskAddTaskApproval} />\n                    </div>\n                    <div className=\"bcs-AddTaskMenu-description\">\n                        <FormattedMessage {...messages.taskAddTaskApprovalDescription} />\n                    </div>\n                </div>\n            </MenuItem>\n        </Menu>\n    </DropdownMenu>\n);\n\nexport default AddTaskMenu;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport type { MessageDescriptor } from 'react-intl';\nimport Modal from '../../components/modal/Modal';\nimport TaskForm from './activity-feed/task-form';\nimport messages from './messages';\nimport { TASK_EDIT_MODE_CREATE, TASK_TYPE_APPROVAL, TASK_TYPE_GENERAL } from '../../constants';\nimport type { TaskFormProps } from './activity-feed/task-form/TaskForm';\nimport type { TaskType, TaskEditMode } from '../../common/types/tasks';\n\ntype TaskModalProps = {\n    editMode?: TaskEditMode,\n    error: ?ElementsXhrError,\n    isTaskFormOpen: boolean,\n    onModalClose: () => void,\n    onSubmitError: (e: ElementsXhrError) => void,\n    onSubmitSuccess: () => any,\n    taskFormProps: TaskFormProps,\n    taskType: TaskType,\n};\n\nfunction getMessageForModalTitle(taskType: TaskType, mode: TaskEditMode): MessageDescriptor {\n    switch (taskType) {\n        case TASK_TYPE_GENERAL:\n            return mode === TASK_EDIT_MODE_CREATE\n                ? messages.tasksCreateGeneralTaskFormTitle\n                : messages.tasksEditGeneralTaskFormTitle;\n        case TASK_TYPE_APPROVAL:\n        default:\n            return mode === TASK_EDIT_MODE_CREATE\n                ? messages.tasksCreateApprovalTaskFormTitle\n                : messages.tasksEditApprovalTaskFormTitle;\n    }\n}\n\nconst focusTargetSelector: string = '.task-modal textarea, .task-modal input';\n\nconst TaskModal = (props: TaskModalProps) => {\n    const {\n        editMode = TASK_EDIT_MODE_CREATE,\n        error,\n        onSubmitError,\n        onSubmitSuccess,\n        onModalClose,\n        taskType,\n        isTaskFormOpen,\n        taskFormProps,\n    } = props;\n    // Note: Modal throws an error if this fails to find an element!\n    return (\n        <Modal\n            className=\"be-modal task-modal\"\n            data-testid=\"create-task-modal\"\n            focusElementSelector={focusTargetSelector}\n            isOpen={isTaskFormOpen}\n            onRequestClose={onModalClose}\n            title={<FormattedMessage {...getMessageForModalTitle(taskType, editMode)} />}\n        >\n            <div className=\"be\">\n                <TaskForm\n                    editMode={editMode}\n                    error={error}\n                    onCancel={onModalClose}\n                    onSubmitError={onSubmitError}\n                    onSubmitSuccess={onSubmitSuccess}\n                    taskType={taskType}\n                    {...taskFormProps}\n                />\n            </div>\n        </Modal>\n    );\n};\n\nexport default TaskModal;\n","/**\n * @flow\n * @file avatar component\n * @author Box\n */\nimport * as React from 'react';\nimport AvatarComponent from '../../../components/avatar';\n\ntype Props = {\n    className?: string,\n    getAvatarUrl?: GetAvatarUrlCallback,\n    user: User,\n};\n\ntype State = {\n    avatarUrl?: ?string,\n};\n\nclass Avatar extends React.PureComponent<Props, State> {\n    state = {\n        avatarUrl: null,\n    };\n\n    /**\n     * Success handler for getting avatar url\n     *\n     * @param {string} avatarUrl the user avatar url\n     */\n    getAvatarUrlHandler = (avatarUrl: ?string) => {\n        this.setState({\n            avatarUrl,\n        });\n    };\n\n    /**\n     * Gets the avatar URL for the user from the getAvatarUrl prop\n     *\n     * @return {Promise<?string>} Promise which resolve with the avatar url string\n     */\n    getAvatarUrl(): Promise<?string> {\n        const { user = {}, getAvatarUrl }: Props = this.props;\n        const { avatar_url = null, id } = user;\n\n        const avatarPromise = id && getAvatarUrl ? getAvatarUrl(`${id}`) : Promise.resolve(avatar_url);\n        return avatarPromise.then(this.getAvatarUrlHandler);\n    }\n\n    componentDidMount() {\n        this.getAvatarUrl();\n    }\n\n    render() {\n        const { user, className }: Props = this.props;\n        const { avatarUrl }: State = this.state;\n        const { id, name } = user;\n\n        return <AvatarComponent avatarUrl={avatarUrl} className={className} id={id} name={name} />;\n    }\n}\n\nexport default Avatar;\n","/**\n * @flow\n * @file Active state component for Activity Feed\n */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport getProp from 'lodash/get';\nimport AppActivity from '../app-activity';\nimport Comment from '../comment';\nimport TaskNew from '../task-new';\nimport Version, { CollapsedVersion } from '../version';\nimport withErrorHandling from '../../withErrorHandling';\nimport type { FocusableFeedItemType } from '../../../../common/types/feed';\n\ntype Props = {\n    activeFeedEntryId?: string,\n    activeFeedEntryType?: FocusableFeedItemType,\n    activeFeedItemRef: { current: null | HTMLElement },\n    approverSelectorContacts?: SelectorItems,\n    currentUser?: User,\n    getApproverWithQuery?: Function,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    items: FeedItems,\n    mentionSelectorContacts?: SelectorItems,\n    onAppActivityDelete?: Function,\n    onCommentDelete?: Function,\n    onCommentEdit?: Function,\n    onTaskAssignmentUpdate?: Function,\n    onTaskDelete?: Function,\n    onTaskEdit?: Function,\n    onTaskModalClose?: Function,\n    onVersionInfo?: Function,\n    translations?: Translations,\n};\n\nconst ActiveState = ({\n    activeFeedEntryId,\n    activeFeedEntryType,\n    activeFeedItemRef,\n    approverSelectorContacts,\n    currentUser,\n    items,\n    mentionSelectorContacts,\n    getMentionWithQuery,\n    onAppActivityDelete,\n    onCommentDelete,\n    onCommentEdit,\n    onTaskDelete,\n    onTaskEdit,\n    onTaskAssignmentUpdate,\n    onTaskModalClose,\n    onVersionInfo,\n    translations,\n    getApproverWithQuery,\n    getAvatarUrl,\n    getUserProfileUrl,\n}: Props): React.Node => {\n    const activeEntry = items.find(({ id, type }) => id === activeFeedEntryId && type === activeFeedEntryType);\n\n    return (\n        <ul className=\"bcs-activity-feed-active-state\">\n            {items.map((item: FeedItem) => {\n                const isFocused = item === activeEntry;\n                const refValue = isFocused ? activeFeedItemRef : undefined;\n\n                switch (item.type) {\n                    case 'comment':\n                        return (\n                            <li\n                                key={item.type + item.id}\n                                className={classNames('bcs-activity-feed-comment', { 'bcs-is-focused': isFocused })}\n                                data-testid=\"comment\"\n                                ref={refValue}\n                            >\n                                <Comment\n                                    {...item}\n                                    currentUser={currentUser}\n                                    getAvatarUrl={getAvatarUrl}\n                                    getMentionWithQuery={getMentionWithQuery}\n                                    getUserProfileUrl={getUserProfileUrl}\n                                    mentionSelectorContacts={mentionSelectorContacts}\n                                    onDelete={onCommentDelete}\n                                    onEdit={onCommentEdit}\n                                    permissions={{\n                                        can_delete: getProp(item.permissions, 'can_delete', false),\n                                        can_edit: getProp(item.permissions, 'can_edit', false),\n                                    }}\n                                    translations={translations}\n                                />\n                            </li>\n                        );\n                    case 'task':\n                        return (\n                            <li\n                                key={item.type + item.id}\n                                className={classNames('bcs-activity-feed-task-new', { 'bcs-is-focused': isFocused })}\n                                data-testid=\"task\"\n                                ref={refValue}\n                            >\n                                <TaskNew\n                                    {...item}\n                                    approverSelectorContacts={approverSelectorContacts}\n                                    currentUser={currentUser}\n                                    getApproverWithQuery={getApproverWithQuery}\n                                    getAvatarUrl={getAvatarUrl}\n                                    getUserProfileUrl={getUserProfileUrl}\n                                    onAssignmentUpdate={onTaskAssignmentUpdate}\n                                    onDelete={onTaskDelete}\n                                    onEdit={onTaskEdit}\n                                    onModalClose={onTaskModalClose}\n                                    translations={translations}\n                                />\n                            </li>\n                        );\n                    case 'file_version':\n                        return (\n                            <li key={item.type + item.id} className=\"bcs-version-item\" data-testid=\"version\">\n                                {item.versions ? (\n                                    <CollapsedVersion {...item} onInfo={onVersionInfo} />\n                                ) : (\n                                    <Version {...item} onInfo={onVersionInfo} />\n                                )}\n                            </li>\n                        );\n                    case 'app_activity':\n                        return (\n                            <li\n                                key={item.type + item.id}\n                                className=\"bcs-activity-feed-app-activity\"\n                                data-testid=\"app-activity\"\n                            >\n                                <AppActivity currentUser={currentUser} onDelete={onAppActivityDelete} {...item} />\n                            </li>\n                        );\n                    default:\n                        return null;\n                }\n            })}\n        </ul>\n    );\n};\n\nexport { ActiveState as ActiveStateComponent };\nexport default withErrorHandling(ActiveState);\n","/**\n * @flow\n * @file Component for Activity feed\n */\n\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport { scrollIntoView } from '../../../../utils/dom';\nimport ActiveState from './ActiveState';\nimport CommentForm from '../comment-form';\nimport EmptyState from './EmptyState';\nimport { collapseFeedState, ItemTypes } from './activityFeedUtils';\nimport InlineError from '../../../../components/inline-error/InlineError';\nimport LoadingIndicator from '../../../../components/loading-indicator/LoadingIndicator';\nimport messages from './messages';\nimport type { FocusableFeedItemType } from '../../../../common/types/feed';\nimport './ActivityFeed.scss';\n\ntype Props = {\n    activeFeedEntryId?: string,\n    activeFeedEntryType?: FocusableFeedItemType,\n    activityFeedError: ?Errors,\n    approverSelectorContacts?: SelectorItems,\n    currentUser?: User,\n    feedItems?: FeedItems,\n    file: BoxItem,\n    getApproverWithQuery?: Function,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    isDisabled?: boolean,\n    mentionSelectorContacts?: SelectorItems,\n    onAppActivityDelete?: Function,\n    onCommentCreate?: Function,\n    onCommentDelete?: Function,\n    onCommentUpdate?: Function,\n    onTaskAssignmentUpdate?: Function,\n    onTaskCreate?: Function,\n    onTaskDelete?: Function,\n    onTaskModalClose?: Function,\n    onTaskUpdate?: Function,\n    onVersionHistoryClick?: Function,\n    translations?: Translations,\n};\n\ntype State = {\n    isInputOpen: boolean,\n};\n\nclass ActivityFeed extends React.Component<Props, State> {\n    state = {\n        isInputOpen: false,\n    };\n\n    activeFeedItemRef = React.createRef<null | HTMLElement>();\n\n    feedContainer: null | HTMLElement;\n\n    componentDidMount() {\n        this.resetFeedScroll();\n    }\n\n    componentDidUpdate(prevProps: Props, prevState: State) {\n        const { feedItems: prevFeedItems } = prevProps;\n        const { feedItems: currFeedItems, activeFeedEntryId } = this.props;\n        const { isInputOpen: prevIsInputOpen } = prevState;\n        const { isInputOpen: currIsInputOpen } = this.state;\n\n        const hasLoaded = this.hasLoaded();\n        const hasMoreItems = prevFeedItems && currFeedItems && prevFeedItems.length < currFeedItems.length;\n        const didLoadFeedItems = prevFeedItems === undefined && currFeedItems !== undefined;\n        const hasInputOpened = currIsInputOpen !== prevIsInputOpen;\n\n        if ((hasLoaded || hasMoreItems || didLoadFeedItems || hasInputOpened) && activeFeedEntryId === undefined) {\n            this.resetFeedScroll();\n        }\n\n        // do the scroll only once after first fetch of feed items\n        if (didLoadFeedItems) {\n            this.scrollToActiveFeedItemOrErrorMessage();\n        }\n    }\n\n    scrollToActiveFeedItemOrErrorMessage() {\n        const { current: activeFeedItemRef } = this.activeFeedItemRef;\n        const { activeFeedEntryId } = this.props;\n\n        // if there is no active item, do not scroll\n        if (!activeFeedEntryId) {\n            return;\n        }\n\n        // if there was supposed to be an active feed item but the feed item does not exist\n        // scroll to the bottom to show the inline error message\n        if (activeFeedItemRef === null) {\n            this.resetFeedScroll();\n            return;\n        }\n\n        scrollIntoView(activeFeedItemRef);\n    }\n\n    /**\n     * Detects whether or not the empty state should be shown.\n     * @param {object} currentUser - The user that is logged into the account\n     * @param {object} feedItems - Items in the activity feed\n     */\n    isEmpty = ({ feedItems }: Props = this.props): boolean => {\n        if (feedItems === undefined) {\n            return false;\n        }\n        return feedItems.length === 0 || (feedItems.length === 1 && feedItems[0].type === ItemTypes.fileVersion);\n    };\n\n    hasLoaded = ({ currentUser, feedItems }: Props = this.props): boolean =>\n        currentUser !== undefined && feedItems !== undefined;\n\n    /**\n     * Scrolls the container to the bottom\n     */\n    resetFeedScroll = () => {\n        if (this.feedContainer) {\n            this.feedContainer.scrollTop = this.feedContainer.scrollHeight;\n        }\n    };\n\n    onKeyDown = (event: SyntheticKeyboardEvent<>): void => {\n        const { nativeEvent } = event;\n        nativeEvent.stopImmediatePropagation();\n    };\n\n    commentFormFocusHandler = (): void => {\n        this.resetFeedScroll();\n        this.setState({ isInputOpen: true });\n    };\n\n    commentFormCancelHandler = (): void => this.setState({ isInputOpen: false });\n\n    commentFormSubmitHandler = (): void => this.setState({ isInputOpen: false });\n\n    onCommentCreate = ({ text, hasMention }: { hasMention: boolean, text: string }) => {\n        const { onCommentCreate = noop } = this.props;\n        onCommentCreate(text, hasMention);\n        this.commentFormSubmitHandler();\n    };\n\n    /**\n     * Creates a task.\n     *\n     * @param {string} text - Task text\n     * @param {Array} assignees - List of assignees\n     * @param {number} dueAt - Task's due date\n     * @return {void}\n     */\n    onTaskCreate = ({ text, assignees, dueAt }: { assignees: SelectorItems, dueAt: string, text: string }): void => {\n        const { onTaskCreate = noop } = this.props;\n        onTaskCreate(text, assignees, dueAt);\n        this.commentFormSubmitHandler();\n    };\n\n    /**\n     * Invokes version history popup handler.\n     *\n     * @param {Object} data - Version history data\n     * @return {void}\n     */\n    openVersionHistoryPopup = (data: any): void => {\n        const versionInfoHandler = this.props.onVersionHistoryClick || noop;\n        versionInfoHandler(data);\n    };\n\n    render(): React.Node {\n        const {\n            translations,\n            approverSelectorContacts,\n            mentionSelectorContacts,\n            currentUser,\n            isDisabled,\n            getAvatarUrl,\n            getUserProfileUrl,\n            file,\n            onAppActivityDelete,\n            onCommentCreate,\n            getApproverWithQuery,\n            getMentionWithQuery,\n            activityFeedError,\n            onVersionHistoryClick,\n            onCommentDelete,\n            onCommentUpdate,\n            onTaskDelete,\n            onTaskUpdate,\n            onTaskAssignmentUpdate,\n            onTaskModalClose,\n            feedItems,\n            activeFeedEntryId,\n            activeFeedEntryType,\n        } = this.props;\n        const { isInputOpen } = this.state;\n        const hasCommentPermission = getProp(file, 'permissions.can_comment', false);\n        const showCommentForm = !!(currentUser && hasCommentPermission && onCommentCreate && feedItems);\n\n        const isEmpty = this.isEmpty(this.props);\n        const isLoading = !this.hasLoaded();\n\n        const activeEntry =\n            Array.isArray(feedItems) &&\n            feedItems.find(({ id, type }) => id === activeFeedEntryId && type === activeFeedEntryType);\n\n        const errorMessageByEntryType = {\n            comment: messages.commentMissingError,\n            task: messages.taskMissingError,\n        };\n\n        const inlineFeedItemErrorMessage = activeFeedEntryType\n            ? errorMessageByEntryType[activeFeedEntryType]\n            : undefined;\n\n        const isInlineFeedItemErrorVisible = !isLoading && activeFeedEntryType && !activeEntry;\n\n        return (\n            // eslint-disable-next-line\n            <div className=\"bcs-activity-feed\" data-testid=\"activityfeed\" onKeyDown={this.onKeyDown}>\n                <div\n                    ref={ref => {\n                        this.feedContainer = ref;\n                    }}\n                    className=\"bcs-activity-feed-items-container\"\n                >\n                    {isLoading && (\n                        <div className=\"bcs-activity-feed-loading-state\">\n                            <LoadingIndicator />\n                        </div>\n                    )}\n\n                    {isEmpty && !isLoading && <EmptyState showCommentMessage={showCommentForm} />}\n                    {!isEmpty && !isLoading && (\n                        <ActiveState\n                            {...activityFeedError}\n                            items={collapseFeedState(feedItems)}\n                            isDisabled={isDisabled}\n                            currentUser={currentUser}\n                            onTaskAssignmentUpdate={onTaskAssignmentUpdate}\n                            onAppActivityDelete={onAppActivityDelete}\n                            onCommentDelete={hasCommentPermission ? onCommentDelete : noop}\n                            onCommentEdit={hasCommentPermission ? onCommentUpdate : noop}\n                            // We don't know task edit/delete specific permissions,\n                            // but you must at least be able to comment to do these operations.\n                            onTaskDelete={hasCommentPermission ? onTaskDelete : noop}\n                            onTaskEdit={hasCommentPermission ? onTaskUpdate : noop}\n                            onTaskModalClose={onTaskModalClose}\n                            onVersionInfo={onVersionHistoryClick ? this.openVersionHistoryPopup : null}\n                            translations={translations}\n                            getAvatarUrl={getAvatarUrl}\n                            getUserProfileUrl={getUserProfileUrl}\n                            mentionSelectorContacts={mentionSelectorContacts}\n                            getMentionWithQuery={getMentionWithQuery}\n                            approverSelectorContacts={approverSelectorContacts}\n                            getApproverWithQuery={getApproverWithQuery}\n                            activeFeedEntryId={activeFeedEntryId}\n                            activeFeedEntryType={activeFeedEntryType}\n                            activeFeedItemRef={this.activeFeedItemRef}\n                        />\n                    )}\n                    {isInlineFeedItemErrorVisible && inlineFeedItemErrorMessage && (\n                        <InlineError\n                            title={<FormattedMessage {...messages.feedInlineErrorTitle} />}\n                            className=\"bcs-feedItemInlineError\"\n                        >\n                            <FormattedMessage {...inlineFeedItemErrorMessage} />\n                        </InlineError>\n                    )}\n                </div>\n\n                {showCommentForm ? (\n                    <CommentForm\n                        onSubmit={this.resetFeedScroll}\n                        isDisabled={isDisabled}\n                        mentionSelectorContacts={mentionSelectorContacts}\n                        className={classNames('bcs-activity-feed-comment-input', {\n                            'bcs-is-disabled': isDisabled,\n                        })}\n                        createComment={hasCommentPermission ? this.onCommentCreate : noop}\n                        getMentionWithQuery={getMentionWithQuery}\n                        isOpen={isInputOpen}\n                        user={currentUser}\n                        onCancel={this.commentFormCancelHandler}\n                        onFocus={this.commentFormFocusHandler}\n                        getAvatarUrl={getAvatarUrl}\n                    />\n                ) : null}\n            </div>\n        );\n    }\n}\n\nexport default ActivityFeed;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Component for Activity feed empty state\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from '../../../common/messages';\nimport IconActivityFeedEmptyState from '../icons';\n\ntype Props = {\n    showCommentMessage?: boolean,\n};\n\nconst EmptyState = ({ showCommentMessage }: Props): React.Node => (\n    <div className=\"bcs-activity-feed-empty-state\">\n        <IconActivityFeedEmptyState />\n        <div className=\"bcs-empty-state-cta\">\n            <FormattedMessage {...messages.noActivity} />\n            {showCommentMessage ? (\n                <aside>\n                    <FormattedMessage {...messages.noActivityCommentPrompt} />\n                </aside>\n            ) : null}\n        </div>\n    </div>\n);\n\nexport default EmptyState;\n","/**\n * @flow\n * @file Activity feed utility methods\n */\n\nimport selectors from '../../../common/selectors/version';\nimport { PLACEHOLDER_USER, VERSION_UPLOAD_ACTION } from '../../../../constants';\n\nexport const ItemTypes = {\n    fileVersion: 'file_version',\n};\n\nexport function collapseFeedState(feedState: ?FeedItems): FeedItems {\n    if (!feedState) {\n        return [];\n    }\n\n    return feedState.reduce((collapsedFeedState, feedItem) => {\n        const previousFeedItem = collapsedFeedState.pop();\n\n        if (!previousFeedItem) {\n            return collapsedFeedState.concat([feedItem]);\n        }\n\n        if (\n            feedItem.type === ItemTypes.fileVersion &&\n            previousFeedItem.type === ItemTypes.fileVersion &&\n            selectors.getVersionAction(feedItem) === VERSION_UPLOAD_ACTION &&\n            selectors.getVersionAction(previousFeedItem) === VERSION_UPLOAD_ACTION\n        ) {\n            const {\n                modified_by: tmpModifiedBy,\n                versions = [previousFeedItem],\n                version_start = parseInt(previousFeedItem.version_number, 10),\n                version_end = parseInt(previousFeedItem.version_number, 10),\n            } = previousFeedItem;\n\n            const prevModifiedBy = tmpModifiedBy || PLACEHOLDER_USER;\n\n            const { modified_by: tmpCurModifiedBy, created_at, trashed_at, id, version_number } = feedItem;\n            const parsedVersionNumber = parseInt(version_number, 10);\n            const collaborators = previousFeedItem.collaborators || {\n                [prevModifiedBy.id]: { ...prevModifiedBy },\n            };\n\n            const modifiedBy = tmpCurModifiedBy || PLACEHOLDER_USER;\n\n            // add collaborators\n            collaborators[modifiedBy.id] = { ...modifiedBy };\n\n            return collapsedFeedState.concat([\n                {\n                    collaborators,\n                    created_at,\n                    modified_by: modifiedBy,\n                    trashed_at,\n                    id,\n                    type: ItemTypes.fileVersion,\n                    version_number,\n                    versions: versions.concat([feedItem]),\n                    version_start: Math.min(version_start, parsedVersionNumber),\n                    version_end: Math.max(version_end, parsedVersionNumber),\n                },\n            ]);\n        }\n\n        return collapsedFeedState.concat([previousFeedItem, feedItem]);\n    }, []);\n}\n","// @flow\nexport { default } from './ActivityFeed';\n","/**\n * @flow\n * @file i18n messages\n * @author Box\n */\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    feedInlineErrorTitle: {\n        id: 'be.activitySidebar.activityFeed.feedInlineErrorTitle',\n        defaultMessage: 'Error',\n        description: 'Error title',\n    },\n    taskMissingError: {\n        id: 'be.activitySidebar.activityFeed.taskMissingError',\n        defaultMessage: 'This task no longer exists',\n        description: 'Text to show when a task no longer exists',\n    },\n    commentMissingError: {\n        id: 'be.activitySidebar.activityFeed.commentMissingError',\n        defaultMessage: 'This comment no longer exists',\n        description: 'Text to show when comment no longer exists',\n    },\n});\n\nexport default messages;\n","/**\n * @flow\n * @file AppActivity component\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport TetherComponent from 'react-tether';\nimport { FormattedMessage, injectIntl, type IntlShape } from 'react-intl';\n\nimport DeleteConfirmation from '../common/delete-confirmation';\nimport ActivityTimestamp from '../common/activity-timestamp';\nimport IconTrash from '../../../../icons/general/IconTrash';\nimport Media from '../../../../components/media';\nimport messages from './messages';\nimport { bdlGray80 } from '../../../../styles/variables';\nimport { Link } from '../../../../components/link';\nimport { MenuItem } from '../../../../components/menu';\nimport './AppActivity.scss';\n\ntype Props = {\n    activity_template: ActivityTemplateItem,\n    app: AppItem,\n    created_at: string,\n    created_by: User,\n    currentUser?: User,\n    error?: ActionItemError,\n    id: string,\n    intl: IntlShape,\n    isPending?: boolean,\n    onDelete: ({ id: string, permissions?: {} }) => void,\n    permissions?: BoxItemPermission,\n    rendered_text: string,\n};\n\ntype State = {\n    isConfirmingDelete: boolean,\n};\n\nfunction mapActivityNodes(node: HTMLLinkElement): React.Node {\n    const { dataset = {}, href = '#', tagName, textContent } = node;\n\n    switch (tagName) {\n        case 'A':\n            return (\n                <Link\n                    href={href}\n                    data-resin-target={dataset.resinTarget}\n                    data-resin-action={dataset.resinAction}\n                    key={`app_actvity_link_${href}`}\n                    rel=\"roreferrer noopener\"\n                    className=\"bcs-AppActivity-link\"\n                    target=\"_blank\"\n                >\n                    {textContent}\n                </Link>\n            );\n        default:\n            return textContent;\n    }\n}\n\nclass AppActivity extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        onDelete: noop,\n        permissions: {},\n    };\n\n    parser = new DOMParser();\n\n    state: State = {\n        isConfirmingDelete: false,\n    };\n\n    handleDeleteCancel = (): void => {\n        this.setState({ isConfirmingDelete: false });\n    };\n\n    handleDeleteClick = () => {\n        this.setState({ isConfirmingDelete: true });\n    };\n\n    handleDeleteConfirm = (): void => {\n        const { id, onDelete, permissions } = this.props;\n\n        onDelete({ id, permissions });\n    };\n\n    parseActivity = (): Array<HTMLLinkElement> => {\n        const { rendered_text: renderedText } = this.props;\n        const doc: Document = this.parser.parseFromString(renderedText, 'text/html');\n        if (!doc) {\n            return [];\n        }\n\n        const childNodes = getProp(doc, 'body.childNodes', []);\n        return Array.from(childNodes);\n    };\n\n    render() {\n        const {\n            activity_template: { id: templateId },\n            app: { name, icon_url },\n            created_at: createdAt,\n            created_by: createdBy,\n            currentUser,\n            error,\n            intl,\n            isPending,\n            permissions,\n        } = this.props;\n\n        const canDelete = getProp(permissions, 'can_delete', false) || (currentUser && currentUser.id === createdBy.id);\n        const createdAtTimestamp = new Date(createdAt).getTime();\n        const isMenuVisible = canDelete && !isPending;\n        const { isConfirmingDelete } = this.state;\n\n        return (\n            <Media\n                className={classNames('bcs-AppActivity', {\n                    'bcs-is-pending': isPending || error,\n                })}\n                data-resin-target=\"loaded\"\n                data-resin-feature={`appActivityCard${templateId}`}\n            >\n                <Media.Figure>\n                    <img\n                        className=\"bcs-AppActivity-icon\"\n                        alt={intl.formatMessage(messages.appActivityAltIcon, { appActivityName: name })}\n                        src={icon_url}\n                    />\n                </Media.Figure>\n\n                <Media.Body className=\"bcs-AppActivity-body\">\n                    {isMenuVisible && (\n                        <TetherComponent\n                            attachment=\"top right\"\n                            className=\"bcs-AppActivity-confirm\"\n                            constraints={[{ to: 'scrollParent', attachment: 'together' }]}\n                            targetAttachment=\"bottom right\"\n                        >\n                            <Media.Menu isDisabled={isConfirmingDelete}>\n                                <MenuItem onClick={this.handleDeleteClick}>\n                                    <IconTrash color={bdlGray80} />\n                                    <FormattedMessage {...messages.appActivityDeleteMenuItem} />\n                                </MenuItem>\n                            </Media.Menu>\n\n                            {isConfirmingDelete && (\n                                <DeleteConfirmation\n                                    isOpen={isConfirmingDelete}\n                                    message={messages.appActivityDeletePrompt}\n                                    onDeleteCancel={this.handleDeleteCancel}\n                                    onDeleteConfirm={this.handleDeleteConfirm}\n                                />\n                            )}\n                        </TetherComponent>\n                    )}\n\n                    <figcaption className=\"bcs-AppActivity-headline\">{name}</figcaption>\n\n                    <div>\n                        <ActivityTimestamp date={createdAtTimestamp} />\n                    </div>\n\n                    {this.parseActivity().map(mapActivityNodes)}\n                </Media.Body>\n            </Media>\n        );\n    }\n}\n\nexport default injectIntl(AppActivity);\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './AppActivity';\n","/**\n * @flow\n * @file i18n messages\n * @author Box\n */\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    appActivityDeleteMenuItem: {\n        id: 'be.appActivity.deleteMenuItem',\n        defaultMessage: 'Delete',\n        description: 'Text to display in the delete app activity submit button',\n    },\n    appActivityDeletePrompt: {\n        id: 'be.appActivity.deletePrompt',\n        defaultMessage: 'Are you sure you want to permanently delete this app activity?',\n        description: 'Confirmation prompt text to delete app activity',\n    },\n    appActivityAltIcon: {\n        id: 'be.appActivity.altIcon',\n        defaultMessage: '{appActivityName} Icon',\n        description: 'Alt message if app activity icon is missing or cannot load',\n    },\n});\n\nexport default messages;\n","/**\n * @flow\n * @file Component for Approval comment form\n */\n\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport classNames from 'classnames';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Avatar from '../Avatar';\nimport CommentFormControls from './CommentFormControls';\nimport DraftJSMentionSelector, {\n    createMentionSelectorState,\n} from '../../../../components/form-elements/draft-js-mention-selector';\nimport Form from '../../../../components/form-elements/form/Form';\nimport Media from '../../../../components/media';\nimport messages from './messages';\n\nimport './CommentForm.scss';\n\ntype Props = {\n    className: string,\n    createComment?: Function,\n    entityId?: string,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    isDisabled?: boolean,\n    isEditing?: boolean,\n    isOpen: boolean,\n    mentionSelectorContacts?: SelectorItems,\n    onCancel: Function,\n    onFocus: Function,\n    onSubmit: Function,\n    tagged_message?: string,\n    updateComment?: Function,\n    user: User,\n} & InjectIntlProvidedProps;\n\ntype State = {\n    commentEditorState: any,\n};\n\nclass CommentForm extends React.Component<Props, State> {\n    static defaultProps = {\n        isOpen: false,\n    };\n\n    state = {\n        commentEditorState: createMentionSelectorState(this.props.tagged_message),\n    };\n\n    componentDidUpdate({ isOpen: prevIsOpen }: Props): void {\n        const { isOpen } = this.props;\n\n        if (isOpen !== prevIsOpen && !isOpen) {\n            this.setState({\n                commentEditorState: createMentionSelectorState(),\n            });\n        }\n    }\n\n    onFormValidSubmitHandler = (): void => {\n        const { createComment = noop, updateComment = noop, onSubmit, entityId } = this.props;\n\n        const { text, hasMention } = this.getFormattedCommentText();\n\n        if (!text) {\n            return;\n        }\n\n        if (entityId) {\n            updateComment({ id: entityId, text, hasMention });\n        } else {\n            createComment({ text, hasMention });\n        }\n\n        if (onSubmit) {\n            onSubmit();\n        }\n\n        this.setState({\n            commentEditorState: createMentionSelectorState(),\n        });\n    };\n\n    onMentionSelectorChangeHandler = (nextEditorState: any): void =>\n        this.setState({ commentEditorState: nextEditorState });\n\n    /**\n     * Formats the comment editor's text such that it will be accepted by the server.\n     *\n     * @returns {Object}\n     */\n    getFormattedCommentText = (): { hasMention: boolean, text: string } => {\n        const { commentEditorState } = this.state;\n\n        const contentState = commentEditorState.getCurrentContent();\n        const blockMap = contentState.getBlockMap();\n\n        const resultStringArr = [];\n\n        // The API needs to explicitly know if a message contains a mention.\n        let hasMention = false;\n\n        // For all ContentBlocks in the ContentState:\n        blockMap.forEach(block => {\n            const text = block.getText();\n            const blockMapStringArr = [];\n\n            // Break down the ContentBlock into ranges\n            block.findEntityRanges(\n                () => true,\n                (start, end) => {\n                    const entityKey = block.getEntityAt(start);\n                    // If the range is an Entity, format its text eg \"@[1:Username]\"\n                    // Otherwise append its text to the block result as-is\n                    if (entityKey) {\n                        const entity = contentState.getEntity(entityKey);\n                        const stringToAdd = `@[${entity.getData().id}:${text.substring(start + 1, end)}]`;\n                        blockMapStringArr.push(stringToAdd);\n                        hasMention = true;\n                    } else {\n                        blockMapStringArr.push(text.substring(start, end));\n                    }\n                },\n            );\n            resultStringArr.push(blockMapStringArr.join(''));\n        });\n\n        // Concatenate the array of block strings with newlines\n        // (Each block represents a paragraph)\n        return { text: resultStringArr.join('\\n'), hasMention };\n    };\n\n    render(): React.Node {\n        const {\n            className,\n            getMentionWithQuery,\n            intl: { formatMessage },\n            isDisabled,\n            isOpen,\n            mentionSelectorContacts = [],\n            onCancel,\n            onFocus,\n            user,\n            isEditing,\n            tagged_message,\n            getAvatarUrl,\n        } = this.props;\n        const { commentEditorState } = this.state;\n        const inputContainerClassNames = classNames('bcs-CommentForm', className, {\n            'bcs-is-open': isOpen,\n        });\n\n        return (\n            <Media className={inputContainerClassNames}>\n                {!isEditing && (\n                    <Media.Figure className=\"bcs-CommentForm-avatar\">\n                        <Avatar getAvatarUrl={getAvatarUrl} user={user} />\n                    </Media.Figure>\n                )}\n\n                <Media.Body className=\"bcs-CommentForm-body\" data-testid=\"bcs-CommentForm-body\">\n                    <Form onValidSubmit={this.onFormValidSubmitHandler}>\n                        <DraftJSMentionSelector\n                            className=\"bcs-CommentForm-input\"\n                            contacts={isOpen ? mentionSelectorContacts : []}\n                            editorState={commentEditorState}\n                            hideLabel\n                            isDisabled={isDisabled}\n                            isRequired={isOpen}\n                            name=\"commentText\"\n                            label=\"Comment\"\n                            onChange={this.onMentionSelectorChangeHandler}\n                            onFocus={onFocus}\n                            onMention={getMentionWithQuery}\n                            placeholder={tagged_message ? undefined : formatMessage(messages.commentWrite)}\n                            validateOnBlur={false}\n                        />\n                        <aside className=\"bcs-CommentForm-tip\">\n                            <FormattedMessage {...messages.atMentionTip} />\n                        </aside>\n\n                        {isOpen && <CommentFormControls onCancel={onCancel} />}\n                    </Form>\n                </Media.Body>\n            </Media>\n        );\n    }\n}\n\n// For testing only\nexport { CommentForm as CommentFormUnwrapped };\nexport default injectIntl(CommentForm);\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Comment Input Controls components for CommentForm\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button from '../../../../components/button/Button';\nimport PrimaryButton from '../../../../components/primary-button/PrimaryButton';\n\nimport messages from './messages';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\n\ntype Props = {\n    onCancel: Function,\n};\n\nconst CommentInputControls = ({ onCancel }: Props): React.Node => (\n    <div className=\"bcs-CommentFormControls\">\n        <Button data-resin-target={ACTIVITY_TARGETS.APPROVAL_FORM_CANCEL} onClick={onCancel} type=\"button\">\n            <FormattedMessage {...messages.commentCancel} />\n        </Button>\n        <PrimaryButton data-resin-target={ACTIVITY_TARGETS.APPROVAL_FORM_POST}>\n            <FormattedMessage {...messages.commentPost} />\n        </PrimaryButton>\n    </div>\n);\n\nexport default CommentInputControls;\n","// @flow\nexport { default } from './CommentForm';\n","/**\n * @flow\n * @file i18n messages\n * @author Box\n */\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    commentCancel: {\n        id: 'be.contentSidebar.activityFeed.commentForm.commentCancel',\n        defaultMessage: 'Cancel',\n        description: 'Text for cancel button',\n    },\n    commentPost: {\n        id: 'be.contentSidebar.activityFeed.commentForm.commentPost',\n        defaultMessage: 'Post',\n        description: 'Text for post button',\n    },\n    commentWrite: {\n        id: 'be.contentSidebar.activityFeed.commentForm.commentWrite',\n        defaultMessage: 'Write a comment',\n        description: 'Placeholder for comment input',\n    },\n\n    approvalAddAssignee: {\n        id: 'be.contentSidebar.activityFeed.commentForm.approvalAddAssignee',\n        defaultMessage: 'Add an assignee',\n        description: 'Placeholder for approvers input',\n    },\n    approvalAddTask: {\n        id: 'be.contentSidebar.activityFeed.commentForm.approvalAddTask',\n        defaultMessage: 'Add Task',\n        description: 'Label for checkbox to add approvers to a comment',\n    },\n    approvalAddTaskTooltip: {\n        id: 'be.contentSidebar.activityFeed.commentForm.approvalAddTaskTooltip',\n        defaultMessage:\n            'Assigning a task to someone will send them a notification with the message in the comment box and allow them to approve or deny.',\n        description: 'Tooltip text for checkbox to add approvers to a comment',\n    },\n    approvalAssignees: {\n        id: 'be.contentSidebar.activityFeed.commentForm.approvalAssignees',\n        defaultMessage: 'Assignees',\n        description: 'Title for assignees input',\n    },\n    approvalDueDate: {\n        id: 'be.contentSidebar.activityFeed.commentForm.approvalDueDate',\n        defaultMessage: 'Due Date',\n        description: 'Title for approvers due date input',\n    },\n    approvalSelectDate: {\n        id: 'be.contentSidebar.activityFeed.commentForm.approvalSelectDate',\n        defaultMessage: 'Select a date',\n        description: 'Placeholder for due date input',\n    },\n    atMentionTip: {\n        id: 'be.contentSidebar.activityFeed.commentForm.atMentionTip',\n        defaultMessage: '@mention users to notify them.',\n        description: 'Mentioning call to action displayed below the comment input',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport TetherComponent from 'react-tether';\nimport Avatar from '../Avatar';\nimport Media from '../../../../components/media';\nimport { MenuItem } from '../../../../components/menu';\nimport IconTrash from '../../../../icons/general/IconTrash';\nimport IconPencil from '../../../../icons/general/IconPencil';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport DeleteConfirmation from '../common/delete-confirmation';\nimport ActivityTimestamp from '../common/activity-timestamp';\nimport UserLink from '../common/user-link';\nimport ActivityError from '../common/activity-error';\nimport ActivityMessage from '../common/activity-message';\nimport CommentForm from '../comment-form';\nimport { bdlGray80 } from '../../../../styles/variables';\nimport { PLACEHOLDER_USER } from '../../../../constants';\nimport messages from './messages';\nimport './Comment.scss';\n\ntype Props = {\n    created_at: string | number,\n    created_by: User,\n    currentUser?: User,\n    error?: ActionItemError,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    id: string,\n    isDisabled?: boolean,\n    isPending?: boolean,\n    mentionSelectorContacts?: SelectorItems,\n    modified_at?: string | number,\n    onDelete: ({ id: string, permissions?: BoxCommentPermission }) => any,\n    onEdit: (id: string, text: string, hasMention: boolean, permissions?: BoxCommentPermission) => any,\n    permissions?: BoxCommentPermission,\n    tagged_message: string,\n    translatedTaggedMessage?: string,\n    translations?: Translations,\n};\n\ntype State = {\n    isConfirmingDelete: boolean,\n    isEditing: boolean,\n    isInputOpen: boolean,\n};\n\nclass Comment extends React.Component<Props, State> {\n    static defaultProps = {\n        onDelete: noop,\n        onEdit: noop,\n    };\n\n    state = {\n        isConfirmingDelete: false,\n        isEditing: false,\n        isInputOpen: false,\n    };\n\n    handleDeleteConfirm = (): void => {\n        const { id, onDelete, permissions } = this.props;\n        onDelete({ id, permissions });\n    };\n\n    handleDeleteCancel = (): void => {\n        this.setState({ isConfirmingDelete: false });\n    };\n\n    handleDeleteClick = () => {\n        this.setState({ isConfirmingDelete: true });\n    };\n\n    handleEditClick = (): void => {\n        this.setState({ isEditing: true, isInputOpen: true });\n    };\n\n    commentFormFocusHandler = (): void => this.setState({ isInputOpen: true });\n\n    commentFormCancelHandler = (): void => this.setState({ isInputOpen: false, isEditing: false });\n\n    commentFormSubmitHandler = (): void => this.setState({ isInputOpen: false, isEditing: false });\n\n    handleUpdate = ({ id, text, hasMention }: { hasMention: boolean, id: string, text: string }): void => {\n        const { onEdit, permissions } = this.props;\n        onEdit(id, text, hasMention, permissions);\n        this.commentFormSubmitHandler();\n    };\n\n    render(): React.Node {\n        const {\n            created_by,\n            created_at,\n            permissions = {},\n            id,\n            isPending,\n            error,\n            tagged_message = '',\n            translatedTaggedMessage,\n            translations,\n            currentUser,\n            isDisabled,\n            getAvatarUrl,\n            getUserProfileUrl,\n            getMentionWithQuery,\n            mentionSelectorContacts,\n            onEdit,\n        } = this.props;\n        const { isConfirmingDelete, isEditing, isInputOpen } = this.state;\n        const createdAtTimestamp = new Date(created_at).getTime();\n        const createdByUser = created_by || PLACEHOLDER_USER;\n        const canEdit = onEdit !== noop && permissions.can_edit;\n        const canDelete = permissions.can_delete;\n        const isMenuVisible = (canDelete || canEdit) && !isPending;\n\n        return (\n            <div className=\"bcs-Comment\">\n                <Media\n                    className={classNames('bcs-Comment-media', {\n                        'bcs-is-pending': isPending || error,\n                    })}\n                >\n                    <Media.Figure>\n                        <Avatar getAvatarUrl={getAvatarUrl} user={createdByUser} />\n                    </Media.Figure>\n                    <Media.Body>\n                        {isMenuVisible && (\n                            <TetherComponent\n                                attachment=\"top right\"\n                                className=\"bcs-Comment-deleteConfirmationModal\"\n                                constraints={[{ to: 'scrollParent', attachment: 'together' }]}\n                                targetAttachment=\"bottom right\"\n                            >\n                                <Media.Menu\n                                    isDisabled={isConfirmingDelete}\n                                    data-testid=\"comment-actions-menu\"\n                                    menuProps={{\n                                        'data-resin-component': ACTIVITY_TARGETS.COMMENT_OPTIONS,\n                                    }}\n                                >\n                                    {canEdit && (\n                                        <MenuItem\n                                            data-resin-target={ACTIVITY_TARGETS.COMMENT_OPTIONS_EDIT}\n                                            data-testid=\"edit-comment\"\n                                            onClick={this.handleEditClick}\n                                        >\n                                            <IconPencil color={bdlGray80} />\n                                            <FormattedMessage {...messages.commentEditMenuItem} />\n                                        </MenuItem>\n                                    )}\n                                    {canDelete && (\n                                        <MenuItem\n                                            data-resin-target={ACTIVITY_TARGETS.COMMENT_OPTIONS_DELETE}\n                                            data-testid=\"delete-comment\"\n                                            onClick={this.handleDeleteClick}\n                                        >\n                                            <IconTrash color={bdlGray80} />\n                                            <FormattedMessage {...messages.commentDeleteMenuItem} />\n                                        </MenuItem>\n                                    )}\n                                </Media.Menu>\n                                {isConfirmingDelete && (\n                                    <DeleteConfirmation\n                                        data-resin-component={ACTIVITY_TARGETS.COMMENT_OPTIONS}\n                                        isOpen={isConfirmingDelete}\n                                        message={messages.commentDeletePrompt}\n                                        onDeleteCancel={this.handleDeleteCancel}\n                                        onDeleteConfirm={this.handleDeleteConfirm}\n                                    />\n                                )}\n                            </TetherComponent>\n                        )}\n                        <div className=\"bcs-Comment-headline\">\n                            <UserLink\n                                data-resin-target={ACTIVITY_TARGETS.PROFILE}\n                                id={createdByUser.id}\n                                name={createdByUser.name}\n                                getUserProfileUrl={getUserProfileUrl}\n                            />\n                        </div>\n                        <div>\n                            <ActivityTimestamp date={createdAtTimestamp} />\n                        </div>\n                        {isEditing ? (\n                            <CommentForm\n                                isDisabled={isDisabled}\n                                className={classNames('bcs-Comment-editor', {\n                                    'bcs-is-disabled': isDisabled,\n                                })}\n                                updateComment={this.handleUpdate}\n                                isOpen={isInputOpen}\n                                user={currentUser}\n                                onCancel={this.commentFormCancelHandler}\n                                onFocus={this.commentFormFocusHandler}\n                                isEditing={isEditing}\n                                entityId={id}\n                                tagged_message={tagged_message}\n                                getAvatarUrl={getAvatarUrl}\n                                mentionSelectorContacts={mentionSelectorContacts}\n                                getMentionWithQuery={getMentionWithQuery}\n                            />\n                        ) : (\n                            <ActivityMessage\n                                id={id}\n                                tagged_message={tagged_message}\n                                translatedTaggedMessage={translatedTaggedMessage}\n                                {...translations}\n                                translationFailed={error ? true : null}\n                                getUserProfileUrl={getUserProfileUrl}\n                            />\n                        )}\n                    </Media.Body>\n                </Media>\n                {error ? <ActivityError {...error} /> : null}\n            </div>\n        );\n    }\n}\n\nexport default Comment;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './Comment';\n","/**\n * @flow\n * @file i18n messages\n * @author Box\n */\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    commentDeleteMenuItem: {\n        id: 'be.contentSidebar.activityFeed.comment.commentDeleteMenuItem',\n        defaultMessage: 'Delete',\n        description: 'Text to show on menu item to delete comment',\n    },\n    commentDeletePrompt: {\n        id: 'be.contentSidebar.activityFeed.comment.commentDeletePrompt',\n        defaultMessage: 'Are you sure you want to permanently delete this comment?',\n        description: 'Confirmation prompt text to delete comment',\n    },\n    commentEditMenuItem: {\n        id: 'be.contentSidebar.activityFeed.comment.commentEditMenuItem',\n        defaultMessage: 'Modify',\n        description: 'Text to show on menu item to edit comment',\n    },\n    commentPostedFullDateTime: {\n        id: 'be.contentSidebar.activityFeed.comment.commentPostedFullDateTime',\n        defaultMessage: '{time, date, full} at {time, time, short}',\n        description: 'Comment posted full date time for title',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classnames from 'classnames';\nimport InlineError from '../../../../../components/inline-error';\nimport PlainButton from '../../../../../components/plain-button';\nimport './ActivityError.scss';\n\ntype Props = {\n    action?: {\n        onAction: Function,\n        text: string,\n    },\n    className?: string,\n    message: MessageDescriptor,\n    title: MessageDescriptor,\n};\n\nconst ActivityError = ({ action, message, title, className, ...rest }: Props): React.Node => (\n    <InlineError\n        className={classnames('bcs-ActivityError', className)}\n        title={<FormattedMessage {...title} {...rest} />}\n    >\n        <div>{<FormattedMessage {...message} />}</div>\n        {action ? (\n            <PlainButton className=\"bcs-ActivityError-action lnk\" onClick={action.onAction} type=\"button\">\n                {action.text}\n            </PlainButton>\n        ) : null}\n    </InlineError>\n);\n\nexport default ActivityError;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './ActivityError';\n","// @flow\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport LoadingIndicator from '../../../../../components/loading-indicator';\nimport formatTaggedMessage from '../../utils/formatTaggedMessage';\nimport ShowOriginalButton from './ShowOriginalButton';\nimport TranslateButton from './TranslateButton';\nimport './ActivityMessage.scss';\n\ntype Props = {\n    getUserProfileUrl?: GetProfileUrlCallback,\n    id: string,\n    onTranslate?: Function,\n    tagged_message: string,\n    translatedTaggedMessage?: string,\n    translationEnabled?: boolean,\n    translationFailed?: ?boolean,\n};\n\ntype State = {\n    isLoading?: boolean,\n    isTranslation?: boolean,\n};\n\nclass ActivityMessage extends React.Component<Props, State> {\n    static defaultProps = {\n        translationEnabled: false,\n    };\n\n    state = {\n        isLoading: false,\n        isTranslation: false,\n    };\n\n    componentDidUpdate(prevProps: Props): void {\n        const { translatedTaggedMessage, translationFailed } = this.props;\n        const { translatedTaggedMessage: prevTaggedMessage, translationFailed: prevTranslationFailed } = prevProps;\n\n        if (prevTaggedMessage === translatedTaggedMessage || prevTranslationFailed === translationFailed) {\n            return;\n        }\n\n        if (translatedTaggedMessage || translationFailed) {\n            this.setState({ isLoading: false });\n        }\n    }\n\n    getButton(isTranslation?: boolean): React.Node {\n        let button = null;\n        if (isTranslation) {\n            button = <ShowOriginalButton handleShowOriginal={this.handleShowOriginal} />;\n        } else {\n            button = <TranslateButton handleTranslate={this.handleTranslate} />;\n        }\n\n        return button;\n    }\n\n    handleTranslate = (event: SyntheticMouseEvent<>): void => {\n        const { id, tagged_message, onTranslate = noop, translatedTaggedMessage } = this.props;\n        if (!translatedTaggedMessage) {\n            this.setState({ isLoading: true });\n            onTranslate({ id, tagged_message });\n        }\n\n        this.setState({ isTranslation: true });\n        event.preventDefault();\n    };\n\n    handleShowOriginal = (event: SyntheticMouseEvent<>): void => {\n        this.setState({ isTranslation: false });\n        event.preventDefault();\n    };\n\n    render(): React.Node {\n        const { id, tagged_message, translatedTaggedMessage, translationEnabled, getUserProfileUrl } = this.props;\n        const { isLoading, isTranslation } = this.state;\n        const commentToDisplay =\n            translationEnabled && isTranslation && translatedTaggedMessage ? translatedTaggedMessage : tagged_message;\n        return isLoading ? (\n            <div className=\"bcs-ActivityMessageLoading\">\n                <LoadingIndicator size=\"small\" />\n            </div>\n        ) : (\n            <div className=\"bcs-ActivityMessage\">\n                {formatTaggedMessage(commentToDisplay, id, false, getUserProfileUrl)}\n                {translationEnabled ? this.getButton(isTranslation) : null}\n            </div>\n        );\n    }\n}\n\nexport default ActivityMessage;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Show Original button component used by Comment Text component\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../../../../components/plain-button';\n\nimport messages from './messages';\n\ntype Props = {\n    handleShowOriginal: Function,\n};\n\nconst ShowOriginalButton = ({ handleShowOriginal }: Props): React.Node => (\n    <PlainButton className=\"bcs-ActivityMessage-translate\" onClick={handleShowOriginal}>\n        <FormattedMessage {...messages.activityMessageShowOriginal} />\n    </PlainButton>\n);\n\nexport default ShowOriginalButton;\n","/**\n * @flow\n * @file Translate button component used by Comment Text component\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../../../../components/plain-button';\n\nimport messages from './messages';\n\ntype Props = {\n    handleTranslate: Function,\n};\n\nconst TranslateButton = ({ handleTranslate }: Props): React.Node => (\n    <PlainButton className=\"bcs-ActivityMessage-translate\" onClick={handleTranslate}>\n        <FormattedMessage {...messages.activityMessageTranslate} />\n    </PlainButton>\n);\n\nexport default TranslateButton;\n","// @flow\nexport { default } from './ActivityMessage';\n","// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    activityMessageShowOriginal: {\n        id: 'be.contentSidebar.activityFeed.commmon.showOriginalMessage',\n        defaultMessage: 'Show Original',\n        description: 'Show original button for showing original comment',\n    },\n    activityMessageTranslate: {\n        id: 'be.contentSidebar.activityFeed.common.translateMessage',\n        defaultMessage: 'Translate',\n        description: 'Translate button for translating comment',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from '../../../../../components/tooltip';\nimport ReadableTime from '../../../../../components/time/ReadableTime';\nimport messages from './messages';\nimport './ActivityTimestamp.scss';\n\ntype Props = {\n    date: number, // unix epoch timestamp (new Date().getTime())\n};\n\nconst ActivityTimestamp = ({ date }: Props) => (\n    <Tooltip text={<FormattedMessage {...messages.fullDateTime} values={{ time: date }} />}>\n        <small className=\"bcs-ActivityTimestamp\">\n            <ReadableTime relativeThreshold={0} alwaysShowTime timestamp={date} />\n        </small>\n    </Tooltip>\n);\n\nexport default ActivityTimestamp;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './ActivityTimestamp';\n","// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    fullDateTime: {\n        id: 'be.activityFeed.fullDateTime',\n        defaultMessage: '{time, date, full} at {time, time, short}',\n        description: 'Full date time and time stamp',\n    },\n});\n\nexport default messages;\n","/**\n * @flow\n * @file Comment component\n */\n\nimport * as React from 'react';\nimport { FormattedMessage, type MessageDescriptor } from 'react-intl';\n\nimport Button from '../../../../../components/button';\nimport commonMessages from '../../../../common/messages';\nimport PrimaryButton from '../../../../../components/primary-button';\nimport { KEYS } from '../../../../../constants';\nimport { Overlay } from '../../../../../components/flyout';\nimport { ACTIVITY_TARGETS } from '../../../../common/interactionTargets';\nimport './DeleteConfirmation.scss';\n\ntype Props = {\n    isOpen: boolean,\n    message: MessageDescriptor,\n    onDeleteCancel: Function,\n    onDeleteConfirm: Function,\n};\n\nclass DeleteConfirmation extends React.Component<Props> {\n    onKeyDown = (event: SyntheticKeyboardEvent<>): void => {\n        const { nativeEvent } = event;\n        const { isOpen, onDeleteCancel } = this.props;\n\n        nativeEvent.stopImmediatePropagation();\n\n        switch (event.key) {\n            case KEYS.escape:\n                event.stopPropagation();\n                event.preventDefault();\n                if (isOpen) {\n                    onDeleteCancel();\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { message, onDeleteCancel, onDeleteConfirm, ...rest } = this.props;\n\n        return (\n            <Overlay\n                className=\"be-modal bcs-DeleteConfirmation\"\n                onKeyDown={this.onKeyDown}\n                role=\"dialog\"\n                shouldDefaultFocus\n                shouldOutlineFocus={false}\n                {...rest}\n            >\n                <div className=\"bcs-DeleteConfirmation-promptMessage\">\n                    <FormattedMessage {...message} />\n                </div>\n                <div>\n                    <Button\n                        className=\"bcs-DeleteConfirmation-cancel\"\n                        onClick={onDeleteCancel}\n                        type=\"button\"\n                        data-resin-target={ACTIVITY_TARGETS.INLINE_DELETE_CANCEL}\n                    >\n                        <FormattedMessage {...commonMessages.cancel} />\n                    </Button>\n                    <PrimaryButton\n                        className=\"bcs-DeleteConfirmation-delete\"\n                        onClick={onDeleteConfirm}\n                        type=\"button\"\n                        data-resin-target={ACTIVITY_TARGETS.INLINE_DELETE_CONFIRM}\n                    >\n                        <FormattedMessage {...commonMessages.delete} />\n                    </PrimaryButton>\n                </div>\n            </Overlay>\n        );\n    }\n}\n\nexport default DeleteConfirmation;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './DeleteConfirmation';\n","// @flow\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport { Link } from '../../../../../components/link';\nimport './UserLink.scss';\n\ntype Props = {\n    className?: string,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    id: string,\n    name: string,\n};\n\ntype State = {\n    profileUrl?: string,\n};\n\nclass UserLink extends React.PureComponent<Props, State> {\n    state = {};\n\n    /**\n     * Success handler for getting profile url\n     *\n     * @param {string} profileUrl the user profile url\n     */\n    getProfileUrlHandler = (profileUrl?: string) => {\n        this.setState({\n            profileUrl,\n        });\n    };\n\n    /**\n     * Gets the profile URL for the user from the getUserProfileUrl prop\n     *\n     * @return {Promise} a promise which resolves with the profileUrl string\n     */\n    getUserProfileUrl() {\n        const { id, getUserProfileUrl }: Props = this.props;\n        if (!getUserProfileUrl) {\n            return Promise.resolve();\n        }\n\n        return getUserProfileUrl(id).then(this.getProfileUrlHandler);\n    }\n\n    componentDidMount() {\n        this.getUserProfileUrl();\n    }\n\n    render() {\n        const { name, getUserProfileUrl, className, ...rest }: Props = this.props;\n        const { profileUrl }: State = this.state;\n\n        return profileUrl ? (\n            <Link className={classnames('bcs-UserLink', className)} {...rest} href={profileUrl}>\n                {name}\n            </Link>\n        ) : (\n            <span {...rest}>{name}</span>\n        );\n    }\n}\n\nexport default UserLink;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './UserLink';\n","/**\n * @flow\n * @file IconActivityFeedEmptyState icon component\n */\n\nimport * as React from 'react';\n\nimport AccessibleSVG from '../../../../icons/accessible-svg';\n\ntype Props = {\n    className?: string,\n    height?: number,\n    width?: number,\n};\n\nconst IconActivityFeedEmptyState = ({ className = '', width = 90, height = 90 }: Props): React.Node => (\n    <AccessibleSVG\n        className={`bcs-activity-feed-empty-state-illustration ${className}`}\n        height={height}\n        viewBox=\"0 0 90 90\"\n        width={width}\n    >\n        <path\n            d=\"M12.06 40.71v-.4a.31.31 0 0 0-.31-.31.31.31 0 0 0-.31.31v.4a.51.51 0 0 0-.23.23h-.4a.31.31 0 0 0-.31.31.31.31 0 0 0 .31.31h.4a.51.51 0 0 0 .23.23v.4a.31.31 0 0 0 .62 0v-.41a.57.57 0 0 0 .23-.23h.4a.31.31 0 0 0 .31-.31.31.31 0 0 0-.31-.31h-.4a.51.51 0 0 0-.23-.22zm74 25v-.4a.31.31 0 0 0-.31-.31.31.31 0 0 0-.31.31v.4a.51.51 0 0 0-.23.23h-.4a.31.31 0 0 0-.31.31.31.31 0 0 0 .31.31h.4a.61.61 0 0 0 .22.23v.4a.32.32 0 0 0 .32.31.31.31 0 0 0 .31-.3v-.41a.57.57 0 0 0 .23-.23h.4a.31.31 0 0 0 0-.62h-.4a.51.51 0 0 0-.23-.23zm-4-7v-.4a.31.31 0 0 0-.31-.31.31.31 0 0 0-.31.31v.4a.51.51 0 0 0-.23.23h-.4a.31.31 0 0 0-.31.31.31.31 0 0 0 .31.31h.4a.51.51 0 0 0 .23.23v.4a.31.31 0 0 0 .62 0v-.41a.63.63 0 0 0 .23-.23h.4a.31.31 0 0 0 0-.62h-.4a.51.51 0 0 0-.23-.23zM5.5 48.13v-.64A.5.5 0 0 0 5 47a.49.49 0 0 0-.5.49v.64a1.09 1.09 0 0 0-.37.37h-.64A.5.5 0 0 0 3 49a.49.49 0 0 0 .49.5h.64a1.09 1.09 0 0 0 .37.37v.64a.5.5 0 0 0 1 0v-.63a1.09 1.09 0 0 0 .37-.37h.64A.5.5 0 0 0 7 49a.49.49 0 0 0-.49-.5h-.64a1.09 1.09 0 0 0-.37-.37zm67 32v-.64A.5.5 0 0 0 72 79a.49.49 0 0 0-.5.49v.64a1.09 1.09 0 0 0-.37.37h-.64a.5.5 0 0 0-.49.5.49.49 0 0 0 .49.5h.64a1.09 1.09 0 0 0 .37.37v.64a.5.5 0 0 0 1 0v-.63a1 1 0 0 0 .37-.36h.64A.5.5 0 0 0 74 81a.49.49 0 0 0-.49-.5h-.64a1.09 1.09 0 0 0-.37-.37zm-63-56v-.64A.5.5 0 0 0 9 23a.49.49 0 0 0-.5.49v.64a1.09 1.09 0 0 0-.37.37h-.64A.5.5 0 0 0 7 25a.49.49 0 0 0 .49.5h.64a1.09 1.09 0 0 0 .37.37v.64a.5.5 0 0 0 1 0v-.63a1 1 0 0 0 .37-.36h.64A.5.5 0 0 0 11 25a.49.49 0 0 0-.49-.5h-.64a1.09 1.09 0 0 0-.37-.37zm16-20v-.64A.5.5 0 0 0 25 3a.49.49 0 0 0-.5.49v.64a1.09 1.09 0 0 0-.37.37h-.64A.5.5 0 0 0 23 5a.49.49 0 0 0 .49.5h.64a1.09 1.09 0 0 0 .37.37v.64a.5.5 0 0 0 1 0v-.65a1 1 0 0 0 .37-.36h.64A.5.5 0 0 0 27 5a.49.49 0 0 0-.49-.5h-.64a1.09 1.09 0 0 0-.37-.37zM44.46 27.21a3.12 3.12 0 1 1 3.1-3.11 3.11 3.11 0 0 1-3.1 3.11zm0-4.23a1.12 1.12 0 1 0 1.1 1.12 1.12 1.12 0 0 0-1.1-1.1zM54.28 27.2a3.11 3.11 0 1 1 3.1-3.11 3.11 3.11 0 0 1-3.1 3.11zm0-4.22a1.11 1.11 0 1 0 1.1 1.11 1.11 1.11 0 0 0-1.1-1.09zM64.09 27.2a3.11 3.11 0 1 1 3.11-3.11 3.1 3.1 0 0 1-3.11 3.11zm0-4.22a1.11 1.11 0 1 0 1.11 1.11A1.11 1.11 0 0 0 64.09 23z\"\n            fill=\"#0061d5\"\n        />\n        <path\n            d=\"M60.75 39.24c8 0 14.57-6.92 14.57-15.46S68.8 8.33 60.75 8.33c-1.35 0 9.78 5.07 9.27 15.45-.69 14.11-14.18 15.46-9.27 15.46zM21.73 59v-.7s2.5 2.46 5.34 1.68c1.57-.42 4.23 2.16 6.83 1.91 2.13-.21 4.72-2.7 4.72-2.7v2.05a4 4 0 0 1-4 4h-8.89a4 4 0 0 1-4-4V59z\"\n            fill=\"#1891d3\"\n            opacity=\".1\"\n        />\n        <path\n            d=\"M54.45 3.4c-13.89 0-24 8.69-24 20.66a21.19 21.19 0 0 0 .17 2.41h-4a8.15 8.15 0 0 0-8.13 8v14a1 1 0 0 0-.45.81v1.22h-1.53v-2.14a1 1 0 0 0-1-1 4.1 4.1 0 0 0-1 8.08v5.81a11.67 11.67 0 0 0 11.66 11.66h1.23v7.34h-4.34a1 1 0 0 0-1 1v4.44a1 1 0 0 0 1 1h14.22a1 1 0 0 0 1-1v-4.44a1 1 0 0 0-1-1H33v-7.34h1.23a11.67 11.67 0 0 0 11.61-11.66v-5.81a4.1 4.1 0 0 0-1-8.08 1 1 0 0 0-1 1v2.11h-1.56v-1.22a1 1 0 0 0-.44-.81v-6.72A24.69 24.69 0 0 0 55 43.44a4.56 4.56 0 0 1-.53 1.25 6.88 6.88 0 0 0-1 3.1 1.21 1.21 0 0 0 1 1.24h.17c2 0 7.65-4.38 9.14-6.55a18.42 18.42 0 0 0 14.64-18.42c0-11.97-10.08-20.66-23.97-20.66zM36.28 84.69H24.06v-2.44h12.22zm-6.88-4.44v-7.33H31v7.33zm-2.75-51.78h7a6.16 6.16 0 0 1 6 5h-6a1 1 0 1 0 0 2h6.11v3h-6.03a1 1 0 1 0 0 2h6.11v3h-6.11a1 1 0 1 0 0 2h6.11v2.78H20.51v-2.78h6.11a1 1 0 1 0 0-2h-6.11v-3h6.11a1 1 0 1 0 0-2h-6.11v-3h6.11a1 1 0 1 0 0-2h-6a6.16 6.16 0 0 1 6.03-5zm13.63 21.78v2.44H20.06v-2.44zm-19.77 4.44h19.33v5.64a6.15 6.15 0 0 1-6.15 6.14h-7a6.14 6.14 0 0 1-6.14-6.14zm-7.11-3.22a2.12 2.12 0 0 1 1.11-1.86v3.72a2.12 2.12 0 0 1-1.11-1.86zm33.55 0a2.12 2.12 0 0 1-1.11 1.86v-3.72A2.12 2.12 0 0 1 47 51.47zm-3.11 1v8.78a9.67 9.67 0 0 1-9.66 9.66h-8a9.67 9.67 0 0 1-9.66-9.66v-8.78h1.55v1.22a1 1 0 0 0 .45.81v5.83a8.15 8.15 0 0 0 8.14 8.14h7a8.16 8.16 0 0 0 8.15-8.14V54.5a1 1 0 0 0 .44-.81v-1.22zM63 40.6a1.05 1.05 0 0 0-.79.68c-.33.94-4.37 4.16-6.48 5.34.14-.34.31-.68.48-1 .57-1.09 1.34-2.59.11-3.95a1 1 0 0 0-.74-.32h-.15a22.65 22.65 0 0 1-13.59-1.85v-4.88-.12a8.15 8.15 0 0 0-8.14-8h-1a17.29 17.29 0 0 1-.19-2.41c0-11 9-18.66 22-18.66s22 7.67 22 18.66A16.24 16.24 0 0 1 63 40.6z\"\n            fill=\"#0061d5\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconActivityFeedEmptyState;\n","// @flow\nexport { default } from './IconActivityFeedEmptyState';\n","// @flow\nexport { default } from './activity-feed';\n","/**\n * @flow\n * @file Component for in-modal error messages for tasks\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport getProp from 'lodash/get';\n\nimport messages from './messages';\nimport apiMessages from '../../../../api/messages';\nimport { TASK_EDIT_MODE_EDIT } from '../../../../constants';\nimport InlineNotice from '../../../../components/inline-notice/InlineNotice';\n\nimport type { TaskType, TaskEditMode } from '../../../../common/types/tasks';\n\ntype Props = {\n    editMode?: TaskEditMode,\n    error?: { status: number },\n    taskType: TaskType,\n};\n\nconst TaskError = ({ editMode, error, taskType }: Props) => {\n    const isEditMode = editMode === TASK_EDIT_MODE_EDIT;\n    const isForbiddenErrorOnEdit = getProp(error, 'status') === 403 && isEditMode;\n    const errorTitle = isForbiddenErrorOnEdit ? messages.taskEditWarningTitle : messages.taskCreateErrorTitle;\n    let errorMessage = isEditMode ? messages.taskUpdateErrorMessage : apiMessages.taskCreateErrorMessage;\n\n    if (!error) {\n        return null;\n    }\n\n    // error message changes when a forbidden operation occurs while editing a task\n    if (isForbiddenErrorOnEdit) {\n        switch (taskType) {\n            case 'GENERAL':\n                errorMessage = messages.taskGeneralAssigneeRemovalWarningMessage;\n                break;\n            case 'APPROVAL':\n                errorMessage = messages.taskApprovalAssigneeRemovalWarningMessage;\n                break;\n            default:\n                return null;\n        }\n    }\n\n    return (\n        <InlineNotice type=\"error\" title={<FormattedMessage {...errorTitle} />}>\n            <FormattedMessage {...errorMessage} />\n        </InlineNotice>\n    );\n};\n\nexport default TaskError;\n","/**\n * @flow\n * @file Component for Approval comment form\n */\n\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport getProp from 'lodash/get';\nimport classNames from 'classnames';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport commonMessages from '../../../../common/messages';\nimport messages from './messages';\nimport commentFormMessages from '../comment-form/messages';\nimport Form from '../../../../components/form-elements/form/Form';\nimport ContactDatalistItem from '../../../../components/contact-datalist-item/ContactDatalistItem';\nimport TextArea from '../../../../components/text-area';\nimport DatePicker from '../../../../components/date-picker/DatePicker';\nimport Checkbox from '../../../../components/checkbox';\nimport PillSelectorDropdown from '../../../../components/pill-selector-dropdown/PillSelectorDropdown';\nimport Button from '../../../../components/button/Button';\nimport { FeatureFlag } from '../../../common/feature-checking';\nimport PrimaryButton from '../../../../components/primary-button/PrimaryButton';\nimport {\n    TASK_COMPLETION_RULE_ANY,\n    TASK_COMPLETION_RULE_ALL,\n    TASK_EDIT_MODE_CREATE,\n    TASK_EDIT_MODE_EDIT,\n} from '../../../../constants';\nimport { ACTIVITY_TARGETS, INTERACTION_TARGET } from '../../../common/interactionTargets';\nimport type {\n    TaskCompletionRule,\n    TaskCollabAssignee,\n    TaskType,\n    TaskEditMode,\n    TaskUpdatePayload,\n} from '../../../../common/types/tasks';\nimport TaskError from './TaskError';\n\nimport './TaskForm.scss';\n\ntype TaskFormProps = {|\n    error?: { status: number }, // TODO: update to ElementsXhrError once API supports it\n    isDisabled?: boolean,\n    onCancel: () => any,\n    onSubmitError: (e: ElementsXhrError) => any,\n    onSubmitSuccess: () => any,\n    taskType: TaskType,\n|};\n\ntype TaskFormFieldProps = {|\n    approvers: Array<TaskCollabAssignee>,\n    completionRule: TaskCompletionRule,\n    dueDate?: ?string,\n    id: string,\n    message: string,\n|};\n\ntype TaskFormConsumerProps = {|\n    ...TaskFormFieldProps,\n    approverSelectorContacts: SelectorItems,\n    className?: string,\n    createTask: (\n        text: string,\n        approvers: SelectorItems,\n        taskType: TaskType,\n        dueDate: ?string,\n        completionRule: TaskCompletionRule,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ) => any,\n    editMode?: TaskEditMode,\n    editTask?: (task: TaskUpdatePayload, onSuccess: ?Function, onError: ?Function) => any,\n    getApproverWithQuery?: Function,\n    getAvatarUrl: GetAvatarUrlCallback,\n|};\n\ntype Props = TaskFormProps & TaskFormConsumerProps & InjectIntlProvidedProps;\n\ntype TaskFormFieldName = 'taskName' | 'taskAssignees' | 'taskDueDate';\n\ntype State = {|\n    approverTextInput: string, // partial text input value for approver field before autocomplete/select\n    approvers: Array<TaskCollabAssignee>,\n    completionRule: TaskCompletionRule,\n    dueDate?: ?Date,\n    formValidityState: { [key: TaskFormFieldName]: ?{ code: string, message: string } },\n    id: string,\n    isLoading: boolean,\n    isValid: ?boolean,\n    message: string,\n|};\n\nfunction convertAssigneesToSelectorItems(approvers: Array<TaskCollabAssignee>): SelectorItems {\n    return approvers.map(({ target }) => {\n        const newSelectorItem: SelectorItem = {\n            ...target,\n            item: {},\n            value: target.id,\n            text: target.name,\n        };\n\n        return newSelectorItem;\n    });\n}\n\nclass TaskForm extends React.Component<Props, State> {\n    static defaultProps = {\n        approvers: [],\n        approverSelectorContacts: [],\n        editMode: TASK_EDIT_MODE_CREATE,\n        id: '',\n        message: '',\n    };\n\n    state = this.getInitialFormState();\n\n    getInitialFormState() {\n        const { dueDate, id, message, approvers, completionRule } = this.props;\n        return {\n            id,\n            completionRule: completionRule || TASK_COMPLETION_RULE_ALL,\n            approvers,\n            approverTextInput: '',\n            dueDate: dueDate ? new Date(dueDate) : null,\n            formValidityState: {},\n            message,\n            isLoading: false,\n            isValid: null,\n        };\n    }\n\n    validateForm = (only?: TaskFormFieldName) => {\n        this.setState(state => {\n            const { intl } = this.props;\n            const { approvers, message, approverTextInput } = state;\n            const assigneeFieldMissingError = {\n                code: 'required',\n                message: intl.formatMessage(commonMessages.requiredFieldError),\n            };\n            const assigneeFieldInvalidError = {\n                code: 'invalid',\n                message: intl.formatMessage(commonMessages.invalidUserError),\n            };\n            const messageFieldError = {\n                code: 'required',\n                message: intl.formatMessage(commonMessages.requiredFieldError),\n            };\n            const formValidityState = {\n                taskAssignees:\n                    (approverTextInput.length ? assigneeFieldInvalidError : null) ||\n                    (approvers.length ? null : assigneeFieldMissingError),\n                taskName: message ? null : messageFieldError,\n                taskDueDate: null,\n            };\n            const isValid = Object.values(formValidityState).every(val => val == null);\n            return {\n                isValid,\n                formValidityState: only\n                    ? { ...state.formValidityState, [only]: formValidityState[only] }\n                    : formValidityState,\n            };\n        });\n    };\n\n    getErrorByFieldname = (fieldName: TaskFormFieldName) => {\n        const { formValidityState } = this.state;\n        return formValidityState[fieldName] ? formValidityState[fieldName].message : null;\n    };\n\n    clearForm = () => this.setState(this.getInitialFormState());\n\n    handleInvalidSubmit = () => {\n        this.validateForm();\n    };\n\n    handleSubmitSuccess = () => {\n        const { onSubmitSuccess } = this.props;\n        if (onSubmitSuccess) {\n            onSubmitSuccess();\n        }\n\n        this.clearForm();\n        this.setState({ isLoading: false });\n    };\n\n    handleSubmitError = (e: ElementsXhrError) => {\n        const { onSubmitError } = this.props;\n        onSubmitError(e);\n        this.setState({ isLoading: false });\n    };\n\n    addResinInfo = (): Object => {\n        const { id, taskType, editMode } = this.props;\n        const { dueDate } = this.state;\n        const addedAssignees = this.getAddedAssignees();\n        const removedAssignees = this.getRemovedAssignees();\n\n        return {\n            'data-resin-taskid': id,\n            'data-resin-tasktype': taskType,\n            'data-resin-isediting': editMode === TASK_EDIT_MODE_EDIT,\n            'data-resin-numassigneesadded': addedAssignees.length,\n            'data-resin-numassigneesremoved': removedAssignees.length,\n            'data-resin-assigneesadded': addedAssignees.map(assignee => assignee.target.id),\n            'data-resin-assigneesremoved': removedAssignees.map(assignee => assignee.target.id),\n            'data-resin-duedate': dueDate && dueDate.getTime(),\n        };\n    };\n\n    getAddedAssignees = (): Array<TaskCollabAssignee> => {\n        // Added assignees are the ones in state that weren't in the prop\n        const { approvers } = this.props;\n        const { approvers: currentApprovers } = this.state;\n        const approverIds = approvers.map(approver => approver.id);\n        return currentApprovers.filter(currentApprover => approverIds.indexOf(currentApprover.id) === -1);\n    };\n\n    getRemovedAssignees = (): Array<TaskCollabAssignee> => {\n        // Assignees to remove are the ones in the prop that cannot be found in state\n        const { approvers } = this.props;\n        const { approvers: currentApprovers } = this.state;\n        const currentApproverIds = currentApprovers.map(currentApprover => currentApprover.id);\n        return approvers.filter(approver => currentApproverIds.indexOf(approver.id) === -1);\n    };\n\n    handleValidSubmit = (): void => {\n        const { id, createTask, editTask, editMode, taskType } = this.props;\n        const { message, approvers: currentApprovers, dueDate, completionRule, isValid } = this.state;\n        const dueDateString = dueDate && dueDate.toISOString();\n\n        if (!isValid) return;\n\n        this.setState({ isLoading: true });\n\n        if (editMode === TASK_EDIT_MODE_EDIT && editTask) {\n            editTask(\n                {\n                    id,\n                    completion_rule: completionRule,\n                    description: message,\n                    due_at: dueDateString,\n                    addedAssignees: convertAssigneesToSelectorItems(this.getAddedAssignees()),\n                    removedAssignees: this.getRemovedAssignees(),\n                },\n                this.handleSubmitSuccess,\n                this.handleSubmitError,\n            );\n        } else {\n            createTask(\n                message,\n                convertAssigneesToSelectorItems(currentApprovers),\n                taskType,\n                dueDateString,\n                completionRule,\n                this.handleSubmitSuccess,\n                this.handleSubmitError,\n            );\n        }\n    };\n\n    handleDueDateChange = (date: ?string): void => {\n        let dateValue = null;\n        if (date) {\n            dateValue = new Date(date);\n            // The date given to us is midnight of the date selected.\n            // Modify date to be the end of day (minus 1 millisecond) for the given due date\n            dateValue.setHours(23, 59, 59, 999);\n        }\n\n        this.setState({ dueDate: dateValue });\n        this.validateForm('taskDueDate');\n    };\n\n    handleCompletionRuleChange = (event: SyntheticInputEvent<HTMLInputElement>) => {\n        this.setState({ completionRule: event.target.checked ? TASK_COMPLETION_RULE_ANY : TASK_COMPLETION_RULE_ALL });\n    };\n\n    handleApproverSelectorInput = (value: any): void => {\n        const { getApproverWithQuery = noop } = this.props;\n        this.setState({ approverTextInput: value });\n        getApproverWithQuery(value);\n    };\n\n    handleApproverSelectorSelect = (pills: Array<any>): void => {\n        this.setState({\n            approvers: this.state.approvers.concat(\n                pills.map(pill => {\n                    return {\n                        id: '',\n                        target: {\n                            id: pill.id,\n                            name: pill.text,\n                            type: 'user',\n                        },\n                        role: 'ASSIGNEE',\n                        type: 'task_collaborator',\n                        status: 'NOT_STARTED',\n                        permissions: { can_delete: false, can_update: false },\n                    };\n                }),\n            ),\n            approverTextInput: '',\n        });\n\n        this.validateForm('taskAssignees');\n    };\n\n    handleApproverSelectorRemove = (option: any, index: number): void => {\n        const approvers = [...this.state.approvers];\n        approvers.splice(index, 1);\n        this.setState({ approvers });\n        this.validateForm('taskAssignees');\n    };\n\n    handleChangeMessage = (e: SyntheticInputEvent<HTMLTextAreaElement>) => {\n        e.persist();\n        this.setState({ message: e.currentTarget.value });\n        this.validateForm('taskName');\n    };\n\n    handleCancelClick = () => {\n        this.props.onCancel();\n    };\n\n    render() {\n        const { approverSelectorContacts, className, error, isDisabled, intl, editMode, taskType } = this.props;\n        const { dueDate, approvers, message, formValidityState, isLoading, completionRule } = this.state;\n        const inputContainerClassNames = classNames('bcs-task-input-container', 'bcs-task-input-is-open', className);\n        const isCreateEditMode = editMode === TASK_EDIT_MODE_CREATE;\n        const renderApprovers = convertAssigneesToSelectorItems(approvers);\n\n        // filter out selected approvers\n        // map to datalist item format\n        const approverOptions = approverSelectorContacts\n            .filter(({ id }) => !renderApprovers.find(({ value }) => value === id))\n            .map(({ id, item }) => ({ ...item, text: item.name, value: id }));\n\n        const pillSelectorOverlayClasses = classNames({\n            scrollable: approverOptions.length > 4,\n        });\n\n        const submitButtonMessage = isCreateEditMode\n            ? messages.tasksAddTaskFormSubmitLabel\n            : messages.tasksEditTaskFormSubmitLabel;\n        const shouldShowCompletionRule = approvers.length > 0;\n        const isCompletionRuleCheckboxDisabled = approvers.length <= 1;\n        const isCompletionRuleCheckboxChecked = completionRule === TASK_COMPLETION_RULE_ANY;\n        const isForbiddenErrorOnEdit = isLoading || (getProp(error, 'status') === 403 && !isCreateEditMode);\n\n        return (\n            <div className={inputContainerClassNames} data-resin-component=\"taskform\">\n                <div className=\"bcs-task-input-form-container\">\n                    <TaskError editMode={editMode} error={error} taskType={taskType} />\n                    <Form\n                        formValidityState={formValidityState}\n                        onInvalidSubmit={this.handleInvalidSubmit}\n                        onValidSubmit={this.handleValidSubmit}\n                    >\n                        <PillSelectorDropdown\n                            className={pillSelectorOverlayClasses}\n                            error={this.getErrorByFieldname('taskAssignees')}\n                            disabled={isForbiddenErrorOnEdit}\n                            inputProps={{ 'data-testid': 'task-form-assignee-input' }}\n                            isRequired\n                            label={<FormattedMessage {...messages.tasksAddTaskFormSelectAssigneesLabel} />}\n                            name=\"taskAssignees\"\n                            onBlur={() => this.validateForm('taskAssignees')}\n                            onInput={this.handleApproverSelectorInput}\n                            onRemove={this.handleApproverSelectorRemove}\n                            onSelect={this.handleApproverSelectorSelect}\n                            placeholder={intl.formatMessage(commentFormMessages.approvalAddAssignee)}\n                            selectedOptions={renderApprovers}\n                            selectorOptions={approverOptions}\n                            shouldSetActiveItemOnOpen\n                            shouldClearUnmatchedInput\n                            validateForError={() => this.validateForm('taskAssignees')}\n                        >\n                            {approverOptions.map(({ id, name, email }) => (\n                                <ContactDatalistItem\n                                    key={id}\n                                    data-testid=\"task-assignee-option\"\n                                    name={name}\n                                    subtitle={email}\n                                />\n                            ))}\n                        </PillSelectorDropdown>\n\n                        {shouldShowCompletionRule && (\n                            <FeatureFlag feature=\"activityFeed.tasks.anyTask\">\n                                <Checkbox\n                                    data-testid=\"task-form-completion-rule-checkbox\"\n                                    isChecked={isCompletionRuleCheckboxChecked}\n                                    isDisabled={isCompletionRuleCheckboxDisabled || isForbiddenErrorOnEdit}\n                                    label={<FormattedMessage {...messages.taskAnyCheckboxLabel} />}\n                                    tooltip={intl.formatMessage(messages.taskAnyInfoTooltip)}\n                                    name=\"completionRule\"\n                                    onChange={this.handleCompletionRuleChange}\n                                />\n                            </FeatureFlag>\n                        )}\n\n                        <TextArea\n                            className=\"bcs-task-name-input\"\n                            data-testid=\"task-form-name-input\"\n                            disabled={isDisabled || isForbiddenErrorOnEdit}\n                            error={this.getErrorByFieldname('taskName')}\n                            isRequired\n                            label={<FormattedMessage {...messages.tasksAddTaskFormMessageLabel} />}\n                            name=\"taskName\"\n                            onBlur={() => this.validateForm('taskName')}\n                            onChange={this.handleChangeMessage}\n                            placeholder={intl.formatMessage(commentFormMessages.commentWrite)}\n                            value={message}\n                        />\n                        <DatePicker\n                            className=\"bcs-task-add-due-date-input\"\n                            error={this.getErrorByFieldname('taskDueDate')}\n                            inputProps={{\n                                [INTERACTION_TARGET]: ACTIVITY_TARGETS.TASK_DATE_PICKER,\n                                'data-testid': 'task-form-date-input',\n                            }}\n                            isDisabled={isForbiddenErrorOnEdit}\n                            isRequired={false}\n                            label={<FormattedMessage {...messages.tasksAddTaskFormDueDateLabel} />}\n                            minDate={new Date()}\n                            name=\"taskDueDate\"\n                            onChange={this.handleDueDateChange}\n                            placeholder={intl.formatMessage(commentFormMessages.approvalSelectDate)}\n                            value={dueDate || undefined}\n                        />\n                        <div className=\"bcs-task-input-controls\">\n                            <Button\n                                className=\"bcs-task-input-cancel-btn\"\n                                data-resin-target={ACTIVITY_TARGETS.APPROVAL_FORM_CANCEL}\n                                data-testid=\"task-form-cancel-button\"\n                                onClick={this.handleCancelClick}\n                                isDisabled={isLoading}\n                                type=\"button\"\n                                {...this.addResinInfo()}\n                            >\n                                <FormattedMessage {...messages.tasksAddTaskFormCancelLabel} />\n                            </Button>\n                            <PrimaryButton\n                                className=\"bcs-task-input-submit-btn\"\n                                data-resin-target={ACTIVITY_TARGETS.APPROVAL_FORM_POST}\n                                data-testid=\"task-form-submit-button\"\n                                isDisabled={isForbiddenErrorOnEdit}\n                                isLoading={isLoading}\n                                {...this.addResinInfo()}\n                            >\n                                <FormattedMessage {...submitButtonMessage} />\n                            </PrimaryButton>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\n// For testing only\nexport { TaskForm as TaskFormUnwrapped };\nexport type { TaskFormConsumerProps as TaskFormProps };\n\nexport default injectIntl(TaskForm);\n","// extracted by mini-css-extract-plugin","// @flow\nexport * from './TaskForm';\nexport { default } from './TaskForm';\n","/**\n * @flow\n * @file i18n messages\n * @author Box\n */\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    taskCreateErrorTitle: {\n        id: 'be.contentSidebar.activityFeed.taskForm.taskCreateErrorTitle',\n        description: 'Title shown above error message when a task creation fails',\n        defaultMessage: 'Error',\n    },\n    taskEditWarningTitle: {\n        id: 'be.contentSidebar.activityFeed.taskForm.taskEditWarningTitle',\n        description: 'Title shown above warning message when a task create/edit partially fails',\n        defaultMessage: 'Task Updated with Errors',\n    },\n    taskUpdateErrorMessage: {\n        id: 'be.contentSidebar.activityFeed.taskForm.taskUpdateErrorMessage',\n        description: 'Error message when a task edit fails',\n        defaultMessage: 'An error occurred while modifying this task. Please try again.',\n    },\n    taskApprovalAssigneeRemovalWarningMessage: {\n        id: 'be.contentSidebar.activityFeed.taskForm.taskApprovalAssigneeRemovalWarningMessage',\n        description: 'Warning message showing that, while the task was updated, not all assignees (1+) were removed',\n        defaultMessage: 'Unable to remove assignee(s) because the task is now approved.',\n    },\n    taskGeneralAssigneeRemovalWarningMessage: {\n        id: 'be.contentSidebar.activityFeed.taskForm.taskGeneralAssigneeRemovalWarningMessage',\n        description: 'Warning message showing that, while the task was updated, not all assignees (1+) were removed',\n        defaultMessage: 'Unable to remove assignee(s) because the task is now completed.',\n    },\n    tasksAddTaskFormSelectAssigneesLabel: {\n        id: 'be.contentSidebar.activityFeed.taskForm.tasksAddTaskFormSelectAssigneesLabel',\n        defaultMessage: 'Select Assignees',\n        description: 'label for task create form assignee input',\n    },\n    tasksAddTaskFormMessageLabel: {\n        id: 'be.contentSidebar.activityFeed.taskForm.tasksAddTaskFormMessageLabel',\n        defaultMessage: 'Message',\n        description: 'label for task create form message input',\n    },\n    tasksAddTaskFormDueDateLabel: {\n        id: 'be.contentSidebar.activityFeed.taskForm.tasksAddTaskFormDueDateLabel',\n        defaultMessage: 'Due Date',\n        description: 'label for task create form due date input',\n    },\n    tasksAddTaskFormSubmitLabel: {\n        id: 'be.contentSidebar.activityFeed.taskForm.tasksAddTaskFormSubmitLabel',\n        defaultMessage: 'Create',\n        description: 'label for create button in create task modal in create mode',\n    },\n    tasksEditTaskFormSubmitLabel: {\n        id: 'be.contentSidebar.activityFeed.taskForm.tasksEditTaskFormSubmitLabel',\n        defaultMessage: 'Update',\n        description: 'label for edit button in create task modal in edit mode',\n    },\n    tasksAddTaskFormCancelLabel: {\n        id: 'be.contentSidebar.activityFeed.taskForm.tasksAddTaskFormCancelLabel',\n        defaultMessage: 'Cancel',\n        description: 'label for cancel button in create task popup',\n    },\n    taskAnyCheckboxLabel: {\n        id: 'be.contentSidebar.activityFeed.taskForm.taskAnyCheckboxLabel',\n        defaultMessage: 'Only one assignee is required to complete this task',\n        description: 'Label for checkbox to set a task that requires only one assignee to complete.',\n    },\n    taskAnyInfoTooltip: {\n        id: 'be.contentSidebar.activityFeed.taskForm.taskAnyInfoTooltip',\n        defaultMessage:\n            'By default, all assignees are required to take action before a task is complete. Selecting this option will require only one assignee to complete this task.',\n        description: 'Text in tooltip explaining completion rule for an any assignee task.',\n    },\n});\n\nexport default messages;\n","// @flow strict\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport ReadableTime from '../../../../components/time/ReadableTime';\nimport commonMessages from '../../../common/messages';\nimport messages from './messages';\nimport { TASK_NEW_APPROVED, TASK_NEW_REJECTED, TASK_NEW_COMPLETED, TASK_NEW_NOT_STARTED } from '../../../../constants';\nimport type { ISODate } from '../../../../common/types/core';\n\nimport './AssigneeDetails.scss';\n\nconst statusMessages = {\n    [TASK_NEW_APPROVED]: messages.tasksFeedStatusApproved,\n    [TASK_NEW_REJECTED]: messages.tasksFeedStatusRejected,\n    [TASK_NEW_COMPLETED]: messages.tasksFeedStatusCompleted,\n    [TASK_NEW_NOT_STARTED]: null,\n};\n\nconst Datestamp = ({ date }: { date: ISODate | Date }) => {\n    return <ReadableTime timestamp={new Date(date).getTime()} alwaysShowTime relativeThreshold={0} />;\n};\n\ntype Props = {\n    className?: string,\n    completedAt?: ?ISODate | Date,\n    status: $Keys<typeof statusMessages>,\n    user: { name: string },\n};\n\nconst AvatarDetails = React.memo<Props>(({ user, status, completedAt, className }: Props) => {\n    const statusMessage = statusMessages[status] || null;\n    return (\n        <div className={classNames(className, 'bcs-AssigneeDetails')}>\n            <div className=\"bcs-AssigneeDetails-name\">\n                {user.name ? user.name : <FormattedMessage {...commonMessages.priorCollaborator} />}\n            </div>\n            {statusMessage && completedAt && (\n                <div className=\"bcs-AssigneeDetails-status\">\n                    <FormattedMessage {...statusMessage} values={{ dateTime: <Datestamp date={completedAt} /> }} />\n                </div>\n            )}\n        </div>\n    );\n});\n\nexport default AvatarDetails;\n","// extracted by mini-css-extract-plugin","// @flow strict\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PlainButton from '../../../../components/plain-button';\nimport messages from './messages';\nimport AvatarGroupAvatar from './AvatarGroupAvatar';\nimport AssigneeDetails from './AssigneeDetails';\nimport type { TaskAssigneeCollection } from '../../../../common/types/tasks';\n\nimport './AssigneeList.scss';\n\nconst DEFAULT_ASSIGNEES_SHOWN = 3;\nconst TASKS_PAGE_SIZE = 20; // service does not return the page size to the client at the moment\n\ntype Props = {|\n    getAvatarUrl: GetAvatarUrlCallback,\n    initialAssigneeCount: number,\n    isOpen: boolean,\n    onCollapse: () => void | Promise<void>,\n    onExpand: () => void | Promise<void>,\n    users: TaskAssigneeCollection,\n|};\n\nfunction AssigneeList(props: Props) {\n    const {\n        initialAssigneeCount = DEFAULT_ASSIGNEES_SHOWN,\n        users = {},\n        getAvatarUrl,\n        isOpen,\n        onCollapse,\n        onExpand,\n    } = props;\n    const { entries = [], next_marker } = users;\n    const entryCount = entries.length;\n    const numVisibleAssignees = isOpen ? entryCount : initialAssigneeCount;\n    const visibleUsers = entries\n        .slice(0, numVisibleAssignees)\n        .map(({ id, target, status, completed_at: completedAt }) => {\n            return (\n                <li key={id} className=\"bcs-AssigneeList-listItem\" data-testid=\"assignee-list-item\">\n                    <AvatarGroupAvatar\n                        status={status}\n                        className=\"bcs-AssigneeList-listItemAvatar\"\n                        user={target}\n                        getAvatarUrl={getAvatarUrl}\n                    />\n                    <AssigneeDetails user={target} status={status} completedAt={completedAt} />\n                </li>\n            );\n        });\n\n    const hiddenAssigneeCount = Math.max(0, entryCount - initialAssigneeCount);\n    const maxAdditionalAssignees = TASKS_PAGE_SIZE - initialAssigneeCount;\n    const hasMoreAssigneesThanPageSize = hiddenAssigneeCount > maxAdditionalAssignees || next_marker;\n    const additionalAssigneeMessage = hasMoreAssigneesThanPageSize\n        ? messages.taskShowMoreAssigneesOverflow\n        : messages.taskShowMoreAssignees;\n\n    return (\n        <div className=\"bcs-AssigneeList\">\n            <ul className=\"bcs-AssigneeList-list\" data-testid=\"task-assignee-list\">\n                {visibleUsers}\n            </ul>\n            {!isOpen && hiddenAssigneeCount > 0 && (\n                <div className=\"bcs-AssigneeList-toggleBtn\">\n                    <PlainButton\n                        data-resin-target=\"showmorebtn\"\n                        data-testid=\"show-more-assignees\"\n                        onClick={onExpand}\n                        className=\"lnk\"\n                    >\n                        <FormattedMessage\n                            {...additionalAssigneeMessage}\n                            values={{\n                                additionalAssigneeCount: hasMoreAssigneesThanPageSize\n                                    ? maxAdditionalAssignees\n                                    : hiddenAssigneeCount,\n                            }}\n                        />\n                    </PlainButton>\n                </div>\n            )}\n            {isOpen && (\n                <div className=\"bcs-AssigneeList-toggleBtn\">\n                    <PlainButton\n                        data-resin-target=\"showlessbtn\"\n                        data-testid=\"show-less-assignees\"\n                        onClick={onCollapse}\n                        className=\"lnk\"\n                    >\n                        <FormattedMessage {...messages.taskShowLessAssignees} />\n                    </PlainButton>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AssigneeList;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport camelCase from 'lodash/camelCase';\nimport IconComplete from '../../../../icons/general/IconVerified';\nimport IconReject from '../../../../icons/general/IconRejected';\nimport Avatar from '../Avatar';\nimport { TASK_NEW_APPROVED, TASK_NEW_REJECTED, TASK_NEW_COMPLETED, TASK_NEW_NOT_STARTED } from '../../../../constants';\nimport messages from './messages';\nimport type { TaskCollabStatus } from '../../../../common/types/tasks';\nimport type { UserMini } from '../../../../common/types/core';\n\nimport './AvatarGroupAvatar.scss';\n\ntype Props = {\n    className?: string,\n    getAvatarUrl?: GetAvatarUrlCallback,\n    status: TaskCollabStatus,\n    user: UserMini,\n};\n\nconst StatusIcon = ({ status, ...rest }: { status: TaskCollabStatus }) => {\n    switch (status) {\n        case TASK_NEW_APPROVED:\n        case TASK_NEW_COMPLETED:\n            return <IconComplete {...rest} />;\n        case TASK_NEW_REJECTED:\n            return <IconReject {...rest} />;\n        case TASK_NEW_NOT_STARTED:\n        default:\n            return null;\n    }\n};\n\nconst AvatarGroupAvatar = React.memo<Props>(({ user, status, getAvatarUrl, className, ...rest }: Props) => (\n    <div\n        className={classNames('bcs-AvatarGroupAvatar', className)}\n        data-testid=\"avatar-group-avatar-container\"\n        {...rest}\n    >\n        <Avatar className=\"bcs-AvatarGroupAvatar-avatar\" user={user} getAvatarUrl={getAvatarUrl} />\n        <StatusIcon\n            status={status}\n            className={`bcs-AvatarGroupAvatar-statusIcon ${camelCase(status)}`}\n            height={12}\n            width={12}\n            title={<FormattedMessage {...messages.taskAssignmentCompleted} />}\n        />\n    </div>\n));\n\nexport default AvatarGroupAvatar;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport flow from 'lodash/flow';\nimport get from 'lodash/get';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport TetherComponent from 'react-tether';\nimport { withFeatureConsumer, getFeatureConfig } from '../../../common/feature-checking';\nimport { withAPIContext } from '../../../common/api-context';\nimport Avatar from '../Avatar';\nimport Media from '../../../../components/media';\nimport { MenuItem } from '../../../../components/menu';\nimport ActivityError from '../common/activity-error';\nimport ActivityMessage from '../common/activity-message';\nimport ActivityTimestamp from '../common/activity-timestamp';\nimport DeleteConfirmation from '../common/delete-confirmation';\nimport IconTaskApproval from '../../../../icons/two-toned/IconTaskApproval';\nimport IconTaskGeneral from '../../../../icons/two-toned/IconTaskGeneral';\nimport IconTrash from '../../../../icons/general/IconTrash';\nimport IconPencil from '../../../../icons/general/IconPencil';\nimport UserLink from '../common/user-link';\nimport API from '../../../../api/APIFactory';\nimport {\n    TASK_COMPLETION_RULE_ALL,\n    TASK_NEW_APPROVED,\n    TASK_NEW_REJECTED,\n    TASK_NEW_NOT_STARTED,\n    TASK_NEW_IN_PROGRESS,\n    TASK_NEW_COMPLETED,\n    TASK_TYPE_APPROVAL,\n    PLACEHOLDER_USER,\n    TASK_EDIT_MODE_EDIT,\n} from '../../../../constants';\nimport type { TaskAssigneeCollection, TaskNew, TaskType } from '../../../../common/types/tasks';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport { bdlGray80 } from '../../../../styles/variables';\nimport TaskActions from './TaskActions';\nimport TaskCompletionRuleIcon from './TaskCompletionRuleIcon';\nimport TaskDueDate from './TaskDueDate';\nimport TaskStatus from './TaskStatus';\nimport AssigneeList from './AssigneeList';\nimport TaskModal from '../../TaskModal';\nimport commonMessages from '../../../common/messages';\nimport messages from './messages';\n\nimport './Task.scss';\n\ntype Props = {|\n    ...TaskNew,\n    api: API,\n    approverSelectorContacts: SelectorItems,\n    currentUser: User,\n    error?: ActionItemError,\n    features?: FeatureConfig,\n    getApproverWithQuery?: Function,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    isPending?: boolean,\n    onAssignmentUpdate: Function,\n    onDelete?: Function,\n    onEdit?: Function,\n    onModalClose?: Function,\n    translatedTaggedMessage?: string,\n    translations?: Translations,\n|};\n\ntype State = {\n    // the complete list of assignees (when task.assigned_to is truncated)\n    assignedToFull: TaskAssigneeCollection,\n    isAssigneeListOpen: boolean,\n    isConfirmingDelete: boolean,\n    isEditing: boolean,\n    isLoading: boolean,\n    loadCollabError: ?ActionItemError,\n    modalError: ?ElementsXhrError,\n};\n\nconst getMessageForTask = (isCurrentUser: boolean, taskType: TaskType) => {\n    if (isCurrentUser) {\n        if (taskType === TASK_TYPE_APPROVAL) {\n            return messages.tasksFeedHeadlineApprovalCurrentUser;\n        }\n        return messages.tasksFeedHeadlineGeneralCurrentUser;\n    }\n\n    if (taskType === TASK_TYPE_APPROVAL) {\n        return messages.tasksFeedHeadlineApproval;\n    }\n    return messages.tasksFeedHeadlineGeneral;\n};\n\nclass Task extends React.Component<Props, State> {\n    static defaultProps = {\n        completion_rule: TASK_COMPLETION_RULE_ALL,\n    };\n\n    state = {\n        loadCollabError: undefined,\n        assignedToFull: this.props.assigned_to,\n        modalError: undefined,\n        isEditing: false,\n        isLoading: false,\n        isAssigneeListOpen: false,\n        isConfirmingDelete: false,\n    };\n\n    handleAssigneeListExpand = () => {\n        this.getAllTaskCollaborators(() => {\n            this.setState({ isAssigneeListOpen: true });\n        });\n    };\n\n    handleAssigneeListCollapse = () => {\n        this.setState({ isAssigneeListOpen: false });\n    };\n\n    handleEditClick = () => {\n        this.getAllTaskCollaborators(() => {\n            this.setState({ isEditing: true });\n        });\n    };\n\n    handleDeleteClick = () => {\n        this.setState({ isConfirmingDelete: true });\n    };\n\n    handleDeleteConfirm = (): void => {\n        const { id, onDelete, permissions } = this.props;\n\n        if (onDelete) {\n            onDelete({ id, permissions });\n        }\n    };\n\n    handleDeleteCancel = (): void => {\n        this.setState({ isConfirmingDelete: false });\n    };\n\n    handleEditModalClose = () => {\n        const { onModalClose } = this.props;\n        this.setState({ isEditing: false, modalError: undefined });\n\n        if (onModalClose) {\n            onModalClose();\n        }\n    };\n\n    handleEditSubmitError = (error: ElementsXhrError) => {\n        this.setState({ modalError: error });\n    };\n\n    getAllTaskCollaborators = (onSuccess: () => any) => {\n        const { id, api, task_links, assigned_to } = this.props;\n        const { errorOccured } = commonMessages;\n        const { taskCollaboratorLoadErrorMessage } = messages;\n\n        // skip fetch when there are no additional collaborators\n        if (!assigned_to.next_marker) {\n            this.setState({ assignedToFull: assigned_to });\n            onSuccess();\n            return;\n        }\n\n        // fileid is required for api calls, check for presence\n        const fileId = get(task_links, 'entries[0].target.id');\n        if (!fileId) {\n            return;\n        }\n\n        this.setState({ isLoading: true });\n        api.getTaskCollaboratorsAPI(false).getTaskCollaborators({\n            task: { id },\n            file: { id: fileId },\n            errorCallback: () => {\n                this.setState({\n                    isLoading: false,\n                    loadCollabError: {\n                        message: taskCollaboratorLoadErrorMessage,\n                        title: errorOccured,\n                    },\n                });\n            },\n            successCallback: assignedToFull => {\n                this.setState({ assignedToFull, isLoading: false });\n                onSuccess();\n            },\n        });\n    };\n\n    handleTaskAction = (taskId: string, assignmentId: string, taskStatus: string) => {\n        const { onAssignmentUpdate } = this.props;\n\n        this.setState({ isAssigneeListOpen: false });\n\n        onAssignmentUpdate(taskId, assignmentId, taskStatus);\n    };\n\n    render() {\n        const {\n            approverSelectorContacts,\n            assigned_to,\n            completion_rule,\n            created_at,\n            created_by,\n            currentUser,\n            due_at,\n            error,\n            features,\n            getApproverWithQuery,\n            getAvatarUrl,\n            getUserProfileUrl,\n            id,\n            isPending,\n            description,\n            onEdit,\n            permissions,\n            status,\n            task_type,\n            translatedTaggedMessage,\n            translations,\n        } = this.props;\n\n        const {\n            assignedToFull,\n            modalError,\n            isEditing,\n            isLoading,\n            loadCollabError,\n            isAssigneeListOpen,\n            isConfirmingDelete,\n        } = this.state;\n\n        const inlineError = loadCollabError || error;\n\n        const currentUserAssignment =\n            assigned_to && assigned_to.entries\n                ? assigned_to.entries.find(({ target }) => target.id === currentUser.id)\n                : null;\n\n        const createdByUser = created_by.target || PLACEHOLDER_USER;\n\n        const createdAtTimestamp = new Date(created_at).getTime();\n\n        const shouldShowActions =\n            currentUserAssignment &&\n            currentUserAssignment.permissions &&\n            currentUserAssignment.permissions.can_update &&\n            currentUserAssignment.status === TASK_NEW_NOT_STARTED &&\n            (status === TASK_NEW_NOT_STARTED || status === TASK_NEW_IN_PROGRESS);\n\n        const TaskTypeIcon = task_type === TASK_TYPE_APPROVAL ? IconTaskApproval : IconTaskGeneral;\n\n        const isMenuVisible = (permissions.can_delete || permissions.can_update) && !isPending;\n\n        return (\n            <div className=\"bcs-Task\">\n                {inlineError ? <ActivityError {...inlineError} /> : null}\n                <Media\n                    className={classNames('bcs-Task-media', {\n                        'bcs-is-pending': isPending || isLoading,\n                    })}\n                    data-testid=\"task-card\"\n                >\n                    <Media.Figure className=\"bcs-Task-avatar\">\n                        <Avatar getAvatarUrl={getAvatarUrl} user={createdByUser} />\n                        <TaskTypeIcon width={20} height={20} className=\"bcs-Task-avatarBadge\" />\n                    </Media.Figure>\n                    <Media.Body>\n                        {isMenuVisible && (\n                            <TetherComponent\n                                attachment=\"top right\"\n                                className=\"bcs-Task-deleteConfirmationModal\"\n                                constraints={[{ to: 'scrollParent', attachment: 'together' }]}\n                                targetAttachment=\"bottom right\"\n                            >\n                                <Media.Menu\n                                    isDisabled={isConfirmingDelete}\n                                    data-testid=\"task-actions-menu\"\n                                    menuProps={{\n                                        'data-resin-component': ACTIVITY_TARGETS.TASK_OPTIONS,\n                                    }}\n                                >\n                                    {permissions.can_update && (\n                                        <MenuItem\n                                            data-resin-target={ACTIVITY_TARGETS.TASK_OPTIONS_EDIT}\n                                            data-testid=\"edit-task\"\n                                            onClick={this.handleEditClick}\n                                        >\n                                            <IconPencil color={bdlGray80} />\n                                            <FormattedMessage {...messages.taskEditMenuItem} />\n                                        </MenuItem>\n                                    )}\n                                    {permissions.can_delete && (\n                                        <MenuItem\n                                            data-resin-target={ACTIVITY_TARGETS.TASK_OPTIONS_DELETE}\n                                            data-testid=\"delete-task\"\n                                            onClick={this.handleDeleteClick}\n                                        >\n                                            <IconTrash color={bdlGray80} />\n                                            <FormattedMessage {...messages.taskDeleteMenuItem} />\n                                        </MenuItem>\n                                    )}\n                                </Media.Menu>\n                                {isConfirmingDelete && (\n                                    <DeleteConfirmation\n                                        data-resin-component={ACTIVITY_TARGETS.TASK_OPTIONS}\n                                        isOpen={isConfirmingDelete}\n                                        message={messages.taskDeletePrompt}\n                                        onDeleteCancel={this.handleDeleteCancel}\n                                        onDeleteConfirm={this.handleDeleteConfirm}\n                                    />\n                                )}\n                            </TetherComponent>\n                        )}\n                        <div className=\"bcs-Task-headline\">\n                            <FormattedMessage\n                                {...getMessageForTask(!!currentUserAssignment, task_type)}\n                                values={{\n                                    user: (\n                                        <UserLink\n                                            {...createdByUser}\n                                            data-resin-target={ACTIVITY_TARGETS.PROFILE}\n                                            getUserProfileUrl={getUserProfileUrl}\n                                        />\n                                    ),\n                                }}\n                            />\n                        </div>\n                        <div>\n                            <ActivityTimestamp date={createdAtTimestamp} />\n                        </div>\n                        <div>\n                            <ActivityMessage\n                                id={id}\n                                tagged_message={description}\n                                translatedTaggedMessage={translatedTaggedMessage}\n                                {...translations}\n                                translationFailed={error ? true : null}\n                                getUserProfileUrl={getUserProfileUrl}\n                            />\n                        </div>\n                        <div className=\"bcs-Task-statusContainer\">\n                            {!!due_at && <TaskDueDate dueDate={due_at} status={status} />}\n                            <TaskStatus status={status} />\n                            <TaskCompletionRuleIcon completionRule={completion_rule} />\n                        </div>\n                        <div className=\"bcs-Task-assigneeListContainer\">\n                            <AssigneeList\n                                isOpen={isAssigneeListOpen}\n                                onCollapse={this.handleAssigneeListCollapse}\n                                onExpand={this.handleAssigneeListExpand}\n                                getAvatarUrl={getAvatarUrl}\n                                initialAssigneeCount={3}\n                                users={isAssigneeListOpen ? assignedToFull : assigned_to}\n                            />\n                        </div>\n                        {currentUserAssignment && shouldShowActions && (\n                            <div className=\"bcs-Task-actionsContainer\">\n                                <TaskActions\n                                    taskType={task_type}\n                                    onTaskApproval={\n                                        isPending\n                                            ? noop\n                                            : () => {\n                                                  this.handleTaskAction(\n                                                      id,\n                                                      currentUserAssignment.id,\n                                                      TASK_NEW_APPROVED,\n                                                  );\n                                              }\n                                    }\n                                    onTaskReject={\n                                        isPending\n                                            ? noop\n                                            : () =>\n                                                  this.handleTaskAction(id, currentUserAssignment.id, TASK_NEW_REJECTED)\n                                    }\n                                    onTaskComplete={\n                                        isPending\n                                            ? noop\n                                            : () =>\n                                                  this.handleTaskAction(\n                                                      id,\n                                                      currentUserAssignment.id,\n                                                      TASK_NEW_COMPLETED,\n                                                  )\n                                    }\n                                />\n                            </div>\n                        )}\n                    </Media.Body>\n                </Media>\n                <TaskModal\n                    editMode={TASK_EDIT_MODE_EDIT}\n                    error={modalError}\n                    feedbackUrl={getFeatureConfig(features, 'activityFeed.tasks').feedbackUrl || ''}\n                    onSubmitError={this.handleEditSubmitError}\n                    onSubmitSuccess={this.handleEditModalClose}\n                    onModalClose={this.handleEditModalClose}\n                    isTaskFormOpen={isEditing}\n                    taskFormProps={{\n                        id,\n                        approvers: assignedToFull.entries,\n                        approverSelectorContacts,\n                        completionRule: completion_rule,\n                        getApproverWithQuery,\n                        getAvatarUrl,\n                        createTask: () => {},\n                        editTask: onEdit,\n                        dueDate: due_at,\n                        message: description,\n                    }}\n                    taskType={task_type}\n                />\n            </div>\n        );\n    }\n}\n\nexport { Task as TaskComponent };\nexport default flow([withFeatureConsumer, withAPIContext])(Task);\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport messages from './messages';\nimport Button from '../../../../components/button';\nimport { TASK_TYPE_APPROVAL, TASK_TYPE_GENERAL } from '../../../../constants';\nimport type { TaskType } from '../../../../common/types/tasks';\n\nimport './TaskActions.scss';\n\ntype Props = {|\n    onTaskApproval: Function,\n    onTaskComplete: Function,\n    onTaskReject: Function,\n    taskType: TaskType,\n|};\n\nconst TaskActions = ({ onTaskApproval, onTaskReject, onTaskComplete, taskType }: Props): React.Node => {\n    let action = null;\n    if (taskType === TASK_TYPE_APPROVAL) {\n        action = (\n            <>\n                <Button\n                    className=\"bcs-TaskActions-button\"\n                    data-testid=\"approve-task\"\n                    onClick={onTaskApproval}\n                    data-resin-target={ACTIVITY_TARGETS.TASK_APPROVE}\n                >\n                    <FormattedMessage {...messages.tasksFeedApproveAction} />\n                </Button>\n                <Button\n                    className=\"bcs-TaskActions-button\"\n                    data-testid=\"reject-task\"\n                    onClick={onTaskReject}\n                    data-resin-target={ACTIVITY_TARGETS.TASK_REJECT}\n                >\n                    <FormattedMessage {...messages.tasksFeedRejectAction} />\n                </Button>\n            </>\n        );\n    } else if (taskType === TASK_TYPE_GENERAL) {\n        action = (\n            <Button\n                className=\"bcs-TaskActions-button\"\n                data-testid=\"complete-task\"\n                onClick={onTaskComplete}\n                data-resin-target={ACTIVITY_TARGETS.TASK_COMPLETE}\n            >\n                <FormattedMessage {...messages.tasksFeedCompleteAction} />\n            </Button>\n        );\n    }\n    return <div className=\"bcs-TaskActions\">{action}</div>;\n};\n\nexport default TaskActions;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { TASK_COMPLETION_RULE_ANY } from '../../../../constants';\nimport messages from './messages';\nimport Tooltip from '../../../../components/tooltip';\nimport IconAnyTask from '../../../../icons/general/IconAnyTask';\nimport type { TaskCompletionRule } from '../../../../common/types/tasks';\n\nimport './TaskCompletionRuleIcon.scss';\n\ntype Props = {|\n    completionRule: ?TaskCompletionRule,\n|};\n\nconst TaskCompletionRuleIcon = ({ completionRule }: Props): React.Node =>\n    completionRule === TASK_COMPLETION_RULE_ANY && (\n        <Tooltip position=\"top-center\" text={<FormattedMessage {...messages.taskAnyAffordanceTooltip} />}>\n            <span>\n                <IconAnyTask height={11} width={11} className=\"bcs-TaskCompletionRuleIcon\" />\n            </span>\n        </Tooltip>\n    );\n\nexport default TaskCompletionRuleIcon;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport { ReadableTime } from '../../../../components/time';\n\nimport { TASK_NEW_NOT_STARTED } from '../../../../constants';\n\nimport type { TaskStatus } from '../../../../common/types/tasks';\nimport type { ISODate } from '../../../../common/types/core';\n\nimport './TaskDueDate.scss';\n\ntype Props = {\n    dueDate: ISODate,\n    status: TaskStatus,\n};\n\nconst TaskDueDate = ({ dueDate, status }: Props): React.Node => {\n    const isOverdue = dueDate ? status === TASK_NEW_NOT_STARTED && new Date(dueDate) < Date.now() : false;\n    const fullDueDate = new Date(dueDate);\n\n    return (\n        <div\n            className={classNames('bcs-TaskDueDate', {\n                'bcs-is-taskOverdue': isOverdue,\n            })}\n            data-testid=\"task-due-date\"\n        >\n            <FormattedMessage\n                {...messages.taskDueDateLabel}\n                values={{\n                    date: <ReadableTime alwaysShowTime timestamp={fullDueDate.getTime()} />,\n                }}\n            />\n        </div>\n    );\n};\n\nexport default TaskDueDate;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport camelCase from 'lodash/camelCase';\nimport {\n    TASK_NEW_APPROVED,\n    TASK_NEW_REJECTED,\n    TASK_NEW_COMPLETED,\n    TASK_NEW_NOT_STARTED,\n    TASK_NEW_IN_PROGRESS,\n} from '../../../../constants';\nimport messages from './messages';\nimport type { TaskStatus } from '../../../../common/types/tasks';\n\nimport './TaskStatus.scss';\n\ntype Props = {|\n    status: TaskStatus,\n|};\n\nconst statusMessageKeyMap = {\n    [TASK_NEW_APPROVED]: messages.tasksFeedApprovedLabel,\n    [TASK_NEW_COMPLETED]: messages.tasksFeedCompletedLabel,\n    [TASK_NEW_REJECTED]: messages.tasksFeedRejectedLabel,\n    [TASK_NEW_NOT_STARTED]: messages.tasksFeedInProgressLabel,\n    [TASK_NEW_IN_PROGRESS]: messages.tasksFeedInProgressLabel,\n};\n\nconst Status = React.memo<Props>(({ status }: Props) => (\n    <FormattedMessage\n        {...messages.tasksFeedStatusLabel}\n        values={{\n            taskStatus: (\n                <span className={`bcs-TaskStatus-message ${camelCase(status)}`}>\n                    <FormattedMessage {...statusMessageKeyMap[status]} />\n                </span>\n            ),\n        }}\n    >\n        {(...msg: Array<React.Node>): React.Node => <div className=\"bcs-TaskStatus\">{msg}</div>}\n    </FormattedMessage>\n));\n\nexport default Status;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './Task';\nexport { TaskComponent } from './Task';\n","/**\n * @flow\n * @file i18n messages\n * @author Box\n */\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    taskCollaboratorLoadErrorMessage: {\n        id: 'be.contentSidebar.activityFeed.taskNew.taskCollaboratorLoadErrorMessage',\n        description: 'Error message when we failed to load the collaborators when user tries to edit a task',\n        defaultMessage: 'An error has occurred while loading collaborators for this task. Please try again.',\n    },\n    taskShowMoreAssignees: {\n        id: 'be.contentSidebar.activityFeed.taskNew.taskShowMoreAssignees',\n        description:\n            'Button name to expand task assignee list, additionalAssigneeCount is the number of additional task assignees that can be shown.',\n        defaultMessage: 'Show {additionalAssigneeCount} More',\n    },\n    taskShowMoreAssigneesOverflow: {\n        id: 'be.contentSidebar.activityFeed.taskNew.taskShowMoreAssigneesOverflow',\n        description:\n            'Button name to expand task assignee list, when there is an unknown number of assignees beyond additionalAssigneeCount.',\n        defaultMessage: '{additionalAssigneeCount, plural, one {Show #+ More} other {Show #+ More}}',\n    },\n    taskShowLessAssignees: {\n        id: 'be.contentSidebar.activityFeed.taskNew.taskShowLessAssignees',\n        description: 'Button name to hide task assignee list',\n        defaultMessage: 'Show Less',\n    },\n    taskDueDateLabel: {\n        id: 'be.contentSidebar.activityFeed.taskNew.taskDueDateLabel',\n        defaultMessage: 'Due: {date}',\n        description: 'Label and date for task due date',\n    },\n    tasksFeedApproveAction: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedApproveAction',\n        defaultMessage: 'Approve',\n        description: 'Approve option for an approval task',\n    },\n    tasksFeedCompleteAction: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedCompleteAction',\n        defaultMessage: 'Mark as Complete',\n        description: 'Completion option for a general task',\n    },\n    tasksFeedRejectAction: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedRejectAction',\n        defaultMessage: 'Reject',\n        description: 'Reject option for an approval task',\n    },\n    tasksFeedStatusLabel: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedStatusLabel',\n        defaultMessage: 'Status: {taskStatus}',\n        description: 'Label for the task status',\n    },\n    tasksFeedCompletedLabel: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedCompletedLabel',\n        defaultMessage: 'Completed',\n        description: 'Label for a completed task',\n    },\n    tasksFeedApprovedLabel: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedApprovedLabel',\n        defaultMessage: 'Approved',\n        description: 'Label for an approved task',\n    },\n    tasksFeedRejectedLabel: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedRejectedLabel',\n        defaultMessage: 'Rejected',\n        description: 'Label for a rejected task',\n    },\n    tasksFeedInProgressLabel: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedInProgressLabel',\n        defaultMessage: 'In Progress',\n        description: 'Label for a task in progress',\n    },\n    tasksFeedHeadlineApprovalCurrentUser: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedHeadlineApprovalCurrentUser',\n        defaultMessage: '{ user } assigned you an Approval Task',\n        description: 'Comment headline for an approval task assigned to the current user',\n    },\n    tasksFeedHeadlineApproval: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedHeadlineApproval',\n        defaultMessage: '{ user } assigned an Approval Task',\n        description: 'Comment headline for an approval task',\n    },\n    tasksFeedHeadlineGeneralCurrentUser: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedHeadlineGeneralCurrentUser',\n        defaultMessage: '{ user } assigned you a Task',\n        description: 'Comment headline for a general task assigned to the current user',\n    },\n    tasksFeedHeadlineGeneral: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedHeadlineGeneral',\n        defaultMessage: '{ user } assigned a Task',\n        description: 'Comment headline for a general task',\n    },\n    tasksFeedMoreAssigneesLabel: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedMoreAssigneesLabel',\n        defaultMessage: 'See all assignees',\n        description: 'Label for button to expand flyout to see all task assignees',\n    },\n    tasksFeedAssigneeListTitle: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedAssigneeListTitle',\n        defaultMessage: 'Assignees',\n        description: 'Title for list of all task assignees',\n    },\n    tasksFeedStatusRejected: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedStatusRejected',\n        defaultMessage: 'Rejected {dateTime}',\n        description: 'Rejected task status, where dateTime is a readable time like \"Today at 2pm\"',\n    },\n    tasksFeedStatusApproved: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedStatusApproved',\n        defaultMessage: 'Approved {dateTime}',\n        description: 'Approved task status, where dateTime is a readable time like \"Today at 2pm\"',\n    },\n    tasksFeedStatusCompleted: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedStatusCompleted',\n        defaultMessage: 'Completed {dateTime}',\n        description: 'Completed task status, where dateTime is a readable time like \"Today at 2pm\"',\n    },\n    taskAssignmentCompleted: {\n        id: 'be.contentSidebar.activityFeed.taskNew.taskAssignmentCompleted',\n        defaultMessage: 'Completed',\n        description: 'Title for checkmark icon indicating someone completed a task',\n    },\n    taskDeleteMenuItem: {\n        id: 'be.contentSidebar.activityFeed.task.taskDeleteMenuItem',\n        defaultMessage: 'Delete task',\n        description: 'Text to show on menu item to delete task',\n    },\n    taskEditMenuItem: {\n        id: 'be.contentSidebar.activityFeed.task.taskEditMenuItem',\n        defaultMessage: 'Modify task',\n        description: 'Text to show on menu item to edit task',\n    },\n    taskDeletePrompt: {\n        id: 'be.contentSidebar.activityFeed.task.taskDeletePrompt',\n        defaultMessage: 'Are you sure you want to permanently delete this task?',\n        description: 'Confirmation prompt text to delete task',\n    },\n    taskAnyAffordanceTooltip: {\n        id: 'be.contentSidebar.activityFeed.task.taskAnyAffordanceTooltip',\n        defaultMessage: 'Only one assignee is required to complete this task',\n        description: 'Tooltip text for any task icon, explaining that the task only needs one assignee to complete.',\n    },\n});\n\nexport default messages;\n","/**\n * @flow\n * @file Util for formatting tagged messages\n */\n\nimport * as React from 'react';\nimport { Link } from '../../../../components/link';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport UserLink from '../common/user-link';\n\n// this regex matches one of the following regular expressions:\n// mentions: ([@＠﹫]\\[[0-9]+:[^\\]]+])\n// urls: (?:\\b)((?:(?:ht|f)tps?:\\/\\/)[\\w\\._\\-]+(:\\d+)?(\\/[\\w\\-_\\.~\\+\\/#\\?&%=:\\[\\]@!$'\\(\\)\\*;,]*)?)\n// NOTE: There are useless escapes in the regex below, should probably remove them when safe\n// eslint-disable-next-line\nconst splitRegex = /((?:[@＠﹫]\\[[0-9]+:[^\\]]+])|(?:\\b(?:(?:ht|f)tps?:\\/\\/)[\\w\\._\\-]+(?::\\d+)?(?:\\/[\\w\\-_\\.~\\+\\/#\\?&%=:\\[\\]@!$'\\(\\)\\*;,]*)?))/gim;\n\n/**\n * Formats a message a string and replaces the following:\n * - all occurrence of mention patterns with a UserLink component\n * - all occurrence of urls with a Link component\n * Ex mention format: @[123:Hello World]\n * @param {String} tagged_message The message string to format\n * @param {String} itemID The id of the tagged message\n * @param {Boolean} shouldReturnString The boolean value whether it should return string\n * @param {Function} [getUserProfileUrl] The method to generate a user profile url\n * @returns {String|React.Node}\n */\nconst formatTaggedMessage = (\n    tagged_message: string,\n    itemID: string,\n    shouldReturnString: boolean,\n    getUserProfileUrl?: Function,\n): React.Node | string => {\n    const contentItems = tagged_message.split(splitRegex).map((text: string, contentIndex: number) => {\n        const contentKey = `${contentIndex}-${itemID}`;\n        // attempt mention match\n        const mentionMatch = text.match(/([@＠﹫])\\[([0-9]+):([^\\]]+)]/i);\n        if (mentionMatch) {\n            const [, trigger, id, name] = mentionMatch;\n            if (shouldReturnString) {\n                return `${trigger}${name}`;\n            }\n\n            return (\n                <UserLink\n                    key={contentKey}\n                    className=\"bcs-comment-mention\"\n                    data-resin-target={ACTIVITY_TARGETS.MENTION}\n                    getUserProfileUrl={getUserProfileUrl}\n                    id={id}\n                    name={`${trigger}${name}`}\n                />\n            );\n        }\n\n        if (!shouldReturnString) {\n            // attempt url match\n            // NOTE: There are useless escapes in the regex below, should probably remove them when safe\n            const urlMatch = text.match(\n                // eslint-disable-next-line no-useless-escape\n                /((?:(?:ht|f)tps?:\\/\\/)[\\w\\._\\-]+(?::\\d+)?(?:\\/[\\w\\-_\\.~\\+\\/#\\?&%=:\\[\\]@!$'\\(\\)\\*;,]*)?)/i,\n            );\n            if (urlMatch) {\n                const [, url] = urlMatch;\n                return (\n                    <Link key={contentKey} href={url}>\n                        {url}\n                    </Link>\n                );\n            }\n        }\n\n        return text;\n    });\n\n    return shouldReturnString ? contentItems.join('') : contentItems;\n};\n\nexport default formatTaggedMessage;\n","/**\n * @flow\n * @file Collapsed Version component\n */\n\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport IconInfoInverted from '../../../../icons/general/IconInfoInverted';\nimport PlainButton from '../../../../components/plain-button';\nimport messages from '../../../common/messages';\nimport selectors from '../../../common/selectors/version';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport './Version.scss';\n\nfunction getMessageForAction(\n    action: string,\n    collaborators: { [collaborator_id: string]: User },\n    version_start: number,\n    version_end: number,\n): React.Node {\n    // We only support collapsing for multiple upload versions\n    if (action !== 'upload') {\n        return null;\n    }\n\n    const collaboratorIDs = Object.keys(collaborators);\n    const numberOfCollaborators = collaboratorIDs.length;\n\n    const versionRange: React.Node = (\n        <span className=\"bcs-Version-range\">\n            {version_start} - {version_end}\n        </span>\n    );\n\n    if (numberOfCollaborators === 1) {\n        const collaborator = collaborators[collaboratorIDs[0]];\n        return (\n            <FormattedMessage\n                {...messages.versionUploadCollapsed}\n                values={{\n                    name: <strong>{collaborator.name}</strong>,\n                    versions: versionRange,\n                }}\n            />\n        );\n    }\n\n    return (\n        <FormattedMessage\n            {...messages.versionMultipleUsersUploaded}\n            values={{\n                numberOfCollaborators,\n                versions: versionRange,\n            }}\n        />\n    );\n}\n\ntype Props = {\n    collaborators: { [collaborator_id: string]: User },\n    onInfo?: Function,\n    version_end: number,\n    version_start: number,\n    versions: FileVersions,\n} & InjectIntlProvidedProps;\n\nconst CollapsedVersion = (props: Props): React.Node => {\n    const action = selectors.getVersionAction(props);\n    const { collaborators, intl, onInfo, versions, version_start, version_end } = props;\n\n    return (\n        <div className=\"bcs-Version\">\n            <span className=\"bcs-Version-message\">\n                {getMessageForAction(action, collaborators, version_start, version_end)}\n            </span>\n            {onInfo ? (\n                <span className=\"bcs-Version-actions\">\n                    <PlainButton\n                        aria-label={intl.formatMessage(messages.getVersionInfo)}\n                        className=\"bcs-Version-info\"\n                        data-resin-target={ACTIVITY_TARGETS.VERSION_CARD}\n                        onClick={() => {\n                            onInfo({ versions });\n                        }}\n                        type=\"button\"\n                    >\n                        <IconInfoInverted height={16} width={16} />\n                    </PlainButton>\n                </span>\n            ) : null}\n        </div>\n    );\n};\n\nexport { CollapsedVersion as CollapsedVersionBase };\nexport default injectIntl(CollapsedVersion);\n","/**\n * @flow\n * @file Version component\n */\n\nimport * as React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport IconInfoInverted from '../../../../icons/general/IconInfoInverted';\nimport messages from '../../../common/messages';\nimport PlainButton from '../../../../components/plain-button';\nimport selectors from '../../../common/selectors/version';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport {\n    VERSION_UPLOAD_ACTION,\n    VERSION_DELETE_ACTION,\n    VERSION_PROMOTE_ACTION,\n    VERSION_RESTORE_ACTION,\n} from '../../../../constants';\nimport './Version.scss';\n\ntype Props = {\n    id: string,\n    modified_by: User,\n    onInfo?: Function,\n    version_number: string,\n    version_promoted?: string,\n} & InjectIntlProvidedProps;\n\nconst ACTION_MAP = {\n    [VERSION_DELETE_ACTION]: messages.versionDeleted,\n    [VERSION_PROMOTE_ACTION]: messages.versionPromoted,\n    [VERSION_RESTORE_ACTION]: messages.versionRestored,\n    [VERSION_UPLOAD_ACTION]: messages.versionUploaded,\n};\n\nconst Version = (props: Props): React.Node => {\n    const action = selectors.getVersionAction(props);\n    const { id, intl, onInfo, version_number, version_promoted } = props;\n    const { name } = selectors.getVersionUser(props);\n\n    return (\n        <div className=\"bcs-Version\">\n            <span className=\"bcs-Version-message\">\n                <FormattedMessage\n                    {...ACTION_MAP[action]}\n                    values={{\n                        name: <strong>{name}</strong>,\n                        version_number,\n                        version_promoted,\n                    }}\n                />\n            </span>\n            {onInfo ? (\n                <span className=\"bcs-Version-actions\">\n                    <PlainButton\n                        aria-label={intl.formatMessage(messages.getVersionInfo)}\n                        className=\"bcs-Version-info\"\n                        data-resin-target={ACTIVITY_TARGETS.VERSION_CARD}\n                        onClick={() => {\n                            onInfo({ id, version_number });\n                        }}\n                        type=\"button\"\n                    >\n                        <IconInfoInverted height={16} width={16} />\n                    </PlainButton>\n                </span>\n            ) : null}\n        </div>\n    );\n};\n\nexport { Version as VersionBase };\nexport default injectIntl(Version);\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default as CollapsedVersion } from './CollapsedVersion';\nexport { default } from './Version';\n","/**\n * @flow\n * @file i18n messages\n * @author Box\n */\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    tasksAddTask: {\n        id: 'be.contentSidebar.addTask',\n        defaultMessage: 'Add Task',\n        description: 'label for button that opens task popup',\n    },\n    taskAddTaskGeneral: {\n        id: 'be.contentSidebar.addTask.general',\n        defaultMessage: 'General Task',\n        description: 'label for menu item that opens general task popup',\n    },\n    taskAddTaskGeneralDescription: {\n        id: 'be.contentSidebar.addTask.general.description',\n        defaultMessage: 'Assignees will be responsible for marking tasks as complete',\n        description: 'description for menu item that opens general task popup',\n    },\n    taskAddTaskApproval: {\n        id: 'be.contentSidebar.addTask.approval',\n        defaultMessage: 'Approval Task',\n        description: 'label for menu item that opens approval task popup',\n    },\n    taskAddTaskApprovalDescription: {\n        id: 'be.contentSidebar.addTask.approval.description',\n        defaultMessage: 'Assignees will be responsible for approving or rejecting tasks',\n        description: 'description for menu item that opens approval task popup',\n    },\n    tasksCreateGeneralTaskFormTitle: {\n        id: 'be.contentSidebar.addTask.general.title',\n        defaultMessage: 'Create General Task',\n        description: 'title for general task popup',\n    },\n    tasksCreateApprovalTaskFormTitle: {\n        id: 'be.contentSidebar.addTask.approval.title',\n        defaultMessage: 'Create Approval Task',\n        description: 'title for approval task popup',\n    },\n    tasksEditApprovalTaskFormTitle: {\n        id: 'be.contentSidebar.editTask.approval.title',\n        defaultMessage: 'Modify Approval Task',\n        description: 'title for when editing an existing approval task',\n    },\n    tasksEditGeneralTaskFormTitle: {\n        id: 'be.contentSidebar.editTask.general.title',\n        defaultMessage: 'Modify General Task',\n        description: 'modal title for when editing an existing general task',\n    },\n});\n\nexport default messages;\n","/**\n * @flow\n * @file withErrorHandling higher order component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ErrorMask from '../../components/error-mask/ErrorMask';\nimport InlineError from '../../components/inline-error/InlineError';\n\nimport SidebarSection from './SidebarSection';\n\ntype Props = {\n    errorCode?: string,\n} & Errors;\n\nconst withErrorHandling = (WrappedComponent: React.ComponentType<any>) => ({\n    maskError,\n    inlineError,\n    errorCode,\n    ...rest\n}: Props) => {\n    if (maskError) {\n        return (\n            <SidebarSection>\n                <ErrorMask\n                    errorHeader={<FormattedMessage {...maskError.errorHeader} />}\n                    errorSubHeader={\n                        maskError.errorSubHeader ? <FormattedMessage {...maskError.errorSubHeader} /> : undefined\n                    }\n                />\n            </SidebarSection>\n        );\n    }\n    if (inlineError) {\n        return (\n            <>\n                <InlineError title={<FormattedMessage {...inlineError.title} />}>\n                    {<FormattedMessage {...inlineError.content} />}\n                </InlineError>\n                <WrappedComponent {...rest} />\n            </>\n        );\n    }\n\n    return <WrappedComponent {...rest} />;\n};\n\nexport default withErrorHandling;\n","// @flow\nimport * as React from 'react';\nimport uniqueId from 'lodash/uniqueId';\n\nimport AccessibleSVG from '../accessible-svg';\n\nconst ICON_CLASS = 'unknown-user-avatar';\n\ntype Props = {\n    className: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nclass UnknownUserAvatar extends React.PureComponent<Props> {\n    static defaultProps = {\n        className: '',\n        height: 28,\n        width: 28,\n    };\n\n    idPrefix = `${uniqueId(ICON_CLASS)}-`;\n\n    render() {\n        const { className, height, title, width } = this.props;\n        return (\n            <AccessibleSVG\n                className={`${ICON_CLASS} ${className}`}\n                height={height}\n                title={title}\n                viewBox=\"0 0 28 28\"\n                width={width}\n            >\n                <defs>\n                    <circle cx=\"14\" cy=\"14\" id={`${this.idPrefix}a`} r=\"14\" />\n                </defs>\n                <g fill=\"none\" fillRule=\"evenodd\">\n                    <use className=\"background-fill-color\" fill=\"#EDEDED\" xlinkHref={`#${this.idPrefix}a`} />\n                    <path\n                        className=\"fill-color\"\n                        d=\"M5.5 25.1C6.7 21 10 18 14 18s7.3 3 8.5 7.1a14 14 0 0 1-17 0zM14 16a5 5 0 1 1 0-10 5 5 0 0 1 0 10z\"\n                        fill=\"#C3C3C3\"\n                    />\n                </g>\n            </AccessibleSVG>\n        );\n    }\n}\n\nexport default UnknownUserAvatar;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\nimport { bdlGray62 } from '../../styles/variables';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it is not purely decorative for accessibility */\n    title?: string,\n    width?: number,\n};\n\nconst IconAnyTask = ({ className = '', color = bdlGray62, height = 32, title, width = 32 }: Props) => (\n    <AccessibleSVG className={className} height={height} title={title} viewBox=\"0 0 32 32\" width={width}>\n        <g fill={color} fillRule=\"nonzero\">\n            <path d=\"M28.7484364 16.4549424c0 1.0039348.7442362 1.8177849 1.6622981 1.8177849.9180618 0 1.662298-.8138501 1.662298-1.8177849V5.54823284c0-1.47292747-1.5180216-2.33430191-2.6193324-1.48629378L26.960253 5.9818905c-.7506441.57799516-.9306825 1.71198921-.402127 2.5328466.4995837.7758637 1.4533974.99427836 2.1903104.52782657v7.41237873zM13.1639416 17.5454545c4.0166164 0 7.2727273-3.2561109 7.2727273-7.2727272C20.4366689 6.25611091 17.180558 3 13.1639416 3c-4.01661637 0-7.27272728 3.25611091-7.27272728 7.2727273 0 4.0166163 3.25611091 7.2727272 7.27272728 7.2727272zm0-3.6363636c-2.0083082 0-3.63636365-1.6280554-3.63636365-3.6363636 0-2.00830821 1.62805545-3.63636366 3.63636365-3.63636366s3.6363636 1.62805545 3.6363636 3.63636366c0 2.0083082-1.6280554 3.6363636-3.6363636 3.6363636zM26.0799741 26.82097c-2.6627973-4.6162045-7.5876175-7.459488-12.9167671-7.4573363-5.33091328-.0023936-10.25839928 2.8441776-12.9201858 7.4647912-.50123987.8701058-.20221498 1.9818011.66789077 2.4830409.87010576.5012399 1.98180104.202215 2.48304091-.6678907 2.01238031-3.4933049 5.73768893-5.6453874 9.76917202-5.6435766 4.0305283-.0016279 7.7538215 2.147969 9.766966 5.6379405.5017421.8698163 1.6136099 1.1681993 2.4834261.6664571.8698162-.5017421 1.1681992-1.6136098.6664571-2.4834261z\" />\n        </g>\n    </AccessibleSVG>\n);\n\nexport default IconAnyTask;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconInfoInverted = ({ className = '', color = '#000000', height = 18, title, width = 18 }: Props) => (\n    <AccessibleSVG\n        className={`icon-info-inverted ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 18 18\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M8.1 13.5h1.8V8.1H8.1v5.4zM9 0C4.05 0 0 4.05 0 9s4.05 9 9 9 9-4.05 9-9-4.05-9-9-9zm0 16.2c-3.96 0-7.2-3.24-7.2-7.2S5.04 1.8 9 1.8s7.2 3.24 7.2 7.2-3.24 7.2-7.2 7.2zm-.9-9.9h1.8V4.5H8.1v1.8z\"\n            fill={color}\n            fillRule=\"evenodd\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconInfoInverted;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconPencil = ({ className = '', color = '#777777', height = 13, title, width = 13 }: Props) => (\n    <AccessibleSVG\n        className={`icon-pencil ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 13 13\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M12,1c-0.8-0.8-2.1-0.8-2.9,0L2,8.1c0,0,0,0-0.1,0.1l0,0c0,0,0,0,0,0.1l0,0L0.6,12c-0.1,0.2,0,0.4,0.2,0.5\n                c0.1,0,0.2,0,0.2,0l3.7-1.3l0,0c0,0,0,0,0.1,0l0,0c0,0,0,0,0.1-0.1l6.5-6.5l0,0L12,3.9C12.8,3.1,12.8,1.8,12,1z M4.6,10.2L2.8,8.4\n                l6-6l1.8,1.8L4.6,10.2z M2.4,9.1l1.5,1.5l-2.4,0.8L2.4,9.1z M11.5,3.4l-0.4,0.4L9.3,1.9l0.4-0.4c0.5-0.5,1.3-0.5,1.8,0\n                C12,2.1,12,2.9,11.5,3.4z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconPencil;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconRejected = ({ className = '', color = '#ED3757', height = 18, title, width = 18 }: Props) => (\n    <AccessibleSVG\n        className={`icon-rejected ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 18 18\"\n        width={width}\n    >\n        <g fill=\"none\" fillRule=\"evenodd\">\n            <circle cx={9} cy={9} fill={color} r={9} />\n            <path\n                d=\"M9 7.586l2.828-2.829 1.415 1.415L10.414 9l2.829 2.828-1.415 1.415L9 10.414l-2.828 2.829-1.415-1.415L7.586 9 4.757 6.172l1.415-1.415z\"\n                fill=\"#FFF\"\n                fillRule=\"nonzero\"\n            />\n        </g>\n    </AccessibleSVG>\n);\n\nexport default IconRejected;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\nimport type { TwoTonedIcon } from '../flowTypes';\nimport { bdlBoxBlue, white } from '../../styles/variables';\n\nconst IconTaskApproval = ({ className = '', height = 24, title, width = 24 }: TwoTonedIcon) => (\n    <AccessibleSVG\n        className={`bdl-IconTaskApproval ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 32 32\"\n        width={width}\n    >\n        <g fill=\"none\" fillRule=\"nonzero\">\n            <circle className=\"background-color\" fill={bdlBoxBlue} cx=\"16\" cy=\"16\" r=\"16\" />\n            <g transform=\"translate(8 5.333)\" className=\"foreground-color\" fill={white}>\n                <path d=\"M11.267 6.51c-1.133 2.242-1.669 4.276-1.614 6.102.006.213-.177.388-.405.388H6.752c-.228 0-.41-.175-.405-.388.055-1.826-.481-3.86-1.614-6.102C2.953 2.986 4.557 0 8 0s5.047 2.986 3.267 6.51z\" />\n                <rect y=\"14.337\" width=\"16\" height=\"3.353\" rx=\"1.676\" />\n                <rect x=\"1.143\" y=\"18.808\" width=\"13.714\" height=\"1.192\" rx=\".596\" />\n            </g>\n        </g>\n    </AccessibleSVG>\n);\n\nexport default IconTaskApproval;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\nimport type { TwoTonedIcon } from '../flowTypes';\nimport { bdlBoxBlue, white } from '../../styles/variables';\n\nconst IconTaskGeneral = ({ className = '', height = 24, title, width = 24 }: TwoTonedIcon) => (\n    <AccessibleSVG\n        className={`bdl-IconTaskGeneral ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 32 32\"\n        width={width}\n    >\n        <g fillRule=\"nonzero\" fill=\"none\">\n            <circle className=\"background-color\" fill={bdlBoxBlue} cx=\"16.162\" cy=\"16.162\" r=\"16\" />\n            <path\n                d=\"M11.717 8.162v.889c0 1.472.995 2.666 2.222 2.666h4.445c1.227 0 2.222-1.194 2.222-2.666v-.89h1.281c.766 0 1.386.62 1.386 1.386v13.23c0 .764-.62 1.385-1.386 1.385H10.436c-.765 0-1.385-.62-1.385-1.386V9.546c0-.764.62-1.384 1.385-1.384h1.281zm6.463 6.503l-2.741 2.924-1.354-1.203a.889.889 0 1 0-1.18 1.329l2 1.778c.36.32.909.295 1.238-.057l3.334-3.555a.889.889 0 1 0-1.297-1.216zm-4.981-6.503h5.926v.889c0 .49-.332.888-.741.888h-4.445c-.409 0-.74-.398-.74-.888v-.89z\"\n                className=\"foreground-color\"\n                fill={white}\n            />\n        </g>\n    </AccessibleSVG>\n);\n\nexport default IconTaskGeneral;\n","/**\n * Parse a comma separated values text and return an array of separated strings\n *\n * @param  {string} text The input string\n * @return {array} A list of separated strings\n *\n * @example\n * parse('a, b, \"c, d\"')\n * returns [\"a\", \"b\", \"c, d\"]\n */\nfunction parseCSV(text) {\n    if (text === null || typeof text === 'undefined') {\n        // Input text is either null or undefined\n        return [];\n    }\n\n    // Convert the comma separated text into array\n    //\n    // The logic of the regular expression is simple\n    // look ahead comma or carriage return and retrieve:\n    //   1. either strings that are surrounded by double quotes\n    //   2. or strings that do not contain comma and carriage return\n    const components = text.match(/(\".*?\"|[^\",\\r\\n]+)(?=\\s*[,\\r\\n]|\\s*$)/g);\n    if (!components) {\n        // No match pattern is found\n        return [];\n    }\n\n    return components.map(c => {\n        // Trim the leading and trailing spaces\n        c = c.trim();\n\n        // Remove double quote pairs from both ends\n        // example '\"\"\"abc\"\"\"' will be altered to 'abc'\n        while (c.length >= 2 && c.charAt(0) === '\"' && c.charAt(c.length - 1) === '\"') {\n            c = c.substr(1, c.length - 2);\n        }\n\n        return c;\n    });\n}\n\nexport default parseCSV;\n"],"sourceRoot":""}